{"version":3,"sources":["src/app/home/profile/changepassword/changepassword.component.html","src/app/home/profile/changepassword/changepassword-routing.module.ts","src/app/home/profile/changepassword/changepassword.component.scss","src/app/home/profile/changepassword/changepassword.component.ts","src/app/home/profile/changepassword/changepassword.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"main-card\\\">\\n    <div class=\\\"custom_form\\\">\\n        <form [formGroup]='change' (ngSubmit)='changePassword()'>\\n            <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/changepassword.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'PLACEHOLDERLCPASS'| translate}}\\\" [type]=\\\"ohide ? 'password' : 'text'\\\" maxlength=\\\"20\\\" class=\\\"form-control pass-space\\\" formControlName='oldPassword'>\\n                <button mat-icon-button matSuffix (click)=\\\"ohide = !ohide\\\" type=\\\"button\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                <mat-icon>{{ohide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                </button>\\n              </mat-form-field>\\n              <div *ngIf=\\\"(submitted) && getControl.oldPassword.errors\\\">\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.oldPassword.errors.required\\\">{{'CURRENTPASS'| translate}} </p>\\n              </div>\\n              <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/changepassword.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'PLACEHOLDERLNPASS'| translate}}\\\" [type]=\\\"nhide ? 'password' : 'text'\\\" maxlength=\\\"20\\\" formControlName='newPassword' class=\\\"form-control pass-space\\\">\\n                <button mat-icon-button matSuffix (click)=\\\"nhide = !nhide\\\" type=\\\"button\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                <mat-icon>{{nhide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                </button>\\n              </mat-form-field>\\n              <div *ngIf=\\\"(submitted ) && getControl.newPassword.errors\\\">\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.newPassword.errors.required\\\">{{'RESETPASSREQ'| translate}}</p>\\n                <!-- <p class=\\\"color error\\\" *ngIf=\\\"getControl.newPassword.errors.minlength\\\">{{'PASSPATTERN'| translate}}</p> -->\\n                <span *ngIf=\\\"!getControl.newPassword.errors.required\\\">\\n                  <p class=\\\"color error\\\" *ngIf=\\\"getControl.newPassword.errors.invalidPassword\\\">{{'PASSPATTERN'| translate}}</p>\\n                </span>\\n              </div>\\n              <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/changepassword.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'PLACEHOLDERLCONFIRMPASS'| translate}}\\\" [type]=\\\"chide ? 'password' : 'text'\\\" maxlength=\\\"20\\\"  formControlName='confirmPassword' class=\\\"form-control pass-space\\\">\\n                <button mat-icon-button matSuffix (click)=\\\"chide = !chide\\\" type=\\\"button\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                <mat-icon>{{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                </button>\\n              </mat-form-field>\\n              <div *ngIf=\\\"(submitted) && getControl.confirmPassword.errors\\\">\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.confirmPassword.errors.required\\\">{{'RESETPASSCNFREQ'| translate}}</p>\\n                <span *ngIf=\\\"!getControl.confirmPassword.errors.required\\\">\\n                  <p class=\\\"color error\\\" *ngIf=\\\"(getControl.confirmPassword.invalid)\\\">{{'RESETPASSNOTMATCH'| translate}}</p>\\n                </span>\\n              </div>\\n              <div class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-submit\\\">Save</button>\\n              </div>\\n            </form>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChangepasswordComponent } from './changepassword.component';\n\nconst routes: Routes = [{\n  path:'', component: ChangepasswordComponent\n}];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChangepasswordRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvcHJvZmlsZS9jaGFuZ2VwYXNzd29yZC9jaGFuZ2VwYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { HttpRequestService } from 'src/app/shared/service/http-request.service';\nimport { Router } from '@angular/router';\nimport { Helper } from 'src/app/shared/service/helper.service';\nimport { PassValid, ValidationService, passValidator } from 'src/app/shared/service/validation-service';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\nimport { ErrorService } from 'src/app/shared/service/error.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.scss']\n})\nexport class ChangepasswordComponent implements OnInit {\n  ohide = true;\n  chide = true;\n  nhide = true;\n  unsubscribeAll: Subject<any>;\n  change: FormGroup\n  submitted: boolean;\n  public profileImage: any = '../../../assets/images/profile.png';\n  userDetails: any;\n  passShow = true;\n  cPassShow = true;\n  nPassShow = true;\n  isEqualNewPass: boolean = false;\n  constructor(\n    private httpService: HttpRequestService,\n    private router: Router,\n    private fb: FormBuilder,\n    private helper: Helper,\n    private trns : TranslatePipe, \n    private error : ErrorService) { \n      this.unsubscribeAll = new Subject;\n    }\n\n  ngOnInit() {\n\n    this.userDetails = this.helper.parseObject(localStorage.getItem('userDetails'));\n    this.change = this.fb.group({\n      oldPassword: new FormControl(null, [Validators.required]),\n      newPassword: new FormControl(null, [Validators.required, ValidationService.passwordValidator]),\n      confirmPassword: new FormControl(null, [Validators.required, passValidator]),\n    }\n    );\n    this.change.get('newPassword').valueChanges\n    .pipe(takeUntil(this.unsubscribeAll))\n    .subscribe(() => {\n      this.change.get('confirmPassword').updateValueAndValidity();\n    });\n  }\n\n  get getControl() { return this.change.controls; }\n  changePassword() {\n    this.submitted = true;\n    if (this.change.invalid) {\n      return;\n    } else {\n      this.change.value['new_pass'] = this.change.value.newPassword;\n      this.change.value['old_pass'] = this.change.value.oldPassword;\n      this.httpService.getRequest('PUT', 'CHANGEPASS', this.change.value, '').subscribe((response: any) => {\n        if (response.status=== 1) {\n          this.submitted = true;\n          this.router.navigateByUrl('/')\n            .then(() => {\n              this.httpService.sucsTostr(this.trns.transform('SUCCESS'), this.trns.transform('RESETPASSSUCC'));\n            });\n        } else {\n            this.error.handleError(response.err.errCode)\n        }\n      }, (error) => {\n        this.error.handleError(0)\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChangepasswordRoutingModule } from './changepassword-routing.module';\nimport { ChangepasswordComponent } from './changepassword.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApplicationpipeModule } from 'src/app/shared/module/applicationpipe/applicationpipe.module';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\n\n\n@NgModule({\n  declarations: [ChangepasswordComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ChangepasswordRoutingModule,\n    SharedModule,\n    ApplicationpipeModule\n  ],\n  providers:[TranslatePipe]\n})\nexport class ChangepasswordModule { }\n"],"sourceRoot":"webpack:///","file":"28-es5.js"}