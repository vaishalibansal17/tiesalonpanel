{"version":3,"sources":["src/app/home/feedback/feedback.component.html","src/app/home/feedback/feedback-routing.module.ts","src/app/home/feedback/feedback.component.scss","src/app/home/feedback/feedback.component.ts","src/app/home/feedback/feedback.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"main-card\\\">\\n    <div class=\\\"custom_form\\\">\\n        <form [formGroup]='feedback' (ngSubmit)='feedbackSubmit()'>\\n            <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/email.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'EMAIL'| translate | titlecase}}\\\" class=\\\"form-control\\\"\\n                    formControlName=\\\"email\\\" maxlength=\\\"100\\\" readonly>\\n            </mat-form-field>\\n            <div *ngIf=\\\"(submitted || getControl.email.dirty|| getControl.email.touched) && getControl.email.errors\\\">\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.email.errors.required\\\">{{'LOGINEMAIL'| translate}}</p>\\n                <p class=\\\"color error\\\"\\n                    *ngIf=\\\"!getControl.email.errors.required && getControl.email.errors.invalidEmailAddress\\\">\\n                    {{'LOGINVALIDEMAIL'| translate}}</p>\\n            </div>\\n            <!-- <mat-form-field>\\n                <span class=\\\"email-img phone\\\"><img src=\\\"assets/images/mobile.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'PHONE'| translate | titlecase}}\\\"\\n                    onkeypress='return event.charCode >= 48 && event.charCode <= 57' class=\\\"form-control\\\"\\n                    formControlName=\\\"phone\\\" maxlength=\\\"12\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"(submitted || getControl.phone.dirty|| getControl.phone.touched) && getControl.phone.errors\\\">\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.phone.errors.required\\\">{{'PHNREQ'|translate}}</p>\\n                <p class=\\\"color error\\\" *ngIf=\\\"!getControl.phone.errors.required && getControl.phone.errors.Invalidphone \\\">{{'PHNLNGTH'|translate}}</p>\\n            </div> -->\\n            <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/description.png\\\" alt=\\\"envelope\\\"></span>\\n                <textarea matInput placeholder=\\\"{{'DESCRIPTION'| translate}}\\\" class=\\\"form-control\\\"\\n                    formControlName=\\\"description\\\" maxlength=\\\"500\\\"></textarea>\\n            </mat-form-field>\\n            <div\\n                *ngIf=\\\"(submitted || getControl.description.dirty|| getControl.description.touched) && getControl.description.errors\\\">\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.description.errors.required\\\">{{'DESCREQ' | translate}}</p>\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.description.errors.minlength \\\">{{'DESCLNGTH'| translate}}</p>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-submit\\\">Send Feedback</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FeedbackComponent } from './feedback.component';\n\n\nconst routes: Routes = [{path:'', component: FeedbackComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeedbackRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvZmVlZGJhY2svZmVlZGJhY2suY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpRequestService } from 'src/app/shared/service/http-request.service';\nimport { ErrorService } from 'src/app/shared/service/error.service';\nimport { Helper } from 'src/app/shared/service/helper.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ValidationService } from 'src/app/shared/service/validation-service';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.scss']\n})\nexport class FeedbackComponent implements OnInit {\n  feedback: FormGroup;\n  submitted = false;\n\n  constructor(private httpService: HttpRequestService,\n    private errService: ErrorService,\n    private trns: TranslatePipe, private router: Router) { }\n\n  ngOnInit() {\n    let salon = JSON.parse(localStorage.getItem('salon'))\n    this.feedback = new FormGroup({\n      email: new FormControl(salon.email, [\n        Validators.required,\n        ValidationService.validateEmail\n      ]),\n      // phone: new FormControl(null, [\n      //   Validators.required,\n      //   ValidationService.phonevalidator\n      // ]),\n      description: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(500)\n      ])\n    });\n  }\n  get getControl() { return this.feedback.controls; }\n\n  feedbackSubmit() {\n    this.submitted = true;\n    if (this.feedback.valid) {\n      this.feedback.value['msg'] = this.feedback.value.description;\n      this.httpService.getRequest('POST', 'FEEDBCK', this.feedback.value).subscribe((response: any) => {\n\n        if (response.status === 1) {\n          this.router.navigateByUrl('dashboard')\n            .then(() => {\n              this.httpService.sucsTostr(this.trns.transform('SUCCESS'), this.trns.transform('FEEDSUCCESS'));\n            });\n        } else {\n          console.log(response);\n          this.errService.handleError(response.err.errCode)\n        }\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeedbackRoutingModule } from './feedback-routing.module';\nimport { FeedbackComponent } from './feedback.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApplicationpipeModule } from 'src/app/shared/module/applicationpipe/applicationpipe.module';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\n\n\n@NgModule({\n  declarations: [FeedbackComponent],\n  imports: [\n    CommonModule,\n    FeedbackRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    ApplicationpipeModule\n  ],\n  providers:[TranslatePipe]\n})\nexport class FeedbackModule { }\n"],"sourceRoot":"webpack:///","file":"22-es5.js"}