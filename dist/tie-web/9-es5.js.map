{"version":3,"sources":["src/app/auth/login/login.component.html","src/app/auth/login/login-routing.module.ts","src/app/auth/login/login.component.scss","src/app/auth/login/login.component.ts","src/app/auth/login/login.module.ts","src/app/shared/service/error.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,glHAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,QAAM,MAAM,GAAW,CAAC;AACtB,MAAA,IAAI,EAAC,EADiB;AACb,MAAA,SAAS,EAAE,6CAAA,CAAA,gBAAA;AADE,KAAD,CAAvB;;AASA,QAAa,kBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ9B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAI8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,kmBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAa,cAAb;AAAA;AAAA;AAaE,8BAAoB,WAApB,EACU,MADV,EAEU,KAFV,EAGU,IAHV,EAIU,QAJV,EAKU,MALV,EAKwB;AAAA;;AALJ,aAAA,WAAA,GAAA,WAAA;AACV,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAjBV,aAAA,IAAA,GAAO,IAAP;AAEA,aAAA,SAAA,GAAY,KAAZ;AACO,aAAA,UAAA,GAAa,KAAb;AAEA,aAAA,OAAA,GAAU,KAAV;AACA,aAAA,KAAA,GAAgB,EAAhB;AACA,aAAA,IAAA,GAAe,EAAf;AAEP,aAAA,SAAA,GAAY,KAAZ;AAEA,aAAA,QAAA,GAAoB,IAApB;AAOK;;AAnBP;AAAA;AAAA,mCAqBU;AACN;AAEA,eAAK,QAAL,GAAgB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC5B,YAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,IAAhB,EAAsB,CAC3B,2CAAA,CAAA,YAAA,CAAA,CAAW,QADgB,EAE3B,sEAAA,CAAA,mBAAA,CAAA,CAAkB,aAFS,CAAtB,CADqB;AAK5B,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,IAAhB,EAAsB,CAC1B,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAD0B,EAE1B,2CAAA,CAAA,YAAA,CAAA,CAAW,QAFe,CAAtB;AALsB,WAAd,CAAhB;AAUD;AAlCH;AAAA;AAAA,mCAsCU;AAAA;;AACN,eAAK,SAAL,GAAiB,IAAjB;;AACA,cAAI,KAAK,QAAL,CAAc,KAAlB,EAAyB;AACvB,iBAAK,WAAL,CAAiB,UAAjB,CAA4B,MAA5B,EAAoC,OAApC,EAA6C,KAAK,QAAL,CAAc,KAA3D,EACG,SADH,CACa,UAAC,IAAD,EAAc;AACvB,kBAAI,IAAI,CAAC,MAAT,EAAiB;AAAA,gCAC0B,IAAI,CAAC,GAD/B;AAAA,oBACT,MADS,aACT,MADS;AAAA,oBACD,GADC,aACD,GADC;AAAA,oBACI,IADJ,aACI,IADJ;AAAA,oBACU,KADV,aACU,KADV;AAAA,oBACiB,IADjB,aACiB,IADjB;AAEf,gBAAA,YAAY,CAAC,OAAb,CAAqB,QAArB,EAA+B,MAA/B;AACA,gBAAA,YAAY,CAAC,OAAb,CAAqB,SAArB,EAAgC,GAAhC;AACA,gBAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA8B,IAAI,CAAC,SAAL,CAAe;AAAE,0BAAQ,IAAV;AAAgB,0BAAQ,IAAxB;AAA8B,2BAAS;AAAvC,iBAAf,CAA9B;AACA,gBAAA,KAAI,CAAC,SAAL,GAAiB,CAAC,KAAI,CAAC,SAAvB;;AACA,gBAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,GAAD,CAArB,EAA4B,IAA5B,CAAiC;AAAA,yBAAM,KAAI,CAAC,WAAL,CAAiB,SAAjB,CAA2B,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,SAApB,CAA3B,EAA2D,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,cAApB,CAA3D,CAAN;AAAA,iBAAjC;AACD,eAPD,MAOO;AACL,gBAAA,KAAI,CAAC,KAAL,CAAW,WAAX,CAAuB,IAAI,CAAC,GAAL,CAAS,OAAhC;AACD;AACF,aAZH,EAYK,UAAC,KAAD,EAAU;AACX,cAAA,KAAI,CAAC,KAAL,CAAW,WAAX,CAAuB,CAAvB;AAED,aAfH;AAiBD,WAlBD,MAkBO;AACL;AACA,iBAAK,SAAL,GAAiB,CAAC,KAAK,SAAvB;AACD;AACF;AA9DH;AAAA;AAAA,4BAmCgB;AAAK,iBAAO,KAAK,QAAL,CAAc,QAArB;AAAgC;AAnCrD;;AAAA;AAAA,OAAA;;;;cAamC,wEAAA,CAAA,oBAAA;;cACf,4CAAA,CAAA,QAAA;;cACD,iEAAA,CAAA,cAAA;;cACD,gEAAA,CAAA,eAAA;;cACI,qEAAA,CAAA,kBAAA;;cACF,kEAAA,CAAA,QAAA;;;;AAlBP,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBb,QAAa,WAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,WAAW,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAhBvB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,6CAAA,CAAA,gBAAA,CAAD,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,qBAAA,CAHO,EAIP,kDAAA,CAAA,oBAAA,CAJO,EAKP,oEAAA,CAAA,gBAAA,CALO,EAMP,yDAAA,CAAA,cAAA,CANO,EAOP,6DAAA,CAAA,kBAAA,CAPO,EAQP,yFAAA,CAAA,uBAAA,CARO,CAFD;AAYR,MAAA,SAAS,EAAC,CAAC,gEAAA,CAAA,eAAA,CAAD,CAZF;AAaR,MAAA,OAAO,EAAE,CAAE,0CAAA,CAAA,wBAAA,CAAF;AAbD,KAAT,CAgBuB,CAAA,EAAX,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yDC3Bb;;;AAKA,QAAa,YAAb;AAAA;AAAA;AACE,4BAAoB,MAApB,EACU,IADV,EACgC;AAAA;;AADZ,aAAA,MAAA,GAAA,MAAA;AACV,aAAA,IAAA,GAAA,IAAA;AACL;;AAHP;AAAA;AAAA,sCAKyB;AAAA,cAAX,OAAW,uEAAD,CAAC;;AACrB,kBAAQ,OAAR;AACE,iBAAK,CAAL;AACE,mBAAK,MAAL,CAAY,QAAZ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAArB,EAA8C,KAAK,IAAL,CAAU,IAAV,CAAe,YAAf,CAA9C;AACA;;AACF,iBAAK,CAAL;AACE,mBAAK,MAAL,CAAY,QAAZ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAArB,EAA8C,KAAK,IAAL,CAAU,IAAV,CAAe,YAAf,CAA9C;AACA;;AACF,iBAAK,CAAL;AACE,mBAAK,MAAL,CAAY,QAAZ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAArB,EAA8C,KAAK,IAAL,CAAU,IAAV,CAAe,cAAf,CAA9C;AACA;;AACF,iBAAK,CAAL;AACE,mBAAK,MAAL,CAAY,QAAZ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAArB,EAA8C,KAAK,IAAL,CAAU,IAAV,CAAe,QAAf,CAA9C;AACA;;AACF,iBAAK,CAAL;AACE,mBAAK,MAAL,CAAY,QAAZ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAArB,EAA8C,KAAK,IAAL,CAAU,IAAV,CAAe,aAAf,CAA9C;AACA;;AACF,iBAAK,CAAL;AACE,mBAAK,MAAL,CAAY,QAAZ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAArB,EAA8C,KAAK,IAAL,CAAU,IAAV,CAAe,gBAAf,CAA9C;AACA;;AACF,iBAAK,CAAL;AACE,mBAAK,MAAL,CAAY,QAAZ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAArB,EAA8C,KAAK,IAAL,CAAU,IAAV,CAAe,SAAf,CAA9C;AACA;;AACF,iBAAK,CAAL;AACE,mBAAK,MAAL,CAAY,QAAZ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAArB,EAA8C,KAAK,IAAL,CAAU,IAAV,CAAe,aAAf,CAA9C;AACA;;AACF,iBAAK,EAAL;AACE,mBAAK,MAAL,CAAY,QAAZ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAArB,EAA8C,KAAK,IAAL,CAAU,IAAV,CAAe,cAAf,CAA9C;AACA;;AACF;AACE;AA7BJ;AA+BD;AArCH;;AAAA;AAAA,OAAA;;;;cAC8B,kDAAA,CAAA,oBAAA;;cACZ,+CAAA,CAAA,kBAAA;;;;AAFL,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHxB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGwB,CAAA,EAAZ,YAAY,CAAZ","sourcesContent":["export default \"<div class=\\\"main_bg\\\">\\n    <div class=\\\"fixed-nav\\\">\\n        <ul>\\n            <li class=\\\"active\\\"></li>\\n            <li></li>\\n            <li></li>\\n        </ul>\\n    </div>\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 main-left\\\">\\n                <div class=\\\"full-vertical\\\">\\n                    <img class=\\\"on_board\\\" src=\\\"assets/images/img_onboard_1.png\\\" alt=\\\"Login\\\">\\n                    <div class=\\\"head\\\">Your Service Menu is <span>Online</span></div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6 main-right\\\">\\n                <app-auth-header></app-auth-header>\\n                <div class=\\\"full-vertical custom-width\\\">\\n                    <div class=\\\"logo\\\"><img src=\\\"assets/images/tie_logo_black.png\\\" alt=\\\"Logo\\\"></div>\\n                    <h1 class=\\\"head\\\">{{'LOGIN'| translate}}</h1>\\n                    <div class=\\\"login-form\\\">\\n                        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"loginfrm\\\">\\n                            <mat-form-field>\\n                                <span class=\\\"email-img\\\"><img src=\\\"assets/images/envelope.png\\\" alt=\\\"envelope\\\"></span>\\n                                <input matInput placeholder=\\\"{{'PLACEHOLDERLEMAIL'| translate}}\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"\\n                                    maxlength=\\\"50\\\">\\n                            </mat-form-field>\\n                            <div\\n                                *ngIf=\\\"(submitted || getControl.email.dirty|| getControl.email.touched) && getControl.email.errors\\\">\\n                                <p class=\\\"color\\\" *ngIf=\\\"getControl.email.errors.required\\\">{{'LOGINEMAIL'| translate}}</p>\\n                                <p class=\\\"color\\\" *ngIf=\\\"!getControl.email.errors.required && getControl.email.errors.invalidEmailAddress\\\">{{'LOGINVALIDEMAIL'| translate}}</p>\\n                            </div>\\n                            <mat-form-field>\\n                                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/lock.png\\\" alt=\\\"envelope\\\"></span>\\n                                <input matInput placeholder=\\\"{{'PLACEHOLDERLPASS'| translate}}\\\" formControlName=\\\"pass\\\" maxlength=\\\"20\\\"\\n                                    [type]=\\\"hide ? 'password' : 'text'\\\" class=\\\"form-control pass-space\\\">\\n                                <button mat-icon-button matSuffix type=\\\"button\\\" (click)=\\\"hide = !hide\\\"\\n                                    [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                                </button>\\n                            </mat-form-field>\\n                            <div\\n                                *ngIf=\\\"(submitted || getControl.pass.dirty|| getControl.pass.touched) && getControl.pass.errors\\\">\\n                                <p class=\\\"color\\\" *ngIf=\\\"getControl.pass.errors.required\\\">{{'LOGINPASS'| translate}}</p>\\n                                <!-- <p class=\\\"color\\\" *ngIf=\\\"getControl.pass.errors.minlength \\\">Incorrect password or\\n                                    email.</p> -->\\n                            </div>\\n                            <p class=\\\"right\\\"><a [routerLink]=\\\"['/auth/forgot']\\\">{{'FRGTPASS' |  translate}}?</a></p>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-submit\\\">Log In</button>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [{\n  path:'', component: LoginComponent\n}];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","export default \".main-right .btn-submit {\\n  margin: 0px 0px 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmFpbm1vYmltYWMvQWJoaXNoZWsvYW5ndWxhci90aWUtd2ViL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUF3QixvQkFBQTtBQ0V4QiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFpbi1yaWdodCAuYnRuLXN1Ym1pdHttYXJnaW46IDBweCAwcHggMTBweDt9IiwiLm1haW4tcmlnaHQgLmJ0bi1zdWJtaXQge1xuICBtYXJnaW46IDBweCAwcHggMTBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpRequestService } from 'src/app/shared/service/http-request.service';\nimport { Router } from '@angular/router';\nimport { ErrorService } from 'src/app/shared/service/error.service';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\nimport { ValidationService } from 'src/app/shared/service/validation-service';\nimport { Helper } from 'src/app/shared/service/helper.service';\nimport { TranslateService } from 'src/app/shared/service/translate.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  loginfrm: FormGroup;\n  submitted = false;\n  public formSubmit = false;\n  public data: any;\n  public loading = false;\n  public email: string = '';\n  public pass: string = '';\n  message: string;\n  isLoading = false;\n  isError: boolean;\n  passShow: boolean = true;\n  constructor(private httpService: HttpRequestService,\n    private router: Router,\n    private error: ErrorService,\n    private trns: TranslatePipe,\n    private trnsalte: TranslateService,\n    private helper: Helper\n  ) { }\n\n  ngOnInit() {\n    // console.log(this.trnsalte.currentLang);\n\n    this.loginfrm = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        ValidationService.validateEmail\n      ]),\n      pass: new FormControl(null, [\n        Validators.minLength(6),\n        Validators.required\n      ])\n    });\n  }\n  get getControl() { return this.loginfrm.controls; }\n\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginfrm.valid) {\n      this.httpService.getRequest('POST', 'LOGIN', this.loginfrm.value)\n        .subscribe((data: any) => {\n          if (data.status) {\n            let { acsTkn, _id, logo, email, name } = data.res;\n            localStorage.setItem('acsTkn', acsTkn);\n            localStorage.setItem('salonid', _id);\n            localStorage.setItem('salon', JSON.stringify({ 'name': name, 'logo': logo, 'email': email }));\n            this.isLoading = !this.isLoading;\n            this.router.navigate(['/']).then(() => this.httpService.sucsTostr(this.trns.transform('SUCCESS'), this.trns.transform('LOGINSUCCESS')))\n          } else {\n            this.error.handleError(data.err.errCode);\n          }\n        }, (error) => {\n          this.error.handleError(0)\n\n        }\n        );\n    } else {\n      // this.spinner.hide();\n      this.isLoading = !this.isLoading;\n    }\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\n\nimport { MaterialModule } from 'src/app/shared/material/material.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApplicationpipeModule } from 'src/app/shared/module/applicationpipe/applicationpipe.module';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\nimport { AuthHeaderModule } from '../auth-header/auth-header.module';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LoginRoutingModule,\n    MaterialModule,\n    SharedModule,\n    AuthHeaderModule,\n    ApplicationpipeModule\n  ],\n  providers:[TranslatePipe],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n\n})\nexport class LoginModule { }\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from './translate.service';\nimport { HttpRequestService } from './http-request.service';\n// import { TranslatePipe } from '../_pipes/translate.pipe';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  constructor(private helper: HttpRequestService,\n    private trns: TranslateService,\n  ) { }\n\n  handleError(errCode = 0) {\n    switch (errCode) {\n      case 0:\n        this.helper.errTostr(this.trns.data['ERROR'], this.trns.data['INTERNLERR']);\n        break;\n      case 1:\n        this.helper.errTostr(this.trns.data['ERROR'], this.trns.data['INTERNLERR']);\n        break;\n      case 4:\n        this.helper.errTostr(this.trns.data['ERROR'], this.trns.data['SALONOTEXIST']);\n        break;\n      case 5:\n        this.helper.errTostr(this.trns.data['ERROR'], this.trns.data['TKNREQ']);\n        break;\n      case 6:\n        this.helper.errTostr(this.trns.data['ERROR'], this.trns.data['INVALIDPASS']);\n        break;\n      case 7:\n        this.helper.errTostr(this.trns.data['ERROR'], this.trns.data['INVALIDOLDPASS']);\n        break;\n      case 8:\n        this.helper.errTostr(this.trns.data['ERROR'], this.trns.data['LINKEXP']);\n        break;\n      case 9:\n        this.helper.errTostr(this.trns.data['ERROR'], this.trns.data['INVALIDLINK']);\n        break;\n      case 31:\n        this.helper.errTostr(this.trns.data['ERROR'], this.trns.data['SALONOTEXIST']);\n        break;\n      default:\n        break;\n    }\n  }\n}\n"],"sourceRoot":"webpack:///","file":"9-es5.js"}