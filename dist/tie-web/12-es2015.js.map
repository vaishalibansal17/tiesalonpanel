{"version":3,"sources":["./src/app/home/profile/changepassword/changepassword.component.html","./src/app/home/profile/changepassword/changepassword-routing.module.ts","./src/app/home/profile/changepassword/changepassword.component.scss","./src/app/home/profile/changepassword/changepassword.component.ts","./src/app/home/profile/changepassword/changepassword.module.ts"],"names":[],"mappings":"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","file":"12-es2015.js","sourcesContent":["export default \"<div class=\\\"main-card\\\">\\n    <div class=\\\"custom_form\\\">\\n        <form [formGroup]='organiserChangePassword' (ngSubmit)='changePassword()'>\\n            <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/changepassword.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'PLACEHOLDERLCPASS'| translate}}\\\" [type]=\\\"ohide ? 'password' : 'text'\\\" maxlength=\\\"20\\\" class=\\\"form-control pass-space\\\" formControlName='oldPassword'>\\n                <button mat-icon-button matSuffix (click)=\\\"ohide = !ohide\\\" type=\\\"button\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                <mat-icon>{{ohide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                </button>\\n              </mat-form-field>\\n              <div *ngIf=\\\"(submitted || getControl.oldPassword.dirty|| getControl.oldPassword.touched) && getControl.oldPassword.errors\\\">\\n                <p class=\\\"color\\\" *ngIf=\\\"getControl.oldPassword.errors.required\\\">{{'CURRENTPASS'| translate}} </p>\\n              </div>\\n              <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/changepassword.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'PLACEHOLDERLNPASS'| translate}}\\\" [type]=\\\"nhide ? 'password' : 'text'\\\" maxlength=\\\"20\\\" formControlName='newPassword' class=\\\"form-control pass-space\\\">\\n                <button mat-icon-button matSuffix (click)=\\\"nhide = !nhide\\\" type=\\\"button\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                <mat-icon>{{nhide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                </button>\\n              </mat-form-field>\\n              <div *ngIf=\\\"(submitted || getControl.newPassword.dirty|| getControl.newPassword.touched) && getControl.newPassword.errors\\\">\\n                <p class=\\\"color\\\" *ngIf=\\\"getControl.newPassword.errors.required\\\">{{'RESETPASSREQ'| translate}}</p>\\n                <p class=\\\"color\\\" *ngIf=\\\"getControl.newPassword.errors.minlength\\\">{{'PASSPATTERN'| translate}}</p>\\n                <span *ngIf=\\\"!getControl.newPassword.errors.minlength\\\">\\n                  <p class=\\\"color\\\" *ngIf=\\\"getControl.newPassword.errors.pattern\\\">{{'PASSPATTERN'| translate}}</p>\\n                </span>\\n              </div>\\n              <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/changepassword.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'PLACEHOLDERLCONFIRMPASS'| translate}}\\\" [type]=\\\"chide ? 'password' : 'text'\\\" maxlength=\\\"20\\\"  formControlName='confirmPassword' class=\\\"form-control pass-space\\\">\\n                <button mat-icon-button matSuffix (click)=\\\"chide = !chide\\\" type=\\\"button\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                <mat-icon>{{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                </button>\\n              </mat-form-field>\\n              <div *ngIf=\\\"(submitted || getControl.confirmPassword.dirty|| getControl.confirmPassword.touched) && getControl.confirmPassword.errors\\\">\\n                <p class=\\\"color\\\" *ngIf=\\\"getControl.confirmPassword.errors.required\\\">{{'RESETPASSCNFREQ'| translate}}</p>\\n                <span *ngIf=\\\"!getControl.confirmPassword.errors.required\\\">\\n                  <p class=\\\"color\\\" *ngIf=\\\"(getControl.confirmPassword.invalid)\\\">{{'RESETPASSNOTMATCH'| translate}}</p>\\n                </span>\\n              </div>\\n              <div class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-submit\\\">Save</button>\\n              </div>\\n            </form>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChangepasswordComponent } from './changepassword.component';\n\nconst routes: Routes = [{\n  path:'', component: ChangepasswordComponent\n}];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChangepasswordRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvcHJvZmlsZS9jaGFuZ2VwYXNzd29yZC9jaGFuZ2VwYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { HttpRequestService } from 'src/app/shared/service/http-request.service';\nimport { Router } from '@angular/router';\nimport { Helper } from 'src/app/shared/service/helper.service';\nimport { PassValid, ValidationService, passValidator } from 'src/app/shared/service/validation-service';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\nimport { ErrorService } from 'src/app/shared/service/error.service';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.scss']\n})\nexport class ChangepasswordComponent implements OnInit {\n  ohide = true;\n  chide = true;\n  nhide = true;\n  organiserChangePassword: FormGroup\n  submitted: boolean;\n  public profileImage: any = '../../../assets/images/profile.png';\n  userDetails: any;\n  passShow = true;\n  cPassShow = true;\n  nPassShow = true;\n  isEqualNewPass: boolean = false;\n  constructor(\n    private httpService: HttpRequestService,\n    private router: Router,\n    private fb: FormBuilder,\n    private helper: Helper,\n    private trns : TranslatePipe, \n    private error : ErrorService) { }\n\n  ngOnInit() {\n\n    this.userDetails = this.helper.parseObject(localStorage.getItem('userDetails'));\n    this.organiserChangePassword = this.fb.group({\n      oldPassword: new FormControl(null, [Validators.required]),\n      newPassword: new FormControl(null, [Validators.required, Validators.minLength(6), ValidationService.passwordValidator]),\n      confirmPassword: new FormControl(null, [Validators.required, passValidator]),\n    }\n    );\n  }\n\n  get getControl() { return this.organiserChangePassword.controls; }\n  changePassword() {\n    this.submitted = true;\n    if (this.organiserChangePassword.invalid) {\n      return;\n    } else {\n      this.organiserChangePassword.value['new_pass'] = this.organiserChangePassword.value.newPassword;\n      this.organiserChangePassword.value['old_pass'] = this.organiserChangePassword.value.oldPassword;\n      this.httpService.getRequest('PUT', 'CHANGEPASS', this.organiserChangePassword.value, '').subscribe((response: any) => {\n        if (response.status=== 1) {\n          this.submitted = true;\n          this.router.navigateByUrl('/')\n            .then(() => {\n              this.helper.sucsTostr(this.trns.transform('SUCCESS'), this.trns.transform('RESETPASSSUCC'));\n            });\n        } else {\n            this.error.handleError(response.err.errCode)\n        }\n      }, (error) => {\n        this.error.handleError(0)\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChangepasswordRoutingModule } from './changepassword-routing.module';\nimport { ChangepasswordComponent } from './changepassword.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApplicationpipeModule } from 'src/app/shared/module/applicationpipe/applicationpipe.module';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\n\n\n@NgModule({\n  declarations: [ChangepasswordComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ChangepasswordRoutingModule,\n    SharedModule,\n    ApplicationpipeModule\n  ],\n  providers:[TranslatePipe]\n})\nexport class ChangepasswordModule { }\n"],"sourceRoot":"webpack:///"}