{"version":3,"sources":["node_modules/@fullcalendar/daygrid/main.esm.js","node_modules/@fullcalendar/interaction/main.esm.js","node_modules/@fullcalendar/timegrid/main.esm.js","src/app/home/manage-calender/managecalender/managecalender.component.html","src/app/home/manage-calender/managecalender/managecalender-routing.module.ts","src/app/home/manage-calender/managecalender/managecalender.component.scss","src/app/home/manage-calender/managecalender/managecalender.component.ts","src/app/home/manage-calender/managecalender/managecalender.module.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\nFullCalendar Day Grid Plugin v4.3.0\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\n\nimport { addWeeks, diffWeeks, DateProfileGenerator, createElement, listenBySelector, removeElement, computeRect, computeClippingRect, applyStyle, cssToStr, htmlEscape, FgEventRenderer, appendToElement, prependToElement, htmlToElement, FillRenderer, memoizeRendering, createFormatter, addDays, DateComponent, rangeContainsMarker, getDayClasses, findElements, PositionCache, buildGotoAnchorHtml, findChildren, insertAfterElement, intersectRanges, ScrollComponent, matchCellWidths, uncompensateScroll, compensateScroll, subtractInnerElHeight, distributeHeight, undistributeHeight, View, Slicer, memoize, DayHeader, DaySeries, DayTable, createPlugin } from '@fullcalendar/core';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar DayGridDateProfileGenerator = /** @class */ (function (_super) {\n    __extends(DayGridDateProfileGenerator, _super);\n    function DayGridDateProfileGenerator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // Computes the date range that will be rendered.\n    DayGridDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {\n        var dateEnv = this.dateEnv;\n        var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);\n        var start = renderRange.start;\n        var end = renderRange.end;\n        var endOfWeek;\n        // year and month views should be aligned with weeks. this is already done for week\n        if (/^(year|month)$/.test(currentRangeUnit)) {\n            start = dateEnv.startOfWeek(start);\n            // make end-of-week if not already\n            endOfWeek = dateEnv.startOfWeek(end);\n            if (endOfWeek.valueOf() !== end.valueOf()) {\n                end = addWeeks(endOfWeek, 1);\n            }\n        }\n        // ensure 6 weeks\n        if (this.options.monthMode &&\n            this.options.fixedWeekCount) {\n            var rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n            diffWeeks(start, end));\n            end = addWeeks(end, 6 - rowCnt);\n        }\n        return { start: start, end: end };\n    };\n    return DayGridDateProfileGenerator;\n}(DateProfileGenerator));\n\n/* A rectangular panel that is absolutely positioned over other content\n------------------------------------------------------------------------------------------------------------------------\nOptions:\n  - className (string)\n  - content (HTML string, element, or element array)\n  - parentEl\n  - top\n  - left\n  - right (the x coord of where the right edge should be. not a \"CSS\" right)\n  - autoHide (boolean)\n  - show (callback)\n  - hide (callback)\n*/\nvar Popover = /** @class */ (function () {\n    function Popover(options) {\n        var _this = this;\n        this.isHidden = true;\n        this.margin = 10; // the space required between the popover and the edges of the scroll container\n        // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n        this.documentMousedown = function (ev) {\n            // only hide the popover if the click happened outside the popover\n            if (_this.el && !_this.el.contains(ev.target)) {\n                _this.hide();\n            }\n        };\n        this.options = options;\n    }\n    // Shows the popover on the specified position. Renders it if not already\n    Popover.prototype.show = function () {\n        if (this.isHidden) {\n            if (!this.el) {\n                this.render();\n            }\n            this.el.style.display = '';\n            this.position();\n            this.isHidden = false;\n            this.trigger('show');\n        }\n    };\n    // Hides the popover, through CSS, but does not remove it from the DOM\n    Popover.prototype.hide = function () {\n        if (!this.isHidden) {\n            this.el.style.display = 'none';\n            this.isHidden = true;\n            this.trigger('hide');\n        }\n    };\n    // Creates `this.el` and renders content inside of it\n    Popover.prototype.render = function () {\n        var _this = this;\n        var options = this.options;\n        var el = this.el = createElement('div', {\n            className: 'fc-popover ' + (options.className || ''),\n            style: {\n                top: '0',\n                left: '0'\n            }\n        });\n        if (typeof options.content === 'function') {\n            options.content(el);\n        }\n        options.parentEl.appendChild(el);\n        // when a click happens on anything inside with a 'fc-close' className, hide the popover\n        listenBySelector(el, 'click', '.fc-close', function (ev) {\n            _this.hide();\n        });\n        if (options.autoHide) {\n            document.addEventListener('mousedown', this.documentMousedown);\n        }\n    };\n    // Hides and unregisters any handlers\n    Popover.prototype.destroy = function () {\n        this.hide();\n        if (this.el) {\n            removeElement(this.el);\n            this.el = null;\n        }\n        document.removeEventListener('mousedown', this.documentMousedown);\n    };\n    // Positions the popover optimally, using the top/left/right options\n    Popover.prototype.position = function () {\n        var options = this.options;\n        var el = this.el;\n        var elDims = el.getBoundingClientRect(); // only used for width,height\n        var origin = computeRect(el.offsetParent);\n        var clippingRect = computeClippingRect(options.parentEl);\n        var top; // the \"position\" (not \"offset\") values for the popover\n        var left; //\n        // compute top and left\n        top = options.top || 0;\n        if (options.left !== undefined) {\n            left = options.left;\n        }\n        else if (options.right !== undefined) {\n            left = options.right - elDims.width; // derive the left value from the right value\n        }\n        else {\n            left = 0;\n        }\n        // constrain to the view port. if constrained by two edges, give precedence to top/left\n        top = Math.min(top, clippingRect.bottom - elDims.height - this.margin);\n        top = Math.max(top, clippingRect.top + this.margin);\n        left = Math.min(left, clippingRect.right - elDims.width - this.margin);\n        left = Math.max(left, clippingRect.left + this.margin);\n        applyStyle(el, {\n            top: top - origin.top,\n            left: left - origin.left\n        });\n    };\n    // Triggers a callback. Calls a function in the option hash of the same name.\n    // Arguments beyond the first `name` are forwarded on.\n    // TODO: better code reuse for this. Repeat code\n    // can kill this???\n    Popover.prototype.trigger = function (name) {\n        if (this.options[name]) {\n            this.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\n        }\n    };\n    return Popover;\n}());\n\n/* Event-rendering methods for the DayGrid class\n----------------------------------------------------------------------------------------------------------------------*/\n// \"Simple\" is bad a name. has nothing to do with SimpleDayGrid\nvar SimpleDayGridEventRenderer = /** @class */ (function (_super) {\n    __extends(SimpleDayGridEventRenderer, _super);\n    function SimpleDayGridEventRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // Builds the HTML to be used for the default element for an individual segment\n    SimpleDayGridEventRenderer.prototype.renderSegHtml = function (seg, mirrorInfo) {\n        var _a = this.context, view = _a.view, options = _a.options;\n        var eventRange = seg.eventRange;\n        var eventDef = eventRange.def;\n        var eventUi = eventRange.ui;\n        var allDay = eventDef.allDay;\n        var isDraggable = view.computeEventDraggable(eventDef, eventUi);\n        var isResizableFromStart = allDay && seg.isStart && view.computeEventStartResizable(eventDef, eventUi);\n        var isResizableFromEnd = allDay && seg.isEnd && view.computeEventEndResizable(eventDef, eventUi);\n        var classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd, mirrorInfo);\n        var skinCss = cssToStr(this.getSkinCss(eventUi));\n        var timeHtml = '';\n        var timeText;\n        var titleHtml;\n        classes.unshift('fc-day-grid-event', 'fc-h-event');\n        // Only display a timed events time if it is the starting segment\n        if (seg.isStart) {\n            timeText = this.getTimeText(eventRange);\n            if (timeText) {\n                timeHtml = '<span class=\"fc-time\">' + htmlEscape(timeText) + '</span>';\n            }\n        }\n        titleHtml =\n            '<span class=\"fc-title\">' +\n                (htmlEscape(eventDef.title || '') || '&nbsp;') + // we always want one line of height\n                '</span>';\n        return '<a class=\"' + classes.join(' ') + '\"' +\n            (eventDef.url ?\n                ' href=\"' + htmlEscape(eventDef.url) + '\"' :\n                '') +\n            (skinCss ?\n                ' style=\"' + skinCss + '\"' :\n                '') +\n            '>' +\n            '<div class=\"fc-content\">' +\n            (options.dir === 'rtl' ?\n                titleHtml + ' ' + timeHtml : // put a natural space in between\n                timeHtml + ' ' + titleHtml //\n            ) +\n            '</div>' +\n            (isResizableFromStart ?\n                '<div class=\"fc-resizer fc-start-resizer\"></div>' :\n                '') +\n            (isResizableFromEnd ?\n                '<div class=\"fc-resizer fc-end-resizer\"></div>' :\n                '') +\n            '</a>';\n    };\n    // Computes a default event time formatting string if `eventTimeFormat` is not explicitly defined\n    SimpleDayGridEventRenderer.prototype.computeEventTimeFormat = function () {\n        return {\n            hour: 'numeric',\n            minute: '2-digit',\n            omitZeroMinute: true,\n            meridiem: 'narrow'\n        };\n    };\n    SimpleDayGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n        return false; // TODO: somehow consider the originating DayGrid's column count\n    };\n    return SimpleDayGridEventRenderer;\n}(FgEventRenderer));\n\n/* Event-rendering methods for the DayGrid class\n----------------------------------------------------------------------------------------------------------------------*/\nvar DayGridEventRenderer = /** @class */ (function (_super) {\n    __extends(DayGridEventRenderer, _super);\n    function DayGridEventRenderer(dayGrid) {\n        var _this = _super.call(this, dayGrid.context) || this;\n        _this.dayGrid = dayGrid;\n        return _this;\n    }\n    // Renders the given foreground event segments onto the grid\n    DayGridEventRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n        var rowStructs = this.rowStructs = this.renderSegRows(segs);\n        // append to each row's content skeleton\n        this.dayGrid.rowEls.forEach(function (rowNode, i) {\n            rowNode.querySelector('.fc-content-skeleton > table').appendChild(rowStructs[i].tbodyEl);\n        });\n        // removes the \"more..\" events popover\n        if (!mirrorInfo) {\n            this.dayGrid.removeSegPopover();\n        }\n    };\n    // Unrenders all currently rendered foreground event segments\n    DayGridEventRenderer.prototype.detachSegs = function () {\n        var rowStructs = this.rowStructs || [];\n        var rowStruct;\n        while ((rowStruct = rowStructs.pop())) {\n            removeElement(rowStruct.tbodyEl);\n        }\n        this.rowStructs = null;\n    };\n    // Uses the given events array to generate <tbody> elements that should be appended to each row's content skeleton.\n    // Returns an array of rowStruct objects (see the bottom of `renderSegRow`).\n    // PRECONDITION: each segment shoud already have a rendered and assigned `.el`\n    DayGridEventRenderer.prototype.renderSegRows = function (segs) {\n        var rowStructs = [];\n        var segRows;\n        var row;\n        segRows = this.groupSegRows(segs); // group into nested arrays\n        // iterate each row of segment groupings\n        for (row = 0; row < segRows.length; row++) {\n            rowStructs.push(this.renderSegRow(row, segRows[row]));\n        }\n        return rowStructs;\n    };\n    // Given a row # and an array of segments all in the same row, render a <tbody> element, a skeleton that contains\n    // the segments. Returns object with a bunch of internal data about how the render was calculated.\n    // NOTE: modifies rowSegs\n    DayGridEventRenderer.prototype.renderSegRow = function (row, rowSegs) {\n        var dayGrid = this.dayGrid;\n        var colCnt = dayGrid.colCnt, isRtl = dayGrid.isRtl;\n        var segLevels = this.buildSegLevels(rowSegs); // group into sub-arrays of levels\n        var levelCnt = Math.max(1, segLevels.length); // ensure at least one level\n        var tbody = document.createElement('tbody');\n        var segMatrix = []; // lookup for which segments are rendered into which level+col cells\n        var cellMatrix = []; // lookup for all <td> elements of the level+col matrix\n        var loneCellMatrix = []; // lookup for <td> elements that only take up a single column\n        var i;\n        var levelSegs;\n        var col;\n        var tr;\n        var j;\n        var seg;\n        var td;\n        // populates empty cells from the current column (`col`) to `endCol`\n        function emptyCellsUntil(endCol) {\n            while (col < endCol) {\n                // try to grab a cell from the level above and extend its rowspan. otherwise, create a fresh cell\n                td = (loneCellMatrix[i - 1] || [])[col];\n                if (td) {\n                    td.rowSpan = (td.rowSpan || 1) + 1;\n                }\n                else {\n                    td = document.createElement('td');\n                    tr.appendChild(td);\n                }\n                cellMatrix[i][col] = td;\n                loneCellMatrix[i][col] = td;\n                col++;\n            }\n        }\n        for (i = 0; i < levelCnt; i++) { // iterate through all levels\n            levelSegs = segLevels[i];\n            col = 0;\n            tr = document.createElement('tr');\n            segMatrix.push([]);\n            cellMatrix.push([]);\n            loneCellMatrix.push([]);\n            // levelCnt might be 1 even though there are no actual levels. protect against this.\n            // this single empty row is useful for styling.\n            if (levelSegs) {\n                for (j = 0; j < levelSegs.length; j++) { // iterate through segments in level\n                    seg = levelSegs[j];\n                    var leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol;\n                    var rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol;\n                    emptyCellsUntil(leftCol);\n                    // create a container that occupies or more columns. append the event element.\n                    td = createElement('td', { className: 'fc-event-container' }, seg.el);\n                    if (leftCol !== rightCol) {\n                        td.colSpan = rightCol - leftCol + 1;\n                    }\n                    else { // a single-column segment\n                        loneCellMatrix[i][col] = td;\n                    }\n                    while (col <= rightCol) {\n                        cellMatrix[i][col] = td;\n                        segMatrix[i][col] = seg;\n                        col++;\n                    }\n                    tr.appendChild(td);\n                }\n            }\n            emptyCellsUntil(colCnt); // finish off the row\n            var introHtml = dayGrid.renderProps.renderIntroHtml();\n            if (introHtml) {\n                if (dayGrid.isRtl) {\n                    appendToElement(tr, introHtml);\n                }\n                else {\n                    prependToElement(tr, introHtml);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n        return {\n            row: row,\n            tbodyEl: tbody,\n            cellMatrix: cellMatrix,\n            segMatrix: segMatrix,\n            segLevels: segLevels,\n            segs: rowSegs\n        };\n    };\n    // Stacks a flat array of segments, which are all assumed to be in the same row, into subarrays of vertical levels.\n    // NOTE: modifies segs\n    DayGridEventRenderer.prototype.buildSegLevels = function (segs) {\n        var _a = this.dayGrid, isRtl = _a.isRtl, colCnt = _a.colCnt;\n        var levels = [];\n        var i;\n        var seg;\n        var j;\n        // Give preference to elements with certain criteria, so they have\n        // a chance to be closer to the top.\n        segs = this.sortEventSegs(segs);\n        for (i = 0; i < segs.length; i++) {\n            seg = segs[i];\n            // loop through levels, starting with the topmost, until the segment doesn't collide with other segments\n            for (j = 0; j < levels.length; j++) {\n                if (!isDaySegCollision(seg, levels[j])) {\n                    break;\n                }\n            }\n            // `j` now holds the desired subrow index\n            seg.level = j;\n            seg.leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol; // for sorting only\n            seg.rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol // for sorting only\n            ;\n            (levels[j] || (levels[j] = [])).push(seg);\n        }\n        // order segments left-to-right. very important if calendar is RTL\n        for (j = 0; j < levels.length; j++) {\n            levels[j].sort(compareDaySegCols);\n        }\n        return levels;\n    };\n    // Given a flat array of segments, return an array of sub-arrays, grouped by each segment's row\n    DayGridEventRenderer.prototype.groupSegRows = function (segs) {\n        var segRows = [];\n        var i;\n        for (i = 0; i < this.dayGrid.rowCnt; i++) {\n            segRows.push([]);\n        }\n        for (i = 0; i < segs.length; i++) {\n            segRows[segs[i].row].push(segs[i]);\n        }\n        return segRows;\n    };\n    // Computes a default `displayEventEnd` value if one is not expliclty defined\n    DayGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n        return this.dayGrid.colCnt === 1; // we'll likely have space if there's only one day\n    };\n    return DayGridEventRenderer;\n}(SimpleDayGridEventRenderer));\n// Computes whether two segments' columns collide. They are assumed to be in the same row.\nfunction isDaySegCollision(seg, otherSegs) {\n    var i;\n    var otherSeg;\n    for (i = 0; i < otherSegs.length; i++) {\n        otherSeg = otherSegs[i];\n        if (otherSeg.firstCol <= seg.lastCol &&\n            otherSeg.lastCol >= seg.firstCol) {\n            return true;\n        }\n    }\n    return false;\n}\n// A cmp function for determining the leftmost event\nfunction compareDaySegCols(a, b) {\n    return a.leftCol - b.leftCol;\n}\n\nvar DayGridMirrorRenderer = /** @class */ (function (_super) {\n    __extends(DayGridMirrorRenderer, _super);\n    function DayGridMirrorRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DayGridMirrorRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n        var sourceSeg = mirrorInfo.sourceSeg;\n        var rowStructs = this.rowStructs = this.renderSegRows(segs);\n        // inject each new event skeleton into each associated row\n        this.dayGrid.rowEls.forEach(function (rowNode, row) {\n            var skeletonEl = htmlToElement('<div class=\"fc-mirror-skeleton\"><table></table></div>'); // will be absolutely positioned\n            var skeletonTopEl;\n            var skeletonTop;\n            // If there is an original segment, match the top position. Otherwise, put it at the row's top level\n            if (sourceSeg && sourceSeg.row === row) {\n                skeletonTopEl = sourceSeg.el;\n            }\n            else {\n                skeletonTopEl = rowNode.querySelector('.fc-content-skeleton tbody');\n                if (!skeletonTopEl) { // when no events\n                    skeletonTopEl = rowNode.querySelector('.fc-content-skeleton table');\n                }\n            }\n            skeletonTop = skeletonTopEl.getBoundingClientRect().top -\n                rowNode.getBoundingClientRect().top; // the offsetParent origin\n            skeletonEl.style.top = skeletonTop + 'px';\n            skeletonEl.querySelector('table').appendChild(rowStructs[row].tbodyEl);\n            rowNode.appendChild(skeletonEl);\n        });\n    };\n    return DayGridMirrorRenderer;\n}(DayGridEventRenderer));\n\nvar EMPTY_CELL_HTML = '<td style=\"pointer-events:none\"></td>';\nvar DayGridFillRenderer = /** @class */ (function (_super) {\n    __extends(DayGridFillRenderer, _super);\n    function DayGridFillRenderer(dayGrid) {\n        var _this = _super.call(this, dayGrid.context) || this;\n        _this.fillSegTag = 'td'; // override the default tag name\n        _this.dayGrid = dayGrid;\n        return _this;\n    }\n    DayGridFillRenderer.prototype.renderSegs = function (type, segs) {\n        // don't render timed background events\n        if (type === 'bgEvent') {\n            segs = segs.filter(function (seg) {\n                return seg.eventRange.def.allDay;\n            });\n        }\n        _super.prototype.renderSegs.call(this, type, segs);\n    };\n    DayGridFillRenderer.prototype.attachSegs = function (type, segs) {\n        var els = [];\n        var i;\n        var seg;\n        var skeletonEl;\n        for (i = 0; i < segs.length; i++) {\n            seg = segs[i];\n            skeletonEl = this.renderFillRow(type, seg);\n            this.dayGrid.rowEls[seg.row].appendChild(skeletonEl);\n            els.push(skeletonEl);\n        }\n        return els;\n    };\n    // Generates the HTML needed for one row of a fill. Requires the seg's el to be rendered.\n    DayGridFillRenderer.prototype.renderFillRow = function (type, seg) {\n        var dayGrid = this.dayGrid;\n        var colCnt = dayGrid.colCnt, isRtl = dayGrid.isRtl;\n        var leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol;\n        var rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol;\n        var startCol = leftCol;\n        var endCol = rightCol + 1;\n        var className;\n        var skeletonEl;\n        var trEl;\n        if (type === 'businessHours') {\n            className = 'bgevent';\n        }\n        else {\n            className = type.toLowerCase();\n        }\n        skeletonEl = htmlToElement('<div class=\"fc-' + className + '-skeleton\">' +\n            '<table><tr></tr></table>' +\n            '</div>');\n        trEl = skeletonEl.getElementsByTagName('tr')[0];\n        if (startCol > 0) {\n            appendToElement(trEl, \n            // will create (startCol + 1) td's\n            new Array(startCol + 1).join(EMPTY_CELL_HTML));\n        }\n        seg.el.colSpan = endCol - startCol;\n        trEl.appendChild(seg.el);\n        if (endCol < colCnt) {\n            appendToElement(trEl, \n            // will create (colCnt - endCol) td's\n            new Array(colCnt - endCol + 1).join(EMPTY_CELL_HTML));\n        }\n        var introHtml = dayGrid.renderProps.renderIntroHtml();\n        if (introHtml) {\n            if (dayGrid.isRtl) {\n                appendToElement(trEl, introHtml);\n            }\n            else {\n                prependToElement(trEl, introHtml);\n            }\n        }\n        return skeletonEl;\n    };\n    return DayGridFillRenderer;\n}(FillRenderer));\n\nvar DayTile = /** @class */ (function (_super) {\n    __extends(DayTile, _super);\n    function DayTile(context, el) {\n        var _this = _super.call(this, context, el) || this;\n        var eventRenderer = _this.eventRenderer = new DayTileEventRenderer(_this);\n        var renderFrame = _this.renderFrame = memoizeRendering(_this._renderFrame);\n        _this.renderFgEvents = memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderFrame]);\n        _this.renderEventSelection = memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n        _this.renderEventDrag = memoizeRendering(eventRenderer.hideByHash.bind(eventRenderer), eventRenderer.showByHash.bind(eventRenderer), [renderFrame]);\n        _this.renderEventResize = memoizeRendering(eventRenderer.hideByHash.bind(eventRenderer), eventRenderer.showByHash.bind(eventRenderer), [renderFrame]);\n        context.calendar.registerInteractiveComponent(_this, {\n            el: _this.el,\n            useEventCenter: false\n        });\n        return _this;\n    }\n    DayTile.prototype.render = function (props) {\n        this.renderFrame(props.date);\n        this.renderFgEvents(props.fgSegs);\n        this.renderEventSelection(props.eventSelection);\n        this.renderEventDrag(props.eventDragInstances);\n        this.renderEventResize(props.eventResizeInstances);\n    };\n    DayTile.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.renderFrame.unrender(); // should unrender everything else\n        this.calendar.unregisterInteractiveComponent(this);\n    };\n    DayTile.prototype._renderFrame = function (date) {\n        var _a = this, theme = _a.theme, dateEnv = _a.dateEnv;\n        var title = dateEnv.format(date, createFormatter(this.opt('dayPopoverFormat')) // TODO: cache\n        );\n        this.el.innerHTML =\n            '<div class=\"fc-header ' + theme.getClass('popoverHeader') + '\">' +\n                '<span class=\"fc-title\">' +\n                htmlEscape(title) +\n                '</span>' +\n                '<span class=\"fc-close ' + theme.getIconClass('close') + '\"></span>' +\n                '</div>' +\n                '<div class=\"fc-body ' + theme.getClass('popoverContent') + '\">' +\n                '<div class=\"fc-event-container\"></div>' +\n                '</div>';\n        this.segContainerEl = this.el.querySelector('.fc-event-container');\n    };\n    DayTile.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {\n        var date = this.props.date; // HACK\n        if (positionLeft < elWidth && positionTop < elHeight) {\n            return {\n                component: this,\n                dateSpan: {\n                    allDay: true,\n                    range: { start: date, end: addDays(date, 1) }\n                },\n                dayEl: this.el,\n                rect: {\n                    left: 0,\n                    top: 0,\n                    right: elWidth,\n                    bottom: elHeight\n                },\n                layer: 1\n            };\n        }\n    };\n    return DayTile;\n}(DateComponent));\nvar DayTileEventRenderer = /** @class */ (function (_super) {\n    __extends(DayTileEventRenderer, _super);\n    function DayTileEventRenderer(dayTile) {\n        var _this = _super.call(this, dayTile.context) || this;\n        _this.dayTile = dayTile;\n        return _this;\n    }\n    DayTileEventRenderer.prototype.attachSegs = function (segs) {\n        for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n            var seg = segs_1[_i];\n            this.dayTile.segContainerEl.appendChild(seg.el);\n        }\n    };\n    DayTileEventRenderer.prototype.detachSegs = function (segs) {\n        for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n            var seg = segs_2[_i];\n            removeElement(seg.el);\n        }\n    };\n    return DayTileEventRenderer;\n}(SimpleDayGridEventRenderer));\n\nvar DayBgRow = /** @class */ (function () {\n    function DayBgRow(context) {\n        this.context = context;\n    }\n    DayBgRow.prototype.renderHtml = function (props) {\n        var parts = [];\n        if (props.renderIntroHtml) {\n            parts.push(props.renderIntroHtml());\n        }\n        for (var _i = 0, _a = props.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            parts.push(renderCellHtml(cell.date, props.dateProfile, this.context, cell.htmlAttrs));\n        }\n        if (!props.cells.length) {\n            parts.push('<td class=\"fc-day ' + this.context.theme.getClass('widgetContent') + '\"></td>');\n        }\n        if (this.context.options.dir === 'rtl') {\n            parts.reverse();\n        }\n        return '<tr>' + parts.join('') + '</tr>';\n    };\n    return DayBgRow;\n}());\nfunction renderCellHtml(date, dateProfile, context, otherAttrs) {\n    var dateEnv = context.dateEnv, theme = context.theme;\n    var isDateValid = rangeContainsMarker(dateProfile.activeRange, date); // TODO: called too frequently. cache somehow.\n    var classes = getDayClasses(date, dateProfile, context);\n    classes.unshift('fc-day', theme.getClass('widgetContent'));\n    return '<td class=\"' + classes.join(' ') + '\"' +\n        (isDateValid ?\n            ' data-date=\"' + dateEnv.formatIso(date, { omitTime: true }) + '\"' :\n            '') +\n        (otherAttrs ?\n            ' ' + otherAttrs :\n            '') +\n        '></td>';\n}\n\nvar DAY_NUM_FORMAT = createFormatter({ day: 'numeric' });\nvar WEEK_NUM_FORMAT = createFormatter({ week: 'numeric' });\nvar DayGrid = /** @class */ (function (_super) {\n    __extends(DayGrid, _super);\n    function DayGrid(context, el, renderProps) {\n        var _this = _super.call(this, context, el) || this;\n        _this.bottomCoordPadding = 0; // hack for extending the hit area for the last row of the coordinate grid\n        _this.isCellSizesDirty = false;\n        var eventRenderer = _this.eventRenderer = new DayGridEventRenderer(_this);\n        var fillRenderer = _this.fillRenderer = new DayGridFillRenderer(_this);\n        _this.mirrorRenderer = new DayGridMirrorRenderer(_this);\n        var renderCells = _this.renderCells = memoizeRendering(_this._renderCells, _this._unrenderCells);\n        _this.renderBusinessHours = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'businessHours'), fillRenderer.unrender.bind(fillRenderer, 'businessHours'), [renderCells]);\n        _this.renderDateSelection = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'highlight'), fillRenderer.unrender.bind(fillRenderer, 'highlight'), [renderCells]);\n        _this.renderBgEvents = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'bgEvent'), fillRenderer.unrender.bind(fillRenderer, 'bgEvent'), [renderCells]);\n        _this.renderFgEvents = memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderCells]);\n        _this.renderEventSelection = memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n        _this.renderEventDrag = memoizeRendering(_this._renderEventDrag, _this._unrenderEventDrag, [renderCells]);\n        _this.renderEventResize = memoizeRendering(_this._renderEventResize, _this._unrenderEventResize, [renderCells]);\n        _this.renderProps = renderProps;\n        return _this;\n    }\n    DayGrid.prototype.render = function (props) {\n        var cells = props.cells;\n        this.rowCnt = cells.length;\n        this.colCnt = cells[0].length;\n        this.renderCells(cells, props.isRigid);\n        this.renderBusinessHours(props.businessHourSegs);\n        this.renderDateSelection(props.dateSelectionSegs);\n        this.renderBgEvents(props.bgEventSegs);\n        this.renderFgEvents(props.fgEventSegs);\n        this.renderEventSelection(props.eventSelection);\n        this.renderEventDrag(props.eventDrag);\n        this.renderEventResize(props.eventResize);\n        if (this.segPopoverTile) {\n            this.updateSegPopoverTile();\n        }\n    };\n    DayGrid.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.renderCells.unrender(); // will unrender everything else\n    };\n    DayGrid.prototype.getCellRange = function (row, col) {\n        var start = this.props.cells[row][col].date;\n        var end = addDays(start, 1);\n        return { start: start, end: end };\n    };\n    DayGrid.prototype.updateSegPopoverTile = function (date, segs) {\n        var ownProps = this.props;\n        this.segPopoverTile.receiveProps({\n            date: date || this.segPopoverTile.props.date,\n            fgSegs: segs || this.segPopoverTile.props.fgSegs,\n            eventSelection: ownProps.eventSelection,\n            eventDragInstances: ownProps.eventDrag ? ownProps.eventDrag.affectedInstances : null,\n            eventResizeInstances: ownProps.eventResize ? ownProps.eventResize.affectedInstances : null\n        });\n    };\n    /* Date Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype._renderCells = function (cells, isRigid) {\n        var _a = this, view = _a.view, dateEnv = _a.dateEnv;\n        var _b = this, rowCnt = _b.rowCnt, colCnt = _b.colCnt;\n        var html = '';\n        var row;\n        var col;\n        for (row = 0; row < rowCnt; row++) {\n            html += this.renderDayRowHtml(row, isRigid);\n        }\n        this.el.innerHTML = html;\n        this.rowEls = findElements(this.el, '.fc-row');\n        this.cellEls = findElements(this.el, '.fc-day, .fc-disabled-day');\n        if (this.isRtl) {\n            this.cellEls.reverse();\n        }\n        this.rowPositions = new PositionCache(this.el, this.rowEls, false, true // vertical\n        );\n        this.colPositions = new PositionCache(this.el, this.cellEls.slice(0, colCnt), // only the first row\n        true, false // horizontal\n        );\n        // trigger dayRender with each cell's element\n        for (row = 0; row < rowCnt; row++) {\n            for (col = 0; col < colCnt; col++) {\n                this.publiclyTrigger('dayRender', [\n                    {\n                        date: dateEnv.toDate(cells[row][col].date),\n                        el: this.getCellEl(row, col),\n                        view: view\n                    }\n                ]);\n            }\n        }\n        this.isCellSizesDirty = true;\n    };\n    DayGrid.prototype._unrenderCells = function () {\n        this.removeSegPopover();\n    };\n    // Generates the HTML for a single row, which is a div that wraps a table.\n    // `row` is the row number.\n    DayGrid.prototype.renderDayRowHtml = function (row, isRigid) {\n        var theme = this.theme;\n        var classes = ['fc-row', 'fc-week', theme.getClass('dayRow')];\n        if (isRigid) {\n            classes.push('fc-rigid');\n        }\n        var bgRow = new DayBgRow(this.context);\n        return '' +\n            '<div class=\"' + classes.join(' ') + '\">' +\n            '<div class=\"fc-bg\">' +\n            '<table class=\"' + theme.getClass('tableGrid') + '\">' +\n            bgRow.renderHtml({\n                cells: this.props.cells[row],\n                dateProfile: this.props.dateProfile,\n                renderIntroHtml: this.renderProps.renderBgIntroHtml\n            }) +\n            '</table>' +\n            '</div>' +\n            '<div class=\"fc-content-skeleton\">' +\n            '<table>' +\n            (this.getIsNumbersVisible() ?\n                '<thead>' +\n                    this.renderNumberTrHtml(row) +\n                    '</thead>' :\n                '') +\n            '</table>' +\n            '</div>' +\n            '</div>';\n    };\n    DayGrid.prototype.getIsNumbersVisible = function () {\n        return this.getIsDayNumbersVisible() ||\n            this.renderProps.cellWeekNumbersVisible ||\n            this.renderProps.colWeekNumbersVisible;\n    };\n    DayGrid.prototype.getIsDayNumbersVisible = function () {\n        return this.rowCnt > 1;\n    };\n    /* Grid Number Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype.renderNumberTrHtml = function (row) {\n        var intro = this.renderProps.renderNumberIntroHtml(row, this);\n        return '' +\n            '<tr>' +\n            (this.isRtl ? '' : intro) +\n            this.renderNumberCellsHtml(row) +\n            (this.isRtl ? intro : '') +\n            '</tr>';\n    };\n    DayGrid.prototype.renderNumberCellsHtml = function (row) {\n        var htmls = [];\n        var col;\n        var date;\n        for (col = 0; col < this.colCnt; col++) {\n            date = this.props.cells[row][col].date;\n            htmls.push(this.renderNumberCellHtml(date));\n        }\n        if (this.isRtl) {\n            htmls.reverse();\n        }\n        return htmls.join('');\n    };\n    // Generates the HTML for the <td>s of the \"number\" row in the DayGrid's content skeleton.\n    // The number row will only exist if either day numbers or week numbers are turned on.\n    DayGrid.prototype.renderNumberCellHtml = function (date) {\n        var _a = this, view = _a.view, dateEnv = _a.dateEnv;\n        var html = '';\n        var isDateValid = rangeContainsMarker(this.props.dateProfile.activeRange, date); // TODO: called too frequently. cache somehow.\n        var isDayNumberVisible = this.getIsDayNumbersVisible() && isDateValid;\n        var classes;\n        var weekCalcFirstDow;\n        if (!isDayNumberVisible && !this.renderProps.cellWeekNumbersVisible) {\n            // no numbers in day cell (week number must be along the side)\n            return '<td></td>'; //  will create an empty space above events :(\n        }\n        classes = getDayClasses(date, this.props.dateProfile, this.context);\n        classes.unshift('fc-day-top');\n        if (this.renderProps.cellWeekNumbersVisible) {\n            weekCalcFirstDow = dateEnv.weekDow;\n        }\n        html += '<td class=\"' + classes.join(' ') + '\"' +\n            (isDateValid ?\n                ' data-date=\"' + dateEnv.formatIso(date, { omitTime: true }) + '\"' :\n                '') +\n            '>';\n        if (this.renderProps.cellWeekNumbersVisible && (date.getUTCDay() === weekCalcFirstDow)) {\n            html += buildGotoAnchorHtml(view, { date: date, type: 'week' }, { 'class': 'fc-week-number' }, dateEnv.format(date, WEEK_NUM_FORMAT) // inner HTML\n            );\n        }\n        if (isDayNumberVisible) {\n            html += buildGotoAnchorHtml(view, date, { 'class': 'fc-day-number' }, dateEnv.format(date, DAY_NUM_FORMAT) // inner HTML\n            );\n        }\n        html += '</td>';\n        return html;\n    };\n    /* Sizing\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype.updateSize = function (isResize) {\n        var _a = this, fillRenderer = _a.fillRenderer, eventRenderer = _a.eventRenderer, mirrorRenderer = _a.mirrorRenderer;\n        if (isResize ||\n            this.isCellSizesDirty ||\n            this.view.calendar.isEventsUpdated // hack\n        ) {\n            this.buildPositionCaches();\n            this.isCellSizesDirty = false;\n        }\n        fillRenderer.computeSizes(isResize);\n        eventRenderer.computeSizes(isResize);\n        mirrorRenderer.computeSizes(isResize);\n        fillRenderer.assignSizes(isResize);\n        eventRenderer.assignSizes(isResize);\n        mirrorRenderer.assignSizes(isResize);\n    };\n    DayGrid.prototype.buildPositionCaches = function () {\n        this.buildColPositions();\n        this.buildRowPositions();\n    };\n    DayGrid.prototype.buildColPositions = function () {\n        this.colPositions.build();\n    };\n    DayGrid.prototype.buildRowPositions = function () {\n        this.rowPositions.build();\n        this.rowPositions.bottoms[this.rowCnt - 1] += this.bottomCoordPadding; // hack\n    };\n    /* Hit System\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype.positionToHit = function (leftPosition, topPosition) {\n        var _a = this, colPositions = _a.colPositions, rowPositions = _a.rowPositions;\n        var col = colPositions.leftToIndex(leftPosition);\n        var row = rowPositions.topToIndex(topPosition);\n        if (row != null && col != null) {\n            return {\n                row: row,\n                col: col,\n                dateSpan: {\n                    range: this.getCellRange(row, col),\n                    allDay: true\n                },\n                dayEl: this.getCellEl(row, col),\n                relativeRect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row]\n                }\n            };\n        }\n    };\n    /* Cell System\n    ------------------------------------------------------------------------------------------------------------------*/\n    // FYI: the first column is the leftmost column, regardless of date\n    DayGrid.prototype.getCellEl = function (row, col) {\n        return this.cellEls[row * this.colCnt + col];\n    };\n    /* Event Drag Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype._renderEventDrag = function (state) {\n        if (state) {\n            this.eventRenderer.hideByHash(state.affectedInstances);\n            this.fillRenderer.renderSegs('highlight', state.segs);\n        }\n    };\n    DayGrid.prototype._unrenderEventDrag = function (state) {\n        if (state) {\n            this.eventRenderer.showByHash(state.affectedInstances);\n            this.fillRenderer.unrender('highlight');\n        }\n    };\n    /* Event Resize Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype._renderEventResize = function (state) {\n        if (state) {\n            this.eventRenderer.hideByHash(state.affectedInstances);\n            this.fillRenderer.renderSegs('highlight', state.segs);\n            this.mirrorRenderer.renderSegs(state.segs, { isResizing: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    DayGrid.prototype._unrenderEventResize = function (state) {\n        if (state) {\n            this.eventRenderer.showByHash(state.affectedInstances);\n            this.fillRenderer.unrender('highlight');\n            this.mirrorRenderer.unrender(state.segs, { isResizing: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    /* More+ Link Popover\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype.removeSegPopover = function () {\n        if (this.segPopover) {\n            this.segPopover.hide(); // in handler, will call segPopover's removeElement\n        }\n    };\n    // Limits the number of \"levels\" (vertically stacking layers of events) for each row of the grid.\n    // `levelLimit` can be false (don't limit), a number, or true (should be computed).\n    DayGrid.prototype.limitRows = function (levelLimit) {\n        var rowStructs = this.eventRenderer.rowStructs || [];\n        var row; // row #\n        var rowLevelLimit;\n        for (row = 0; row < rowStructs.length; row++) {\n            this.unlimitRow(row);\n            if (!levelLimit) {\n                rowLevelLimit = false;\n            }\n            else if (typeof levelLimit === 'number') {\n                rowLevelLimit = levelLimit;\n            }\n            else {\n                rowLevelLimit = this.computeRowLevelLimit(row);\n            }\n            if (rowLevelLimit !== false) {\n                this.limitRow(row, rowLevelLimit);\n            }\n        }\n    };\n    // Computes the number of levels a row will accomodate without going outside its bounds.\n    // Assumes the row is \"rigid\" (maintains a constant height regardless of what is inside).\n    // `row` is the row number.\n    DayGrid.prototype.computeRowLevelLimit = function (row) {\n        var rowEl = this.rowEls[row]; // the containing \"fake\" row div\n        var rowBottom = rowEl.getBoundingClientRect().bottom; // relative to viewport!\n        var trEls = findChildren(this.eventRenderer.rowStructs[row].tbodyEl);\n        var i;\n        var trEl;\n        // Reveal one level <tr> at a time and stop when we find one out of bounds\n        for (i = 0; i < trEls.length; i++) {\n            trEl = trEls[i];\n            trEl.classList.remove('fc-limited'); // reset to original state (reveal)\n            if (trEl.getBoundingClientRect().bottom > rowBottom) {\n                return i;\n            }\n        }\n        return false; // should not limit at all\n    };\n    // Limits the given grid row to the maximum number of levels and injects \"more\" links if necessary.\n    // `row` is the row number.\n    // `levelLimit` is a number for the maximum (inclusive) number of levels allowed.\n    DayGrid.prototype.limitRow = function (row, levelLimit) {\n        var _this = this;\n        var _a = this, colCnt = _a.colCnt, isRtl = _a.isRtl;\n        var rowStruct = this.eventRenderer.rowStructs[row];\n        var moreNodes = []; // array of \"more\" <a> links and <td> DOM nodes\n        var col = 0; // col #, left-to-right (not chronologically)\n        var levelSegs; // array of segment objects in the last allowable level, ordered left-to-right\n        var cellMatrix; // a matrix (by level, then column) of all <td> elements in the row\n        var limitedNodes; // array of temporarily hidden level <tr> and segment <td> DOM nodes\n        var i;\n        var seg;\n        var segsBelow; // array of segment objects below `seg` in the current `col`\n        var totalSegsBelow; // total number of segments below `seg` in any of the columns `seg` occupies\n        var colSegsBelow; // array of segment arrays, below seg, one for each column (offset from segs's first column)\n        var td;\n        var rowSpan;\n        var segMoreNodes; // array of \"more\" <td> cells that will stand-in for the current seg's cell\n        var j;\n        var moreTd;\n        var moreWrap;\n        var moreLink;\n        // Iterates through empty level cells and places \"more\" links inside if need be\n        var emptyCellsUntil = function (endCol) {\n            while (col < endCol) {\n                segsBelow = _this.getCellSegs(row, col, levelLimit);\n                if (segsBelow.length) {\n                    td = cellMatrix[levelLimit - 1][col];\n                    moreLink = _this.renderMoreLink(row, col, segsBelow);\n                    moreWrap = createElement('div', null, moreLink);\n                    td.appendChild(moreWrap);\n                    moreNodes.push(moreWrap);\n                }\n                col++;\n            }\n        };\n        if (levelLimit && levelLimit < rowStruct.segLevels.length) { // is it actually over the limit?\n            levelSegs = rowStruct.segLevels[levelLimit - 1];\n            cellMatrix = rowStruct.cellMatrix;\n            limitedNodes = findChildren(rowStruct.tbodyEl).slice(levelLimit); // get level <tr> elements past the limit\n            limitedNodes.forEach(function (node) {\n                node.classList.add('fc-limited'); // hide elements and get a simple DOM-nodes array\n            });\n            // iterate though segments in the last allowable level\n            for (i = 0; i < levelSegs.length; i++) {\n                seg = levelSegs[i];\n                var leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol;\n                var rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol;\n                emptyCellsUntil(leftCol); // process empty cells before the segment\n                // determine *all* segments below `seg` that occupy the same columns\n                colSegsBelow = [];\n                totalSegsBelow = 0;\n                while (col <= rightCol) {\n                    segsBelow = this.getCellSegs(row, col, levelLimit);\n                    colSegsBelow.push(segsBelow);\n                    totalSegsBelow += segsBelow.length;\n                    col++;\n                }\n                if (totalSegsBelow) { // do we need to replace this segment with one or many \"more\" links?\n                    td = cellMatrix[levelLimit - 1][leftCol]; // the segment's parent cell\n                    rowSpan = td.rowSpan || 1;\n                    segMoreNodes = [];\n                    // make a replacement <td> for each column the segment occupies. will be one for each colspan\n                    for (j = 0; j < colSegsBelow.length; j++) {\n                        moreTd = createElement('td', { className: 'fc-more-cell', rowSpan: rowSpan });\n                        segsBelow = colSegsBelow[j];\n                        moreLink = this.renderMoreLink(row, leftCol + j, [seg].concat(segsBelow) // count seg as hidden too\n                        );\n                        moreWrap = createElement('div', null, moreLink);\n                        moreTd.appendChild(moreWrap);\n                        segMoreNodes.push(moreTd);\n                        moreNodes.push(moreTd);\n                    }\n                    td.classList.add('fc-limited');\n                    insertAfterElement(td, segMoreNodes);\n                    limitedNodes.push(td);\n                }\n            }\n            emptyCellsUntil(this.colCnt); // finish off the level\n            rowStruct.moreEls = moreNodes; // for easy undoing later\n            rowStruct.limitedEls = limitedNodes; // for easy undoing later\n        }\n    };\n    // Reveals all levels and removes all \"more\"-related elements for a grid's row.\n    // `row` is a row number.\n    DayGrid.prototype.unlimitRow = function (row) {\n        var rowStruct = this.eventRenderer.rowStructs[row];\n        if (rowStruct.moreEls) {\n            rowStruct.moreEls.forEach(removeElement);\n            rowStruct.moreEls = null;\n        }\n        if (rowStruct.limitedEls) {\n            rowStruct.limitedEls.forEach(function (limitedEl) {\n                limitedEl.classList.remove('fc-limited');\n            });\n            rowStruct.limitedEls = null;\n        }\n    };\n    // Renders an <a> element that represents hidden event element for a cell.\n    // Responsible for attaching click handler as well.\n    DayGrid.prototype.renderMoreLink = function (row, col, hiddenSegs) {\n        var _this = this;\n        var _a = this, view = _a.view, dateEnv = _a.dateEnv;\n        var a = createElement('a', { className: 'fc-more' });\n        a.innerText = this.getMoreLinkText(hiddenSegs.length);\n        a.addEventListener('click', function (ev) {\n            var clickOption = _this.opt('eventLimitClick');\n            var _col = _this.isRtl ? _this.colCnt - col - 1 : col; // HACK: props.cells has different dir system?\n            var date = _this.props.cells[row][_col].date;\n            var moreEl = ev.currentTarget;\n            var dayEl = _this.getCellEl(row, col);\n            var allSegs = _this.getCellSegs(row, col);\n            // rescope the segments to be within the cell's date\n            var reslicedAllSegs = _this.resliceDaySegs(allSegs, date);\n            var reslicedHiddenSegs = _this.resliceDaySegs(hiddenSegs, date);\n            if (typeof clickOption === 'function') {\n                // the returned value can be an atomic option\n                clickOption = _this.publiclyTrigger('eventLimitClick', [\n                    {\n                        date: dateEnv.toDate(date),\n                        allDay: true,\n                        dayEl: dayEl,\n                        moreEl: moreEl,\n                        segs: reslicedAllSegs,\n                        hiddenSegs: reslicedHiddenSegs,\n                        jsEvent: ev,\n                        view: view\n                    }\n                ]);\n            }\n            if (clickOption === 'popover') {\n                _this.showSegPopover(row, col, moreEl, reslicedAllSegs);\n            }\n            else if (typeof clickOption === 'string') { // a view name\n                view.calendar.zoomTo(date, clickOption);\n            }\n        });\n        return a;\n    };\n    // Reveals the popover that displays all events within a cell\n    DayGrid.prototype.showSegPopover = function (row, col, moreLink, segs) {\n        var _this = this;\n        var _a = this, calendar = _a.calendar, view = _a.view, theme = _a.theme;\n        var _col = this.isRtl ? this.colCnt - col - 1 : col; // HACK: props.cells has different dir system?\n        var moreWrap = moreLink.parentNode; // the <div> wrapper around the <a>\n        var topEl; // the element we want to match the top coordinate of\n        var options;\n        if (this.rowCnt === 1) {\n            topEl = view.el; // will cause the popover to cover any sort of header\n        }\n        else {\n            topEl = this.rowEls[row]; // will align with top of row\n        }\n        options = {\n            className: 'fc-more-popover ' + theme.getClass('popover'),\n            parentEl: view.el,\n            top: computeRect(topEl).top,\n            autoHide: true,\n            content: function (el) {\n                _this.segPopoverTile = new DayTile(_this.context, el);\n                _this.updateSegPopoverTile(_this.props.cells[row][_col].date, segs);\n            },\n            hide: function () {\n                _this.segPopoverTile.destroy();\n                _this.segPopoverTile = null;\n                _this.segPopover.destroy();\n                _this.segPopover = null;\n            }\n        };\n        // Determine horizontal coordinate.\n        // We use the moreWrap instead of the <td> to avoid border confusion.\n        if (this.isRtl) {\n            options.right = computeRect(moreWrap).right + 1; // +1 to be over cell border\n        }\n        else {\n            options.left = computeRect(moreWrap).left - 1; // -1 to be over cell border\n        }\n        this.segPopover = new Popover(options);\n        this.segPopover.show();\n        calendar.releaseAfterSizingTriggers(); // hack for eventPositioned\n    };\n    // Given the events within an array of segment objects, reslice them to be in a single day\n    DayGrid.prototype.resliceDaySegs = function (segs, dayDate) {\n        var dayStart = dayDate;\n        var dayEnd = addDays(dayStart, 1);\n        var dayRange = { start: dayStart, end: dayEnd };\n        var newSegs = [];\n        for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n            var seg = segs_1[_i];\n            var eventRange = seg.eventRange;\n            var origRange = eventRange.range;\n            var slicedRange = intersectRanges(origRange, dayRange);\n            if (slicedRange) {\n                newSegs.push(__assign({}, seg, { eventRange: {\n                        def: eventRange.def,\n                        ui: __assign({}, eventRange.ui, { durationEditable: false }),\n                        instance: eventRange.instance,\n                        range: slicedRange\n                    }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() }));\n            }\n        }\n        return newSegs;\n    };\n    // Generates the text that should be inside a \"more\" link, given the number of events it represents\n    DayGrid.prototype.getMoreLinkText = function (num) {\n        var opt = this.opt('eventLimitText');\n        if (typeof opt === 'function') {\n            return opt(num);\n        }\n        else {\n            return '+' + num + ' ' + opt;\n        }\n    };\n    // Returns segments within a given cell.\n    // If `startLevel` is specified, returns only events including and below that level. Otherwise returns all segs.\n    DayGrid.prototype.getCellSegs = function (row, col, startLevel) {\n        var segMatrix = this.eventRenderer.rowStructs[row].segMatrix;\n        var level = startLevel || 0;\n        var segs = [];\n        var seg;\n        while (level < segMatrix.length) {\n            seg = segMatrix[level][col];\n            if (seg) {\n                segs.push(seg);\n            }\n            level++;\n        }\n        return segs;\n    };\n    return DayGrid;\n}(DateComponent));\n\nvar WEEK_NUM_FORMAT$1 = createFormatter({ week: 'numeric' });\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a DayGrid subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nvar DayGridView = /** @class */ (function (_super) {\n    __extends(DayGridView, _super);\n    function DayGridView(context, viewSpec, dateProfileGenerator, parentEl) {\n        var _this = _super.call(this, context, viewSpec, dateProfileGenerator, parentEl) || this;\n        /* Header Rendering\n        ------------------------------------------------------------------------------------------------------------------*/\n        // Generates the HTML that will go before the day-of week header cells\n        _this.renderHeadIntroHtml = function () {\n            var theme = _this.theme;\n            if (_this.colWeekNumbersVisible) {\n                return '' +\n                    '<th class=\"fc-week-number ' + theme.getClass('widgetHeader') + '\" ' + _this.weekNumberStyleAttr() + '>' +\n                    '<span>' + // needed for matchCellWidths\n                    htmlEscape(_this.opt('weekLabel')) +\n                    '</span>' +\n                    '</th>';\n            }\n            return '';\n        };\n        /* Day Grid Rendering\n        ------------------------------------------------------------------------------------------------------------------*/\n        // Generates the HTML that will go before content-skeleton cells that display the day/week numbers\n        _this.renderDayGridNumberIntroHtml = function (row, dayGrid) {\n            var dateEnv = _this.dateEnv;\n            var weekStart = dayGrid.props.cells[row][0].date;\n            if (_this.colWeekNumbersVisible) {\n                return '' +\n                    '<td class=\"fc-week-number\" ' + _this.weekNumberStyleAttr() + '>' +\n                    buildGotoAnchorHtml(// aside from link, important for matchCellWidths\n                    _this, { date: weekStart, type: 'week', forceOff: dayGrid.colCnt === 1 }, dateEnv.format(weekStart, WEEK_NUM_FORMAT$1) // inner HTML\n                    ) +\n                    '</td>';\n            }\n            return '';\n        };\n        // Generates the HTML that goes before the day bg cells for each day-row\n        _this.renderDayGridBgIntroHtml = function () {\n            var theme = _this.theme;\n            if (_this.colWeekNumbersVisible) {\n                return '<td class=\"fc-week-number ' + theme.getClass('widgetContent') + '\" ' + _this.weekNumberStyleAttr() + '></td>';\n            }\n            return '';\n        };\n        // Generates the HTML that goes before every other type of row generated by DayGrid.\n        // Affects mirror-skeleton and highlight-skeleton rows.\n        _this.renderDayGridIntroHtml = function () {\n            if (_this.colWeekNumbersVisible) {\n                return '<td class=\"fc-week-number\" ' + _this.weekNumberStyleAttr() + '></td>';\n            }\n            return '';\n        };\n        _this.el.classList.add('fc-dayGrid-view');\n        _this.el.innerHTML = _this.renderSkeletonHtml();\n        _this.scroller = new ScrollComponent('hidden', // overflow x\n        'auto' // overflow y\n        );\n        var dayGridContainerEl = _this.scroller.el;\n        _this.el.querySelector('.fc-body > tr > td').appendChild(dayGridContainerEl);\n        dayGridContainerEl.classList.add('fc-day-grid-container');\n        var dayGridEl = createElement('div', { className: 'fc-day-grid' });\n        dayGridContainerEl.appendChild(dayGridEl);\n        var cellWeekNumbersVisible;\n        if (_this.opt('weekNumbers')) {\n            if (_this.opt('weekNumbersWithinDays')) {\n                cellWeekNumbersVisible = true;\n                _this.colWeekNumbersVisible = false;\n            }\n            else {\n                cellWeekNumbersVisible = false;\n                _this.colWeekNumbersVisible = true;\n            }\n        }\n        else {\n            _this.colWeekNumbersVisible = false;\n            cellWeekNumbersVisible = false;\n        }\n        _this.dayGrid = new DayGrid(_this.context, dayGridEl, {\n            renderNumberIntroHtml: _this.renderDayGridNumberIntroHtml,\n            renderBgIntroHtml: _this.renderDayGridBgIntroHtml,\n            renderIntroHtml: _this.renderDayGridIntroHtml,\n            colWeekNumbersVisible: _this.colWeekNumbersVisible,\n            cellWeekNumbersVisible: cellWeekNumbersVisible\n        });\n        return _this;\n    }\n    DayGridView.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.dayGrid.destroy();\n        this.scroller.destroy();\n    };\n    // Builds the HTML skeleton for the view.\n    // The day-grid component will render inside of a container defined by this HTML.\n    DayGridView.prototype.renderSkeletonHtml = function () {\n        var theme = this.theme;\n        return '' +\n            '<table class=\"' + theme.getClass('tableGrid') + '\">' +\n            (this.opt('columnHeader') ?\n                '<thead class=\"fc-head\">' +\n                    '<tr>' +\n                    '<td class=\"fc-head-container ' + theme.getClass('widgetHeader') + '\">&nbsp;</td>' +\n                    '</tr>' +\n                    '</thead>' :\n                '') +\n            '<tbody class=\"fc-body\">' +\n            '<tr>' +\n            '<td class=\"' + theme.getClass('widgetContent') + '\"></td>' +\n            '</tr>' +\n            '</tbody>' +\n            '</table>';\n    };\n    // Generates an HTML attribute string for setting the width of the week number column, if it is known\n    DayGridView.prototype.weekNumberStyleAttr = function () {\n        if (this.weekNumberWidth != null) {\n            return 'style=\"width:' + this.weekNumberWidth + 'px\"';\n        }\n        return '';\n    };\n    // Determines whether each row should have a constant height\n    DayGridView.prototype.hasRigidRows = function () {\n        var eventLimit = this.opt('eventLimit');\n        return eventLimit && typeof eventLimit !== 'number';\n    };\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGridView.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n        _super.prototype.updateSize.call(this, isResize, viewHeight, isAuto); // will call updateBaseSize. important that executes first\n        this.dayGrid.updateSize(isResize);\n    };\n    // Refreshes the horizontal dimensions of the view\n    DayGridView.prototype.updateBaseSize = function (isResize, viewHeight, isAuto) {\n        var dayGrid = this.dayGrid;\n        var eventLimit = this.opt('eventLimit');\n        var headRowEl = this.header ? this.header.el : null; // HACK\n        var scrollerHeight;\n        var scrollbarWidths;\n        // hack to give the view some height prior to dayGrid's columns being rendered\n        // TODO: separate setting height from scroller VS dayGrid.\n        if (!dayGrid.rowEls) {\n            if (!isAuto) {\n                scrollerHeight = this.computeScrollerHeight(viewHeight);\n                this.scroller.setHeight(scrollerHeight);\n            }\n            return;\n        }\n        if (this.colWeekNumbersVisible) {\n            // Make sure all week number cells running down the side have the same width.\n            this.weekNumberWidth = matchCellWidths(findElements(this.el, '.fc-week-number'));\n        }\n        // reset all heights to be natural\n        this.scroller.clear();\n        if (headRowEl) {\n            uncompensateScroll(headRowEl);\n        }\n        dayGrid.removeSegPopover(); // kill the \"more\" popover if displayed\n        // is the event limit a constant level number?\n        if (eventLimit && typeof eventLimit === 'number') {\n            dayGrid.limitRows(eventLimit); // limit the levels first so the height can redistribute after\n        }\n        // distribute the height to the rows\n        // (viewHeight is a \"recommended\" value if isAuto)\n        scrollerHeight = this.computeScrollerHeight(viewHeight);\n        this.setGridHeight(scrollerHeight, isAuto);\n        // is the event limit dynamically calculated?\n        if (eventLimit && typeof eventLimit !== 'number') {\n            dayGrid.limitRows(eventLimit); // limit the levels after the grid's row heights have been set\n        }\n        if (!isAuto) { // should we force dimensions of the scroll container?\n            this.scroller.setHeight(scrollerHeight);\n            scrollbarWidths = this.scroller.getScrollbarWidths();\n            if (scrollbarWidths.left || scrollbarWidths.right) { // using scrollbars?\n                if (headRowEl) {\n                    compensateScroll(headRowEl, scrollbarWidths);\n                }\n                // doing the scrollbar compensation might have created text overflow which created more height. redo\n                scrollerHeight = this.computeScrollerHeight(viewHeight);\n                this.scroller.setHeight(scrollerHeight);\n            }\n            // guarantees the same scrollbar widths\n            this.scroller.lockOverflow(scrollbarWidths);\n        }\n    };\n    // given a desired total height of the view, returns what the height of the scroller should be\n    DayGridView.prototype.computeScrollerHeight = function (viewHeight) {\n        return viewHeight -\n            subtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\n    };\n    // Sets the height of just the DayGrid component in this view\n    DayGridView.prototype.setGridHeight = function (height, isAuto) {\n        if (this.opt('monthMode')) {\n            // if auto, make the height of each row the height that it would be if there were 6 weeks\n            if (isAuto) {\n                height *= this.dayGrid.rowCnt / 6;\n            }\n            distributeHeight(this.dayGrid.rowEls, height, !isAuto); // if auto, don't compensate for height-hogging rows\n        }\n        else {\n            if (isAuto) {\n                undistributeHeight(this.dayGrid.rowEls); // let the rows be their natural height with no expanding\n            }\n            else {\n                distributeHeight(this.dayGrid.rowEls, height, true); // true = compensate for height-hogging rows\n            }\n        }\n    };\n    /* Scroll\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGridView.prototype.computeDateScroll = function (duration) {\n        return { top: 0 };\n    };\n    DayGridView.prototype.queryDateScroll = function () {\n        return { top: this.scroller.getScrollTop() };\n    };\n    DayGridView.prototype.applyDateScroll = function (scroll) {\n        if (scroll.top !== undefined) {\n            this.scroller.setScrollTop(scroll.top);\n        }\n    };\n    return DayGridView;\n}(View));\nDayGridView.prototype.dateProfileGeneratorClass = DayGridDateProfileGenerator;\n\nvar SimpleDayGrid = /** @class */ (function (_super) {\n    __extends(SimpleDayGrid, _super);\n    function SimpleDayGrid(context, dayGrid) {\n        var _this = _super.call(this, context, dayGrid.el) || this;\n        _this.slicer = new DayGridSlicer();\n        _this.dayGrid = dayGrid;\n        context.calendar.registerInteractiveComponent(_this, { el: _this.dayGrid.el });\n        return _this;\n    }\n    SimpleDayGrid.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.calendar.unregisterInteractiveComponent(this);\n    };\n    SimpleDayGrid.prototype.render = function (props) {\n        var dayGrid = this.dayGrid;\n        var dateProfile = props.dateProfile, dayTable = props.dayTable;\n        dayGrid.receiveProps(__assign({}, this.slicer.sliceProps(props, dateProfile, props.nextDayThreshold, dayGrid, dayTable), { dateProfile: dateProfile, cells: dayTable.cells, isRigid: props.isRigid }));\n    };\n    SimpleDayGrid.prototype.buildPositionCaches = function () {\n        this.dayGrid.buildPositionCaches();\n    };\n    SimpleDayGrid.prototype.queryHit = function (positionLeft, positionTop) {\n        var rawHit = this.dayGrid.positionToHit(positionLeft, positionTop);\n        if (rawHit) {\n            return {\n                component: this.dayGrid,\n                dateSpan: rawHit.dateSpan,\n                dayEl: rawHit.dayEl,\n                rect: {\n                    left: rawHit.relativeRect.left,\n                    right: rawHit.relativeRect.right,\n                    top: rawHit.relativeRect.top,\n                    bottom: rawHit.relativeRect.bottom\n                },\n                layer: 0\n            };\n        }\n    };\n    return SimpleDayGrid;\n}(DateComponent));\nvar DayGridSlicer = /** @class */ (function (_super) {\n    __extends(DayGridSlicer, _super);\n    function DayGridSlicer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DayGridSlicer.prototype.sliceRange = function (dateRange, dayTable) {\n        return dayTable.sliceRange(dateRange);\n    };\n    return DayGridSlicer;\n}(Slicer));\n\nvar DayGridView$1 = /** @class */ (function (_super) {\n    __extends(DayGridView, _super);\n    function DayGridView(_context, viewSpec, dateProfileGenerator, parentEl) {\n        var _this = _super.call(this, _context, viewSpec, dateProfileGenerator, parentEl) || this;\n        _this.buildDayTable = memoize(buildDayTable);\n        if (_this.opt('columnHeader')) {\n            _this.header = new DayHeader(_this.context, _this.el.querySelector('.fc-head-container'));\n        }\n        _this.simpleDayGrid = new SimpleDayGrid(_this.context, _this.dayGrid);\n        return _this;\n    }\n    DayGridView.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.header) {\n            this.header.destroy();\n        }\n        this.simpleDayGrid.destroy();\n    };\n    DayGridView.prototype.render = function (props) {\n        _super.prototype.render.call(this, props);\n        var dateProfile = this.props.dateProfile;\n        var dayTable = this.dayTable =\n            this.buildDayTable(dateProfile, this.dateProfileGenerator);\n        if (this.header) {\n            this.header.receiveProps({\n                dateProfile: dateProfile,\n                dates: dayTable.headerDates,\n                datesRepDistinctDays: dayTable.rowCnt === 1,\n                renderIntroHtml: this.renderHeadIntroHtml\n            });\n        }\n        this.simpleDayGrid.receiveProps({\n            dateProfile: dateProfile,\n            dayTable: dayTable,\n            businessHours: props.businessHours,\n            dateSelection: props.dateSelection,\n            eventStore: props.eventStore,\n            eventUiBases: props.eventUiBases,\n            eventSelection: props.eventSelection,\n            eventDrag: props.eventDrag,\n            eventResize: props.eventResize,\n            isRigid: this.hasRigidRows(),\n            nextDayThreshold: this.nextDayThreshold\n        });\n    };\n    return DayGridView;\n}(DayGridView));\nfunction buildDayTable(dateProfile, dateProfileGenerator) {\n    var daySeries = new DaySeries(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTable(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nvar main = createPlugin({\n    defaultView: 'dayGridMonth',\n    views: {\n        dayGrid: DayGridView$1,\n        dayGridDay: {\n            type: 'dayGrid',\n            duration: { days: 1 }\n        },\n        dayGridWeek: {\n            type: 'dayGrid',\n            duration: { weeks: 1 }\n        },\n        dayGridMonth: {\n            type: 'dayGrid',\n            duration: { months: 1 },\n            monthMode: true,\n            fixedWeekCount: true\n        }\n    }\n});\n\nexport default main;\nexport { DayGridView as AbstractDayGridView, DayBgRow, DayGrid, DayGridSlicer, DayGridView$1 as DayGridView, SimpleDayGrid, buildDayTable as buildBasicDayTable };\n","/*!\nFullCalendar Interaction Plugin v4.3.0\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\n\nimport { config, elementClosest, EmitterMixin, applyStyle, whenTransitionDone, removeElement, ScrollController, ElementScrollController, computeInnerRect, WindowScrollController, preventSelection, preventContextMenu, allowSelection, allowContextMenu, ElementDragging, computeRect, getClippingParents, pointInsideRect, isDateSpansEqual, constrainPoint, intersectRects, getRectCenter, diffPoints, mapHash, rangeContainsRange, interactionSettingsToStore, Interaction, enableCursor, disableCursor, compareNumbers, getElSeg, getRelevantEvents, EventApi, createEmptyEventStore, applyMutationToEventStore, interactionSettingsStore, startOfDay, diffDates, createDuration, eventTupleToStore, isInteractionValid, parseDragMeta, elementMatches, parseEventDef, createEventInstance, globalDefaults, createPlugin } from '@fullcalendar/core';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nconfig.touchMouseIgnoreWait = 500;\nvar ignoreMouseDepth = 0;\nvar listenerCnt = 0;\nvar isWindowTouchMoveCancelled = false;\n/*\nUses a \"pointer\" abstraction, which monitors UI events for both mouse and touch.\nTracks when the pointer \"drags\" on a certain element, meaning down+move+up.\n\nAlso, tracks if there was touch-scrolling.\nAlso, can prevent touch-scrolling from happening.\nAlso, can fire pointermove events when scrolling happens underneath, even when no real pointer movement.\n\nemits:\n- pointerdown\n- pointermove\n- pointerup\n*/\nvar PointerDragging = /** @class */ (function () {\n    function PointerDragging(containerEl) {\n        var _this = this;\n        this.subjectEl = null;\n        this.downEl = null;\n        // options that can be directly assigned by caller\n        this.selector = ''; // will cause subjectEl in all emitted events to be this element\n        this.handleSelector = '';\n        this.shouldIgnoreMove = false;\n        this.shouldWatchScroll = true; // for simulating pointermove on scroll\n        // internal states\n        this.isDragging = false;\n        this.isTouchDragging = false;\n        this.wasTouchScroll = false;\n        // Mouse\n        // ----------------------------------------------------------------------------------------------------\n        this.handleMouseDown = function (ev) {\n            if (!_this.shouldIgnoreMouse() &&\n                isPrimaryMouseButton(ev) &&\n                _this.tryStart(ev)) {\n                var pev = _this.createEventFromMouse(ev, true);\n                _this.emitter.trigger('pointerdown', pev);\n                _this.initScrollWatch(pev);\n                if (!_this.shouldIgnoreMove) {\n                    document.addEventListener('mousemove', _this.handleMouseMove);\n                }\n                document.addEventListener('mouseup', _this.handleMouseUp);\n            }\n        };\n        this.handleMouseMove = function (ev) {\n            var pev = _this.createEventFromMouse(ev);\n            _this.recordCoords(pev);\n            _this.emitter.trigger('pointermove', pev);\n        };\n        this.handleMouseUp = function (ev) {\n            document.removeEventListener('mousemove', _this.handleMouseMove);\n            document.removeEventListener('mouseup', _this.handleMouseUp);\n            _this.emitter.trigger('pointerup', _this.createEventFromMouse(ev));\n            _this.cleanup(); // call last so that pointerup has access to props\n        };\n        // Touch\n        // ----------------------------------------------------------------------------------------------------\n        this.handleTouchStart = function (ev) {\n            if (_this.tryStart(ev)) {\n                _this.isTouchDragging = true;\n                var pev = _this.createEventFromTouch(ev, true);\n                _this.emitter.trigger('pointerdown', pev);\n                _this.initScrollWatch(pev);\n                // unlike mouse, need to attach to target, not document\n                // https://stackoverflow.com/a/45760014\n                var target = ev.target;\n                if (!_this.shouldIgnoreMove) {\n                    target.addEventListener('touchmove', _this.handleTouchMove);\n                }\n                target.addEventListener('touchend', _this.handleTouchEnd);\n                target.addEventListener('touchcancel', _this.handleTouchEnd); // treat it as a touch end\n                // attach a handler to get called when ANY scroll action happens on the page.\n                // this was impossible to do with normal on/off because 'scroll' doesn't bubble.\n                // http://stackoverflow.com/a/32954565/96342\n                window.addEventListener('scroll', _this.handleTouchScroll, true // useCapture\n                );\n            }\n        };\n        this.handleTouchMove = function (ev) {\n            var pev = _this.createEventFromTouch(ev);\n            _this.recordCoords(pev);\n            _this.emitter.trigger('pointermove', pev);\n        };\n        this.handleTouchEnd = function (ev) {\n            if (_this.isDragging) { // done to guard against touchend followed by touchcancel\n                var target = ev.target;\n                target.removeEventListener('touchmove', _this.handleTouchMove);\n                target.removeEventListener('touchend', _this.handleTouchEnd);\n                target.removeEventListener('touchcancel', _this.handleTouchEnd);\n                window.removeEventListener('scroll', _this.handleTouchScroll, true); // useCaptured=true\n                _this.emitter.trigger('pointerup', _this.createEventFromTouch(ev));\n                _this.cleanup(); // call last so that pointerup has access to props\n                _this.isTouchDragging = false;\n                startIgnoringMouse();\n            }\n        };\n        this.handleTouchScroll = function () {\n            _this.wasTouchScroll = true;\n        };\n        this.handleScroll = function (ev) {\n            if (!_this.shouldIgnoreMove) {\n                var pageX = (window.pageXOffset - _this.prevScrollX) + _this.prevPageX;\n                var pageY = (window.pageYOffset - _this.prevScrollY) + _this.prevPageY;\n                _this.emitter.trigger('pointermove', {\n                    origEvent: ev,\n                    isTouch: _this.isTouchDragging,\n                    subjectEl: _this.subjectEl,\n                    pageX: pageX,\n                    pageY: pageY,\n                    deltaX: pageX - _this.origPageX,\n                    deltaY: pageY - _this.origPageY\n                });\n            }\n        };\n        this.containerEl = containerEl;\n        this.emitter = new EmitterMixin();\n        containerEl.addEventListener('mousedown', this.handleMouseDown);\n        containerEl.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n        listenerCreated();\n    }\n    PointerDragging.prototype.destroy = function () {\n        this.containerEl.removeEventListener('mousedown', this.handleMouseDown);\n        this.containerEl.removeEventListener('touchstart', this.handleTouchStart, { passive: true });\n        listenerDestroyed();\n    };\n    PointerDragging.prototype.tryStart = function (ev) {\n        var subjectEl = this.querySubjectEl(ev);\n        var downEl = ev.target;\n        if (subjectEl &&\n            (!this.handleSelector || elementClosest(downEl, this.handleSelector))) {\n            this.subjectEl = subjectEl;\n            this.downEl = downEl;\n            this.isDragging = true; // do this first so cancelTouchScroll will work\n            this.wasTouchScroll = false;\n            return true;\n        }\n        return false;\n    };\n    PointerDragging.prototype.cleanup = function () {\n        isWindowTouchMoveCancelled = false;\n        this.isDragging = false;\n        this.subjectEl = null;\n        this.downEl = null;\n        // keep wasTouchScroll around for later access\n        this.destroyScrollWatch();\n    };\n    PointerDragging.prototype.querySubjectEl = function (ev) {\n        if (this.selector) {\n            return elementClosest(ev.target, this.selector);\n        }\n        else {\n            return this.containerEl;\n        }\n    };\n    PointerDragging.prototype.shouldIgnoreMouse = function () {\n        return ignoreMouseDepth || this.isTouchDragging;\n    };\n    // can be called by user of this class, to cancel touch-based scrolling for the current drag\n    PointerDragging.prototype.cancelTouchScroll = function () {\n        if (this.isDragging) {\n            isWindowTouchMoveCancelled = true;\n        }\n    };\n    // Scrolling that simulates pointermoves\n    // ----------------------------------------------------------------------------------------------------\n    PointerDragging.prototype.initScrollWatch = function (ev) {\n        if (this.shouldWatchScroll) {\n            this.recordCoords(ev);\n            window.addEventListener('scroll', this.handleScroll, true); // useCapture=true\n        }\n    };\n    PointerDragging.prototype.recordCoords = function (ev) {\n        if (this.shouldWatchScroll) {\n            this.prevPageX = ev.pageX;\n            this.prevPageY = ev.pageY;\n            this.prevScrollX = window.pageXOffset;\n            this.prevScrollY = window.pageYOffset;\n        }\n    };\n    PointerDragging.prototype.destroyScrollWatch = function () {\n        if (this.shouldWatchScroll) {\n            window.removeEventListener('scroll', this.handleScroll, true); // useCaptured=true\n        }\n    };\n    // Event Normalization\n    // ----------------------------------------------------------------------------------------------------\n    PointerDragging.prototype.createEventFromMouse = function (ev, isFirst) {\n        var deltaX = 0;\n        var deltaY = 0;\n        // TODO: repeat code\n        if (isFirst) {\n            this.origPageX = ev.pageX;\n            this.origPageY = ev.pageY;\n        }\n        else {\n            deltaX = ev.pageX - this.origPageX;\n            deltaY = ev.pageY - this.origPageY;\n        }\n        return {\n            origEvent: ev,\n            isTouch: false,\n            subjectEl: this.subjectEl,\n            pageX: ev.pageX,\n            pageY: ev.pageY,\n            deltaX: deltaX,\n            deltaY: deltaY\n        };\n    };\n    PointerDragging.prototype.createEventFromTouch = function (ev, isFirst) {\n        var touches = ev.touches;\n        var pageX;\n        var pageY;\n        var deltaX = 0;\n        var deltaY = 0;\n        // if touch coords available, prefer,\n        // because FF would give bad ev.pageX ev.pageY\n        if (touches && touches.length) {\n            pageX = touches[0].pageX;\n            pageY = touches[0].pageY;\n        }\n        else {\n            pageX = ev.pageX;\n            pageY = ev.pageY;\n        }\n        // TODO: repeat code\n        if (isFirst) {\n            this.origPageX = pageX;\n            this.origPageY = pageY;\n        }\n        else {\n            deltaX = pageX - this.origPageX;\n            deltaY = pageY - this.origPageY;\n        }\n        return {\n            origEvent: ev,\n            isTouch: true,\n            subjectEl: this.subjectEl,\n            pageX: pageX,\n            pageY: pageY,\n            deltaX: deltaX,\n            deltaY: deltaY\n        };\n    };\n    return PointerDragging;\n}());\n// Returns a boolean whether this was a left mouse click and no ctrl key (which means right click on Mac)\nfunction isPrimaryMouseButton(ev) {\n    return ev.button === 0 && !ev.ctrlKey;\n}\n// Ignoring fake mouse events generated by touch\n// ----------------------------------------------------------------------------------------------------\nfunction startIgnoringMouse() {\n    ignoreMouseDepth++;\n    setTimeout(function () {\n        ignoreMouseDepth--;\n    }, config.touchMouseIgnoreWait);\n}\n// We want to attach touchmove as early as possible for Safari\n// ----------------------------------------------------------------------------------------------------\nfunction listenerCreated() {\n    if (!(listenerCnt++)) {\n        window.addEventListener('touchmove', onWindowTouchMove, { passive: false });\n    }\n}\nfunction listenerDestroyed() {\n    if (!(--listenerCnt)) {\n        window.removeEventListener('touchmove', onWindowTouchMove, { passive: false });\n    }\n}\nfunction onWindowTouchMove(ev) {\n    if (isWindowTouchMoveCancelled) {\n        ev.preventDefault();\n    }\n}\n\n/*\nAn effect in which an element follows the movement of a pointer across the screen.\nThe moving element is a clone of some other element.\nMust call start + handleMove + stop.\n*/\nvar ElementMirror = /** @class */ (function () {\n    function ElementMirror() {\n        this.isVisible = false; // must be explicitly enabled\n        this.sourceEl = null;\n        this.mirrorEl = null;\n        this.sourceElRect = null; // screen coords relative to viewport\n        // options that can be set directly by caller\n        this.parentNode = document.body;\n        this.zIndex = 9999;\n        this.revertDuration = 0;\n    }\n    ElementMirror.prototype.start = function (sourceEl, pageX, pageY) {\n        this.sourceEl = sourceEl;\n        this.sourceElRect = this.sourceEl.getBoundingClientRect();\n        this.origScreenX = pageX - window.pageXOffset;\n        this.origScreenY = pageY - window.pageYOffset;\n        this.deltaX = 0;\n        this.deltaY = 0;\n        this.updateElPosition();\n    };\n    ElementMirror.prototype.handleMove = function (pageX, pageY) {\n        this.deltaX = (pageX - window.pageXOffset) - this.origScreenX;\n        this.deltaY = (pageY - window.pageYOffset) - this.origScreenY;\n        this.updateElPosition();\n    };\n    // can be called before start\n    ElementMirror.prototype.setIsVisible = function (bool) {\n        if (bool) {\n            if (!this.isVisible) {\n                if (this.mirrorEl) {\n                    this.mirrorEl.style.display = '';\n                }\n                this.isVisible = bool; // needs to happen before updateElPosition\n                this.updateElPosition(); // because was not updating the position while invisible\n            }\n        }\n        else {\n            if (this.isVisible) {\n                if (this.mirrorEl) {\n                    this.mirrorEl.style.display = 'none';\n                }\n                this.isVisible = bool;\n            }\n        }\n    };\n    // always async\n    ElementMirror.prototype.stop = function (needsRevertAnimation, callback) {\n        var _this = this;\n        var done = function () {\n            _this.cleanup();\n            callback();\n        };\n        if (needsRevertAnimation &&\n            this.mirrorEl &&\n            this.isVisible &&\n            this.revertDuration && // if 0, transition won't work\n            (this.deltaX || this.deltaY) // if same coords, transition won't work\n        ) {\n            this.doRevertAnimation(done, this.revertDuration);\n        }\n        else {\n            setTimeout(done, 0);\n        }\n    };\n    ElementMirror.prototype.doRevertAnimation = function (callback, revertDuration) {\n        var mirrorEl = this.mirrorEl;\n        var finalSourceElRect = this.sourceEl.getBoundingClientRect(); // because autoscrolling might have happened\n        mirrorEl.style.transition =\n            'top ' + revertDuration + 'ms,' +\n                'left ' + revertDuration + 'ms';\n        applyStyle(mirrorEl, {\n            left: finalSourceElRect.left,\n            top: finalSourceElRect.top\n        });\n        whenTransitionDone(mirrorEl, function () {\n            mirrorEl.style.transition = '';\n            callback();\n        });\n    };\n    ElementMirror.prototype.cleanup = function () {\n        if (this.mirrorEl) {\n            removeElement(this.mirrorEl);\n            this.mirrorEl = null;\n        }\n        this.sourceEl = null;\n    };\n    ElementMirror.prototype.updateElPosition = function () {\n        if (this.sourceEl && this.isVisible) {\n            applyStyle(this.getMirrorEl(), {\n                left: this.sourceElRect.left + this.deltaX,\n                top: this.sourceElRect.top + this.deltaY\n            });\n        }\n    };\n    ElementMirror.prototype.getMirrorEl = function () {\n        var sourceElRect = this.sourceElRect;\n        var mirrorEl = this.mirrorEl;\n        if (!mirrorEl) {\n            mirrorEl = this.mirrorEl = this.sourceEl.cloneNode(true); // cloneChildren=true\n            // we don't want long taps or any mouse interaction causing selection/menus.\n            // would use preventSelection(), but that prevents selectstart, causing problems.\n            mirrorEl.classList.add('fc-unselectable');\n            mirrorEl.classList.add('fc-dragging');\n            applyStyle(mirrorEl, {\n                position: 'fixed',\n                zIndex: this.zIndex,\n                visibility: '',\n                boxSizing: 'border-box',\n                width: sourceElRect.right - sourceElRect.left,\n                height: sourceElRect.bottom - sourceElRect.top,\n                right: 'auto',\n                bottom: 'auto',\n                margin: 0\n            });\n            this.parentNode.appendChild(mirrorEl);\n        }\n        return mirrorEl;\n    };\n    return ElementMirror;\n}());\n\n/*\nIs a cache for a given element's scroll information (all the info that ScrollController stores)\nin addition the \"client rectangle\" of the element.. the area within the scrollbars.\n\nThe cache can be in one of two modes:\n- doesListening:false - ignores when the container is scrolled by someone else\n- doesListening:true - watch for scrolling and update the cache\n*/\nvar ScrollGeomCache = /** @class */ (function (_super) {\n    __extends(ScrollGeomCache, _super);\n    function ScrollGeomCache(scrollController, doesListening) {\n        var _this = _super.call(this) || this;\n        _this.handleScroll = function () {\n            _this.scrollTop = _this.scrollController.getScrollTop();\n            _this.scrollLeft = _this.scrollController.getScrollLeft();\n            _this.handleScrollChange();\n        };\n        _this.scrollController = scrollController;\n        _this.doesListening = doesListening;\n        _this.scrollTop = _this.origScrollTop = scrollController.getScrollTop();\n        _this.scrollLeft = _this.origScrollLeft = scrollController.getScrollLeft();\n        _this.scrollWidth = scrollController.getScrollWidth();\n        _this.scrollHeight = scrollController.getScrollHeight();\n        _this.clientWidth = scrollController.getClientWidth();\n        _this.clientHeight = scrollController.getClientHeight();\n        _this.clientRect = _this.computeClientRect(); // do last in case it needs cached values\n        if (_this.doesListening) {\n            _this.getEventTarget().addEventListener('scroll', _this.handleScroll);\n        }\n        return _this;\n    }\n    ScrollGeomCache.prototype.destroy = function () {\n        if (this.doesListening) {\n            this.getEventTarget().removeEventListener('scroll', this.handleScroll);\n        }\n    };\n    ScrollGeomCache.prototype.getScrollTop = function () {\n        return this.scrollTop;\n    };\n    ScrollGeomCache.prototype.getScrollLeft = function () {\n        return this.scrollLeft;\n    };\n    ScrollGeomCache.prototype.setScrollTop = function (top) {\n        this.scrollController.setScrollTop(top);\n        if (!this.doesListening) {\n            // we are not relying on the element to normalize out-of-bounds scroll values\n            // so we need to sanitize ourselves\n            this.scrollTop = Math.max(Math.min(top, this.getMaxScrollTop()), 0);\n            this.handleScrollChange();\n        }\n    };\n    ScrollGeomCache.prototype.setScrollLeft = function (top) {\n        this.scrollController.setScrollLeft(top);\n        if (!this.doesListening) {\n            // we are not relying on the element to normalize out-of-bounds scroll values\n            // so we need to sanitize ourselves\n            this.scrollLeft = Math.max(Math.min(top, this.getMaxScrollLeft()), 0);\n            this.handleScrollChange();\n        }\n    };\n    ScrollGeomCache.prototype.getClientWidth = function () {\n        return this.clientWidth;\n    };\n    ScrollGeomCache.prototype.getClientHeight = function () {\n        return this.clientHeight;\n    };\n    ScrollGeomCache.prototype.getScrollWidth = function () {\n        return this.scrollWidth;\n    };\n    ScrollGeomCache.prototype.getScrollHeight = function () {\n        return this.scrollHeight;\n    };\n    ScrollGeomCache.prototype.handleScrollChange = function () {\n    };\n    return ScrollGeomCache;\n}(ScrollController));\nvar ElementScrollGeomCache = /** @class */ (function (_super) {\n    __extends(ElementScrollGeomCache, _super);\n    function ElementScrollGeomCache(el, doesListening) {\n        return _super.call(this, new ElementScrollController(el), doesListening) || this;\n    }\n    ElementScrollGeomCache.prototype.getEventTarget = function () {\n        return this.scrollController.el;\n    };\n    ElementScrollGeomCache.prototype.computeClientRect = function () {\n        return computeInnerRect(this.scrollController.el);\n    };\n    return ElementScrollGeomCache;\n}(ScrollGeomCache));\nvar WindowScrollGeomCache = /** @class */ (function (_super) {\n    __extends(WindowScrollGeomCache, _super);\n    function WindowScrollGeomCache(doesListening) {\n        return _super.call(this, new WindowScrollController(), doesListening) || this;\n    }\n    WindowScrollGeomCache.prototype.getEventTarget = function () {\n        return window;\n    };\n    WindowScrollGeomCache.prototype.computeClientRect = function () {\n        return {\n            left: this.scrollLeft,\n            right: this.scrollLeft + this.clientWidth,\n            top: this.scrollTop,\n            bottom: this.scrollTop + this.clientHeight\n        };\n    };\n    // the window is the only scroll object that changes it's rectangle relative\n    // to the document's topleft as it scrolls\n    WindowScrollGeomCache.prototype.handleScrollChange = function () {\n        this.clientRect = this.computeClientRect();\n    };\n    return WindowScrollGeomCache;\n}(ScrollGeomCache));\n\n// If available we are using native \"performance\" API instead of \"Date\"\n// Read more about it on MDN:\n// https://developer.mozilla.org/en-US/docs/Web/API/Performance\nvar getTime = typeof performance === 'function' ? performance.now : Date.now;\n/*\nFor a pointer interaction, automatically scrolls certain scroll containers when the pointer\napproaches the edge.\n\nThe caller must call start + handleMove + stop.\n*/\nvar AutoScroller = /** @class */ (function () {\n    function AutoScroller() {\n        var _this = this;\n        // options that can be set by caller\n        this.isEnabled = true;\n        this.scrollQuery = [window, '.fc-scroller'];\n        this.edgeThreshold = 50; // pixels\n        this.maxVelocity = 300; // pixels per second\n        // internal state\n        this.pointerScreenX = null;\n        this.pointerScreenY = null;\n        this.isAnimating = false;\n        this.scrollCaches = null;\n        // protect against the initial pointerdown being too close to an edge and starting the scroll\n        this.everMovedUp = false;\n        this.everMovedDown = false;\n        this.everMovedLeft = false;\n        this.everMovedRight = false;\n        this.animate = function () {\n            if (_this.isAnimating) { // wasn't cancelled between animation calls\n                var edge = _this.computeBestEdge(_this.pointerScreenX + window.pageXOffset, _this.pointerScreenY + window.pageYOffset);\n                if (edge) {\n                    var now = getTime();\n                    _this.handleSide(edge, (now - _this.msSinceRequest) / 1000);\n                    _this.requestAnimation(now);\n                }\n                else {\n                    _this.isAnimating = false; // will stop animation\n                }\n            }\n        };\n    }\n    AutoScroller.prototype.start = function (pageX, pageY) {\n        if (this.isEnabled) {\n            this.scrollCaches = this.buildCaches();\n            this.pointerScreenX = null;\n            this.pointerScreenY = null;\n            this.everMovedUp = false;\n            this.everMovedDown = false;\n            this.everMovedLeft = false;\n            this.everMovedRight = false;\n            this.handleMove(pageX, pageY);\n        }\n    };\n    AutoScroller.prototype.handleMove = function (pageX, pageY) {\n        if (this.isEnabled) {\n            var pointerScreenX = pageX - window.pageXOffset;\n            var pointerScreenY = pageY - window.pageYOffset;\n            var yDelta = this.pointerScreenY === null ? 0 : pointerScreenY - this.pointerScreenY;\n            var xDelta = this.pointerScreenX === null ? 0 : pointerScreenX - this.pointerScreenX;\n            if (yDelta < 0) {\n                this.everMovedUp = true;\n            }\n            else if (yDelta > 0) {\n                this.everMovedDown = true;\n            }\n            if (xDelta < 0) {\n                this.everMovedLeft = true;\n            }\n            else if (xDelta > 0) {\n                this.everMovedRight = true;\n            }\n            this.pointerScreenX = pointerScreenX;\n            this.pointerScreenY = pointerScreenY;\n            if (!this.isAnimating) {\n                this.isAnimating = true;\n                this.requestAnimation(getTime());\n            }\n        }\n    };\n    AutoScroller.prototype.stop = function () {\n        if (this.isEnabled) {\n            this.isAnimating = false; // will stop animation\n            for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {\n                var scrollCache = _a[_i];\n                scrollCache.destroy();\n            }\n            this.scrollCaches = null;\n        }\n    };\n    AutoScroller.prototype.requestAnimation = function (now) {\n        this.msSinceRequest = now;\n        requestAnimationFrame(this.animate);\n    };\n    AutoScroller.prototype.handleSide = function (edge, seconds) {\n        var scrollCache = edge.scrollCache;\n        var edgeThreshold = this.edgeThreshold;\n        var invDistance = edgeThreshold - edge.distance;\n        var velocity = // the closer to the edge, the faster we scroll\n         (invDistance * invDistance) / (edgeThreshold * edgeThreshold) * // quadratic\n            this.maxVelocity * seconds;\n        var sign = 1;\n        switch (edge.name) {\n            case 'left':\n                sign = -1;\n            // falls through\n            case 'right':\n                scrollCache.setScrollLeft(scrollCache.getScrollLeft() + velocity * sign);\n                break;\n            case 'top':\n                sign = -1;\n            // falls through\n            case 'bottom':\n                scrollCache.setScrollTop(scrollCache.getScrollTop() + velocity * sign);\n                break;\n        }\n    };\n    // left/top are relative to document topleft\n    AutoScroller.prototype.computeBestEdge = function (left, top) {\n        var edgeThreshold = this.edgeThreshold;\n        var bestSide = null;\n        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {\n            var scrollCache = _a[_i];\n            var rect = scrollCache.clientRect;\n            var leftDist = left - rect.left;\n            var rightDist = rect.right - left;\n            var topDist = top - rect.top;\n            var bottomDist = rect.bottom - top;\n            // completely within the rect?\n            if (leftDist >= 0 && rightDist >= 0 && topDist >= 0 && bottomDist >= 0) {\n                if (topDist <= edgeThreshold && this.everMovedUp && scrollCache.canScrollUp() &&\n                    (!bestSide || bestSide.distance > topDist)) {\n                    bestSide = { scrollCache: scrollCache, name: 'top', distance: topDist };\n                }\n                if (bottomDist <= edgeThreshold && this.everMovedDown && scrollCache.canScrollDown() &&\n                    (!bestSide || bestSide.distance > bottomDist)) {\n                    bestSide = { scrollCache: scrollCache, name: 'bottom', distance: bottomDist };\n                }\n                if (leftDist <= edgeThreshold && this.everMovedLeft && scrollCache.canScrollLeft() &&\n                    (!bestSide || bestSide.distance > leftDist)) {\n                    bestSide = { scrollCache: scrollCache, name: 'left', distance: leftDist };\n                }\n                if (rightDist <= edgeThreshold && this.everMovedRight && scrollCache.canScrollRight() &&\n                    (!bestSide || bestSide.distance > rightDist)) {\n                    bestSide = { scrollCache: scrollCache, name: 'right', distance: rightDist };\n                }\n            }\n        }\n        return bestSide;\n    };\n    AutoScroller.prototype.buildCaches = function () {\n        return this.queryScrollEls().map(function (el) {\n            if (el === window) {\n                return new WindowScrollGeomCache(false); // false = don't listen to user-generated scrolls\n            }\n            else {\n                return new ElementScrollGeomCache(el, false); // false = don't listen to user-generated scrolls\n            }\n        });\n    };\n    AutoScroller.prototype.queryScrollEls = function () {\n        var els = [];\n        for (var _i = 0, _a = this.scrollQuery; _i < _a.length; _i++) {\n            var query = _a[_i];\n            if (typeof query === 'object') {\n                els.push(query);\n            }\n            else {\n                els.push.apply(els, Array.prototype.slice.call(document.querySelectorAll(query)));\n            }\n        }\n        return els;\n    };\n    return AutoScroller;\n}());\n\n/*\nMonitors dragging on an element. Has a number of high-level features:\n- minimum distance required before dragging\n- minimum wait time (\"delay\") before dragging\n- a mirror element that follows the pointer\n*/\nvar FeaturefulElementDragging = /** @class */ (function (_super) {\n    __extends(FeaturefulElementDragging, _super);\n    function FeaturefulElementDragging(containerEl) {\n        var _this = _super.call(this, containerEl) || this;\n        // options that can be directly set by caller\n        // the caller can also set the PointerDragging's options as well\n        _this.delay = null;\n        _this.minDistance = 0;\n        _this.touchScrollAllowed = true; // prevents drag from starting and blocks scrolling during drag\n        _this.mirrorNeedsRevert = false;\n        _this.isInteracting = false; // is the user validly moving the pointer? lasts until pointerup\n        _this.isDragging = false; // is it INTENTFULLY dragging? lasts until after revert animation\n        _this.isDelayEnded = false;\n        _this.isDistanceSurpassed = false;\n        _this.delayTimeoutId = null;\n        _this.onPointerDown = function (ev) {\n            if (!_this.isDragging) { // so new drag doesn't happen while revert animation is going\n                _this.isInteracting = true;\n                _this.isDelayEnded = false;\n                _this.isDistanceSurpassed = false;\n                preventSelection(document.body);\n                preventContextMenu(document.body);\n                // prevent links from being visited if there's an eventual drag.\n                // also prevents selection in older browsers (maybe?).\n                // not necessary for touch, besides, browser would complain about passiveness.\n                if (!ev.isTouch) {\n                    ev.origEvent.preventDefault();\n                }\n                _this.emitter.trigger('pointerdown', ev);\n                if (!_this.pointer.shouldIgnoreMove) {\n                    // actions related to initiating dragstart+dragmove+dragend...\n                    _this.mirror.setIsVisible(false); // reset. caller must set-visible\n                    _this.mirror.start(ev.subjectEl, ev.pageX, ev.pageY); // must happen on first pointer down\n                    _this.startDelay(ev);\n                    if (!_this.minDistance) {\n                        _this.handleDistanceSurpassed(ev);\n                    }\n                }\n            }\n        };\n        _this.onPointerMove = function (ev) {\n            if (_this.isInteracting) { // if false, still waiting for previous drag's revert\n                _this.emitter.trigger('pointermove', ev);\n                if (!_this.isDistanceSurpassed) {\n                    var minDistance = _this.minDistance;\n                    var distanceSq = void 0; // current distance from the origin, squared\n                    var deltaX = ev.deltaX, deltaY = ev.deltaY;\n                    distanceSq = deltaX * deltaX + deltaY * deltaY;\n                    if (distanceSq >= minDistance * minDistance) { // use pythagorean theorem\n                        _this.handleDistanceSurpassed(ev);\n                    }\n                }\n                if (_this.isDragging) {\n                    // a real pointer move? (not one simulated by scrolling)\n                    if (ev.origEvent.type !== 'scroll') {\n                        _this.mirror.handleMove(ev.pageX, ev.pageY);\n                        _this.autoScroller.handleMove(ev.pageX, ev.pageY);\n                    }\n                    _this.emitter.trigger('dragmove', ev);\n                }\n            }\n        };\n        _this.onPointerUp = function (ev) {\n            if (_this.isInteracting) { // if false, still waiting for previous drag's revert\n                _this.isInteracting = false;\n                allowSelection(document.body);\n                allowContextMenu(document.body);\n                _this.emitter.trigger('pointerup', ev); // can potentially set mirrorNeedsRevert\n                if (_this.isDragging) {\n                    _this.autoScroller.stop();\n                    _this.tryStopDrag(ev); // which will stop the mirror\n                }\n                if (_this.delayTimeoutId) {\n                    clearTimeout(_this.delayTimeoutId);\n                    _this.delayTimeoutId = null;\n                }\n            }\n        };\n        var pointer = _this.pointer = new PointerDragging(containerEl);\n        pointer.emitter.on('pointerdown', _this.onPointerDown);\n        pointer.emitter.on('pointermove', _this.onPointerMove);\n        pointer.emitter.on('pointerup', _this.onPointerUp);\n        _this.mirror = new ElementMirror();\n        _this.autoScroller = new AutoScroller();\n        return _this;\n    }\n    FeaturefulElementDragging.prototype.destroy = function () {\n        this.pointer.destroy();\n    };\n    FeaturefulElementDragging.prototype.startDelay = function (ev) {\n        var _this = this;\n        if (typeof this.delay === 'number') {\n            this.delayTimeoutId = setTimeout(function () {\n                _this.delayTimeoutId = null;\n                _this.handleDelayEnd(ev);\n            }, this.delay); // not assignable to number!\n        }\n        else {\n            this.handleDelayEnd(ev);\n        }\n    };\n    FeaturefulElementDragging.prototype.handleDelayEnd = function (ev) {\n        this.isDelayEnded = true;\n        this.tryStartDrag(ev);\n    };\n    FeaturefulElementDragging.prototype.handleDistanceSurpassed = function (ev) {\n        this.isDistanceSurpassed = true;\n        this.tryStartDrag(ev);\n    };\n    FeaturefulElementDragging.prototype.tryStartDrag = function (ev) {\n        if (this.isDelayEnded && this.isDistanceSurpassed) {\n            if (!this.pointer.wasTouchScroll || this.touchScrollAllowed) {\n                this.isDragging = true;\n                this.mirrorNeedsRevert = false;\n                this.autoScroller.start(ev.pageX, ev.pageY);\n                this.emitter.trigger('dragstart', ev);\n                if (this.touchScrollAllowed === false) {\n                    this.pointer.cancelTouchScroll();\n                }\n            }\n        }\n    };\n    FeaturefulElementDragging.prototype.tryStopDrag = function (ev) {\n        // .stop() is ALWAYS asynchronous, which we NEED because we want all pointerup events\n        // that come from the document to fire beforehand. much more convenient this way.\n        this.mirror.stop(this.mirrorNeedsRevert, this.stopDrag.bind(this, ev) // bound with args\n        );\n    };\n    FeaturefulElementDragging.prototype.stopDrag = function (ev) {\n        this.isDragging = false;\n        this.emitter.trigger('dragend', ev);\n    };\n    // fill in the implementations...\n    FeaturefulElementDragging.prototype.setIgnoreMove = function (bool) {\n        this.pointer.shouldIgnoreMove = bool;\n    };\n    FeaturefulElementDragging.prototype.setMirrorIsVisible = function (bool) {\n        this.mirror.setIsVisible(bool);\n    };\n    FeaturefulElementDragging.prototype.setMirrorNeedsRevert = function (bool) {\n        this.mirrorNeedsRevert = bool;\n    };\n    FeaturefulElementDragging.prototype.setAutoScrollEnabled = function (bool) {\n        this.autoScroller.isEnabled = bool;\n    };\n    return FeaturefulElementDragging;\n}(ElementDragging));\n\n/*\nWhen this class is instantiated, it records the offset of an element (relative to the document topleft),\nand continues to monitor scrolling, updating the cached coordinates if it needs to.\nDoes not access the DOM after instantiation, so highly performant.\n\nAlso keeps track of all scrolling/overflow:hidden containers that are parents of the given element\nand an determine if a given point is inside the combined clipping rectangle.\n*/\nvar OffsetTracker = /** @class */ (function () {\n    function OffsetTracker(el) {\n        this.origRect = computeRect(el);\n        // will work fine for divs that have overflow:hidden\n        this.scrollCaches = getClippingParents(el).map(function (el) {\n            return new ElementScrollGeomCache(el, true); // listen=true\n        });\n    }\n    OffsetTracker.prototype.destroy = function () {\n        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {\n            var scrollCache = _a[_i];\n            scrollCache.destroy();\n        }\n    };\n    OffsetTracker.prototype.computeLeft = function () {\n        var left = this.origRect.left;\n        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {\n            var scrollCache = _a[_i];\n            left += scrollCache.origScrollLeft - scrollCache.getScrollLeft();\n        }\n        return left;\n    };\n    OffsetTracker.prototype.computeTop = function () {\n        var top = this.origRect.top;\n        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {\n            var scrollCache = _a[_i];\n            top += scrollCache.origScrollTop - scrollCache.getScrollTop();\n        }\n        return top;\n    };\n    OffsetTracker.prototype.isWithinClipping = function (pageX, pageY) {\n        var point = { left: pageX, top: pageY };\n        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {\n            var scrollCache = _a[_i];\n            if (!isIgnoredClipping(scrollCache.getEventTarget()) &&\n                !pointInsideRect(point, scrollCache.clientRect)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return OffsetTracker;\n}());\n// certain clipping containers should never constrain interactions, like <html> and <body>\n// https://github.com/fullcalendar/fullcalendar/issues/3615\nfunction isIgnoredClipping(node) {\n    var tagName = node.tagName;\n    return tagName === 'HTML' || tagName === 'BODY';\n}\n\n/*\nTracks movement over multiple droppable areas (aka \"hits\")\nthat exist in one or more DateComponents.\nRelies on an existing draggable.\n\nemits:\n- pointerdown\n- dragstart\n- hitchange - fires initially, even if not over a hit\n- pointerup\n- (hitchange - again, to null, if ended over a hit)\n- dragend\n*/\nvar HitDragging = /** @class */ (function () {\n    function HitDragging(dragging, droppableStore) {\n        var _this = this;\n        // options that can be set by caller\n        this.useSubjectCenter = false;\n        this.requireInitial = true; // if doesn't start out on a hit, won't emit any events\n        this.initialHit = null;\n        this.movingHit = null;\n        this.finalHit = null; // won't ever be populated if shouldIgnoreMove\n        this.handlePointerDown = function (ev) {\n            var dragging = _this.dragging;\n            _this.initialHit = null;\n            _this.movingHit = null;\n            _this.finalHit = null;\n            _this.prepareHits();\n            _this.processFirstCoord(ev);\n            if (_this.initialHit || !_this.requireInitial) {\n                dragging.setIgnoreMove(false);\n                _this.emitter.trigger('pointerdown', ev); // TODO: fire this before computing processFirstCoord, so listeners can cancel. this gets fired by almost every handler :(\n            }\n            else {\n                dragging.setIgnoreMove(true);\n            }\n        };\n        this.handleDragStart = function (ev) {\n            _this.emitter.trigger('dragstart', ev);\n            _this.handleMove(ev, true); // force = fire even if initially null\n        };\n        this.handleDragMove = function (ev) {\n            _this.emitter.trigger('dragmove', ev);\n            _this.handleMove(ev);\n        };\n        this.handlePointerUp = function (ev) {\n            _this.releaseHits();\n            _this.emitter.trigger('pointerup', ev);\n        };\n        this.handleDragEnd = function (ev) {\n            if (_this.movingHit) {\n                _this.emitter.trigger('hitupdate', null, true, ev);\n            }\n            _this.finalHit = _this.movingHit;\n            _this.movingHit = null;\n            _this.emitter.trigger('dragend', ev);\n        };\n        this.droppableStore = droppableStore;\n        dragging.emitter.on('pointerdown', this.handlePointerDown);\n        dragging.emitter.on('dragstart', this.handleDragStart);\n        dragging.emitter.on('dragmove', this.handleDragMove);\n        dragging.emitter.on('pointerup', this.handlePointerUp);\n        dragging.emitter.on('dragend', this.handleDragEnd);\n        this.dragging = dragging;\n        this.emitter = new EmitterMixin();\n    }\n    // sets initialHit\n    // sets coordAdjust\n    HitDragging.prototype.processFirstCoord = function (ev) {\n        var origPoint = { left: ev.pageX, top: ev.pageY };\n        var adjustedPoint = origPoint;\n        var subjectEl = ev.subjectEl;\n        var subjectRect;\n        if (subjectEl !== document) {\n            subjectRect = computeRect(subjectEl);\n            adjustedPoint = constrainPoint(adjustedPoint, subjectRect);\n        }\n        var initialHit = this.initialHit = this.queryHitForOffset(adjustedPoint.left, adjustedPoint.top);\n        if (initialHit) {\n            if (this.useSubjectCenter && subjectRect) {\n                var slicedSubjectRect = intersectRects(subjectRect, initialHit.rect);\n                if (slicedSubjectRect) {\n                    adjustedPoint = getRectCenter(slicedSubjectRect);\n                }\n            }\n            this.coordAdjust = diffPoints(adjustedPoint, origPoint);\n        }\n        else {\n            this.coordAdjust = { left: 0, top: 0 };\n        }\n    };\n    HitDragging.prototype.handleMove = function (ev, forceHandle) {\n        var hit = this.queryHitForOffset(ev.pageX + this.coordAdjust.left, ev.pageY + this.coordAdjust.top);\n        if (forceHandle || !isHitsEqual(this.movingHit, hit)) {\n            this.movingHit = hit;\n            this.emitter.trigger('hitupdate', hit, false, ev);\n        }\n    };\n    HitDragging.prototype.prepareHits = function () {\n        this.offsetTrackers = mapHash(this.droppableStore, function (interactionSettings) {\n            interactionSettings.component.buildPositionCaches();\n            return new OffsetTracker(interactionSettings.el);\n        });\n    };\n    HitDragging.prototype.releaseHits = function () {\n        var offsetTrackers = this.offsetTrackers;\n        for (var id in offsetTrackers) {\n            offsetTrackers[id].destroy();\n        }\n        this.offsetTrackers = {};\n    };\n    HitDragging.prototype.queryHitForOffset = function (offsetLeft, offsetTop) {\n        var _a = this, droppableStore = _a.droppableStore, offsetTrackers = _a.offsetTrackers;\n        var bestHit = null;\n        for (var id in droppableStore) {\n            var component = droppableStore[id].component;\n            var offsetTracker = offsetTrackers[id];\n            if (offsetTracker.isWithinClipping(offsetLeft, offsetTop)) {\n                var originLeft = offsetTracker.computeLeft();\n                var originTop = offsetTracker.computeTop();\n                var positionLeft = offsetLeft - originLeft;\n                var positionTop = offsetTop - originTop;\n                var origRect = offsetTracker.origRect;\n                var width = origRect.right - origRect.left;\n                var height = origRect.bottom - origRect.top;\n                if (\n                // must be within the element's bounds\n                positionLeft >= 0 && positionLeft < width &&\n                    positionTop >= 0 && positionTop < height) {\n                    var hit = component.queryHit(positionLeft, positionTop, width, height);\n                    if (hit &&\n                        (\n                        // make sure the hit is within activeRange, meaning it's not a deal cell\n                        !component.props.dateProfile || // hack for DayTile\n                            rangeContainsRange(component.props.dateProfile.activeRange, hit.dateSpan.range)) &&\n                        (!bestHit || hit.layer > bestHit.layer)) {\n                        // TODO: better way to re-orient rectangle\n                        hit.rect.left += originLeft;\n                        hit.rect.right += originLeft;\n                        hit.rect.top += originTop;\n                        hit.rect.bottom += originTop;\n                        bestHit = hit;\n                    }\n                }\n            }\n        }\n        return bestHit;\n    };\n    return HitDragging;\n}());\nfunction isHitsEqual(hit0, hit1) {\n    if (!hit0 && !hit1) {\n        return true;\n    }\n    if (Boolean(hit0) !== Boolean(hit1)) {\n        return false;\n    }\n    return isDateSpansEqual(hit0.dateSpan, hit1.dateSpan);\n}\n\n/*\nMonitors when the user clicks on a specific date/time of a component.\nA pointerdown+pointerup on the same \"hit\" constitutes a click.\n*/\nvar DateClicking = /** @class */ (function (_super) {\n    __extends(DateClicking, _super);\n    function DateClicking(settings) {\n        var _this = _super.call(this, settings) || this;\n        _this.handlePointerDown = function (ev) {\n            var dragging = _this.dragging;\n            // do this in pointerdown (not dragend) because DOM might be mutated by the time dragend is fired\n            dragging.setIgnoreMove(!_this.component.isValidDateDownEl(dragging.pointer.downEl));\n        };\n        // won't even fire if moving was ignored\n        _this.handleDragEnd = function (ev) {\n            var component = _this.component;\n            var pointer = _this.dragging.pointer;\n            if (!pointer.wasTouchScroll) {\n                var _a = _this.hitDragging, initialHit = _a.initialHit, finalHit = _a.finalHit;\n                if (initialHit && finalHit && isHitsEqual(initialHit, finalHit)) {\n                    component.calendar.triggerDateClick(initialHit.dateSpan, initialHit.dayEl, component.view, ev.origEvent);\n                }\n            }\n        };\n        var component = settings.component;\n        // we DO want to watch pointer moves because otherwise finalHit won't get populated\n        _this.dragging = new FeaturefulElementDragging(component.el);\n        _this.dragging.autoScroller.isEnabled = false;\n        var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, interactionSettingsToStore(settings));\n        hitDragging.emitter.on('pointerdown', _this.handlePointerDown);\n        hitDragging.emitter.on('dragend', _this.handleDragEnd);\n        return _this;\n    }\n    DateClicking.prototype.destroy = function () {\n        this.dragging.destroy();\n    };\n    return DateClicking;\n}(Interaction));\n\n/*\nTracks when the user selects a portion of time of a component,\nconstituted by a drag over date cells, with a possible delay at the beginning of the drag.\n*/\nvar DateSelecting = /** @class */ (function (_super) {\n    __extends(DateSelecting, _super);\n    function DateSelecting(settings) {\n        var _this = _super.call(this, settings) || this;\n        _this.dragSelection = null;\n        _this.handlePointerDown = function (ev) {\n            var _a = _this, component = _a.component, dragging = _a.dragging;\n            var canSelect = component.opt('selectable') &&\n                component.isValidDateDownEl(ev.origEvent.target);\n            // don't bother to watch expensive moves if component won't do selection\n            dragging.setIgnoreMove(!canSelect);\n            // if touch, require user to hold down\n            dragging.delay = ev.isTouch ? getComponentTouchDelay(component) : null;\n        };\n        _this.handleDragStart = function (ev) {\n            _this.component.calendar.unselect(ev); // unselect previous selections\n        };\n        _this.handleHitUpdate = function (hit, isFinal) {\n            var calendar = _this.component.calendar;\n            var dragSelection = null;\n            var isInvalid = false;\n            if (hit) {\n                dragSelection = joinHitsIntoSelection(_this.hitDragging.initialHit, hit, calendar.pluginSystem.hooks.dateSelectionTransformers);\n                if (!dragSelection || !_this.component.isDateSelectionValid(dragSelection)) {\n                    isInvalid = true;\n                    dragSelection = null;\n                }\n            }\n            if (dragSelection) {\n                calendar.dispatch({ type: 'SELECT_DATES', selection: dragSelection });\n            }\n            else if (!isFinal) { // only unselect if moved away while dragging\n                calendar.dispatch({ type: 'UNSELECT_DATES' });\n            }\n            if (!isInvalid) {\n                enableCursor();\n            }\n            else {\n                disableCursor();\n            }\n            if (!isFinal) {\n                _this.dragSelection = dragSelection; // only clear if moved away from all hits while dragging\n            }\n        };\n        _this.handlePointerUp = function (pev) {\n            if (_this.dragSelection) {\n                // selection is already rendered, so just need to report selection\n                _this.component.calendar.triggerDateSelect(_this.dragSelection, pev);\n                _this.dragSelection = null;\n            }\n        };\n        var component = settings.component;\n        var dragging = _this.dragging = new FeaturefulElementDragging(component.el);\n        dragging.touchScrollAllowed = false;\n        dragging.minDistance = component.opt('selectMinDistance') || 0;\n        dragging.autoScroller.isEnabled = component.opt('dragScroll');\n        var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, interactionSettingsToStore(settings));\n        hitDragging.emitter.on('pointerdown', _this.handlePointerDown);\n        hitDragging.emitter.on('dragstart', _this.handleDragStart);\n        hitDragging.emitter.on('hitupdate', _this.handleHitUpdate);\n        hitDragging.emitter.on('pointerup', _this.handlePointerUp);\n        return _this;\n    }\n    DateSelecting.prototype.destroy = function () {\n        this.dragging.destroy();\n    };\n    return DateSelecting;\n}(Interaction));\nfunction getComponentTouchDelay(component) {\n    var delay = component.opt('selectLongPressDelay');\n    if (delay == null) {\n        delay = component.opt('longPressDelay');\n    }\n    return delay;\n}\nfunction joinHitsIntoSelection(hit0, hit1, dateSelectionTransformers) {\n    var dateSpan0 = hit0.dateSpan;\n    var dateSpan1 = hit1.dateSpan;\n    var ms = [\n        dateSpan0.range.start,\n        dateSpan0.range.end,\n        dateSpan1.range.start,\n        dateSpan1.range.end\n    ];\n    ms.sort(compareNumbers);\n    var props = {};\n    for (var _i = 0, dateSelectionTransformers_1 = dateSelectionTransformers; _i < dateSelectionTransformers_1.length; _i++) {\n        var transformer = dateSelectionTransformers_1[_i];\n        var res = transformer(hit0, hit1);\n        if (res === false) {\n            return null;\n        }\n        else if (res) {\n            __assign(props, res);\n        }\n    }\n    props.range = { start: ms[0], end: ms[3] };\n    props.allDay = dateSpan0.allDay;\n    return props;\n}\n\nvar EventDragging = /** @class */ (function (_super) {\n    __extends(EventDragging, _super);\n    function EventDragging(settings) {\n        var _this = _super.call(this, settings) || this;\n        // internal state\n        _this.subjectSeg = null; // the seg being selected/dragged\n        _this.isDragging = false;\n        _this.eventRange = null;\n        _this.relevantEvents = null; // the events being dragged\n        _this.receivingCalendar = null;\n        _this.validMutation = null;\n        _this.mutatedRelevantEvents = null;\n        _this.handlePointerDown = function (ev) {\n            var origTarget = ev.origEvent.target;\n            var _a = _this, component = _a.component, dragging = _a.dragging;\n            var mirror = dragging.mirror;\n            var initialCalendar = component.calendar;\n            var subjectSeg = _this.subjectSeg = getElSeg(ev.subjectEl);\n            var eventRange = _this.eventRange = subjectSeg.eventRange;\n            var eventInstanceId = eventRange.instance.instanceId;\n            _this.relevantEvents = getRelevantEvents(initialCalendar.state.eventStore, eventInstanceId);\n            dragging.minDistance = ev.isTouch ? 0 : component.opt('eventDragMinDistance');\n            dragging.delay =\n                // only do a touch delay if touch and this event hasn't been selected yet\n                (ev.isTouch && eventInstanceId !== component.props.eventSelection) ?\n                    getComponentTouchDelay$1(component) :\n                    null;\n            mirror.parentNode = initialCalendar.el;\n            mirror.revertDuration = component.opt('dragRevertDuration');\n            var isValid = component.isValidSegDownEl(origTarget) &&\n                !elementClosest(origTarget, '.fc-resizer'); // NOT on a resizer\n            dragging.setIgnoreMove(!isValid);\n            // disable dragging for elements that are resizable (ie, selectable)\n            // but are not draggable\n            _this.isDragging = isValid &&\n                ev.subjectEl.classList.contains('fc-draggable');\n        };\n        _this.handleDragStart = function (ev) {\n            var initialCalendar = _this.component.calendar;\n            var eventRange = _this.eventRange;\n            var eventInstanceId = eventRange.instance.instanceId;\n            if (ev.isTouch) {\n                // need to select a different event?\n                if (eventInstanceId !== _this.component.props.eventSelection) {\n                    initialCalendar.dispatch({ type: 'SELECT_EVENT', eventInstanceId: eventInstanceId });\n                }\n            }\n            else {\n                // if now using mouse, but was previous touch interaction, clear selected event\n                initialCalendar.dispatch({ type: 'UNSELECT_EVENT' });\n            }\n            if (_this.isDragging) {\n                initialCalendar.unselect(ev); // unselect *date* selection\n                initialCalendar.publiclyTrigger('eventDragStart', [\n                    {\n                        el: _this.subjectSeg.el,\n                        event: new EventApi(initialCalendar, eventRange.def, eventRange.instance),\n                        jsEvent: ev.origEvent,\n                        view: _this.component.view\n                    }\n                ]);\n            }\n        };\n        _this.handleHitUpdate = function (hit, isFinal) {\n            if (!_this.isDragging) {\n                return;\n            }\n            var relevantEvents = _this.relevantEvents;\n            var initialHit = _this.hitDragging.initialHit;\n            var initialCalendar = _this.component.calendar;\n            // states based on new hit\n            var receivingCalendar = null;\n            var mutation = null;\n            var mutatedRelevantEvents = null;\n            var isInvalid = false;\n            var interaction = {\n                affectedEvents: relevantEvents,\n                mutatedEvents: createEmptyEventStore(),\n                isEvent: true,\n                origSeg: _this.subjectSeg\n            };\n            if (hit) {\n                var receivingComponent = hit.component;\n                receivingCalendar = receivingComponent.calendar;\n                if (initialCalendar === receivingCalendar ||\n                    receivingComponent.opt('editable') && receivingComponent.opt('droppable')) {\n                    mutation = computeEventMutation(initialHit, hit, receivingCalendar.pluginSystem.hooks.eventDragMutationMassagers);\n                    if (mutation) {\n                        mutatedRelevantEvents = applyMutationToEventStore(relevantEvents, receivingCalendar.eventUiBases, mutation, receivingCalendar);\n                        interaction.mutatedEvents = mutatedRelevantEvents;\n                        if (!receivingComponent.isInteractionValid(interaction)) {\n                            isInvalid = true;\n                            mutation = null;\n                            mutatedRelevantEvents = null;\n                            interaction.mutatedEvents = createEmptyEventStore();\n                        }\n                    }\n                }\n                else {\n                    receivingCalendar = null;\n                }\n            }\n            _this.displayDrag(receivingCalendar, interaction);\n            if (!isInvalid) {\n                enableCursor();\n            }\n            else {\n                disableCursor();\n            }\n            if (!isFinal) {\n                if (initialCalendar === receivingCalendar && // TODO: write test for this\n                    isHitsEqual(initialHit, hit)) {\n                    mutation = null;\n                }\n                _this.dragging.setMirrorNeedsRevert(!mutation);\n                // render the mirror if no already-rendered mirror\n                // TODO: wish we could somehow wait for dispatch to guarantee render\n                _this.dragging.setMirrorIsVisible(!hit || !document.querySelector('.fc-mirror'));\n                // assign states based on new hit\n                _this.receivingCalendar = receivingCalendar;\n                _this.validMutation = mutation;\n                _this.mutatedRelevantEvents = mutatedRelevantEvents;\n            }\n        };\n        _this.handlePointerUp = function () {\n            if (!_this.isDragging) {\n                _this.cleanup(); // because handleDragEnd won't fire\n            }\n        };\n        _this.handleDragEnd = function (ev) {\n            if (_this.isDragging) {\n                var initialCalendar_1 = _this.component.calendar;\n                var initialView = _this.component.view;\n                var _a = _this, receivingCalendar = _a.receivingCalendar, validMutation = _a.validMutation;\n                var eventDef = _this.eventRange.def;\n                var eventInstance = _this.eventRange.instance;\n                var eventApi = new EventApi(initialCalendar_1, eventDef, eventInstance);\n                var relevantEvents_1 = _this.relevantEvents;\n                var mutatedRelevantEvents = _this.mutatedRelevantEvents;\n                var finalHit = _this.hitDragging.finalHit;\n                _this.clearDrag(); // must happen after revert animation\n                initialCalendar_1.publiclyTrigger('eventDragStop', [\n                    {\n                        el: _this.subjectSeg.el,\n                        event: eventApi,\n                        jsEvent: ev.origEvent,\n                        view: initialView\n                    }\n                ]);\n                if (validMutation) {\n                    // dropped within same calendar\n                    if (receivingCalendar === initialCalendar_1) {\n                        initialCalendar_1.dispatch({\n                            type: 'MERGE_EVENTS',\n                            eventStore: mutatedRelevantEvents\n                        });\n                        var transformed = {};\n                        for (var _i = 0, _b = initialCalendar_1.pluginSystem.hooks.eventDropTransformers; _i < _b.length; _i++) {\n                            var transformer = _b[_i];\n                            __assign(transformed, transformer(validMutation, initialCalendar_1));\n                        }\n                        var eventDropArg = __assign({}, transformed, { el: ev.subjectEl, delta: validMutation.datesDelta, oldEvent: eventApi, event: new EventApi(// the data AFTER the mutation\n                            initialCalendar_1, mutatedRelevantEvents.defs[eventDef.defId], eventInstance ? mutatedRelevantEvents.instances[eventInstance.instanceId] : null), revert: function () {\n                                initialCalendar_1.dispatch({\n                                    type: 'MERGE_EVENTS',\n                                    eventStore: relevantEvents_1\n                                });\n                            }, jsEvent: ev.origEvent, view: initialView });\n                        initialCalendar_1.publiclyTrigger('eventDrop', [eventDropArg]);\n                        // dropped in different calendar\n                    }\n                    else if (receivingCalendar) {\n                        initialCalendar_1.publiclyTrigger('eventLeave', [\n                            {\n                                draggedEl: ev.subjectEl,\n                                event: eventApi,\n                                view: initialView\n                            }\n                        ]);\n                        initialCalendar_1.dispatch({\n                            type: 'REMOVE_EVENT_INSTANCES',\n                            instances: _this.mutatedRelevantEvents.instances\n                        });\n                        receivingCalendar.dispatch({\n                            type: 'MERGE_EVENTS',\n                            eventStore: _this.mutatedRelevantEvents\n                        });\n                        if (ev.isTouch) {\n                            receivingCalendar.dispatch({\n                                type: 'SELECT_EVENT',\n                                eventInstanceId: eventInstance.instanceId\n                            });\n                        }\n                        var dropArg = __assign({}, receivingCalendar.buildDatePointApi(finalHit.dateSpan), { draggedEl: ev.subjectEl, jsEvent: ev.origEvent, view: finalHit.component // should this be finalHit.component.view? See #4644\n                         });\n                        receivingCalendar.publiclyTrigger('drop', [dropArg]);\n                        receivingCalendar.publiclyTrigger('eventReceive', [\n                            {\n                                draggedEl: ev.subjectEl,\n                                event: new EventApi(// the data AFTER the mutation\n                                receivingCalendar, mutatedRelevantEvents.defs[eventDef.defId], mutatedRelevantEvents.instances[eventInstance.instanceId]),\n                                view: finalHit.component // should this be finalHit.component.view? See #4644\n                            }\n                        ]);\n                    }\n                }\n                else {\n                    initialCalendar_1.publiclyTrigger('_noEventDrop');\n                }\n            }\n            _this.cleanup();\n        };\n        var component = _this.component;\n        var dragging = _this.dragging = new FeaturefulElementDragging(component.el);\n        dragging.pointer.selector = EventDragging.SELECTOR;\n        dragging.touchScrollAllowed = false;\n        dragging.autoScroller.isEnabled = component.opt('dragScroll');\n        var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, interactionSettingsStore);\n        hitDragging.useSubjectCenter = settings.useEventCenter;\n        hitDragging.emitter.on('pointerdown', _this.handlePointerDown);\n        hitDragging.emitter.on('dragstart', _this.handleDragStart);\n        hitDragging.emitter.on('hitupdate', _this.handleHitUpdate);\n        hitDragging.emitter.on('pointerup', _this.handlePointerUp);\n        hitDragging.emitter.on('dragend', _this.handleDragEnd);\n        return _this;\n    }\n    EventDragging.prototype.destroy = function () {\n        this.dragging.destroy();\n    };\n    // render a drag state on the next receivingCalendar\n    EventDragging.prototype.displayDrag = function (nextCalendar, state) {\n        var initialCalendar = this.component.calendar;\n        var prevCalendar = this.receivingCalendar;\n        // does the previous calendar need to be cleared?\n        if (prevCalendar && prevCalendar !== nextCalendar) {\n            // does the initial calendar need to be cleared?\n            // if so, don't clear all the way. we still need to to hide the affectedEvents\n            if (prevCalendar === initialCalendar) {\n                prevCalendar.dispatch({\n                    type: 'SET_EVENT_DRAG',\n                    state: {\n                        affectedEvents: state.affectedEvents,\n                        mutatedEvents: createEmptyEventStore(),\n                        isEvent: true,\n                        origSeg: state.origSeg\n                    }\n                });\n                // completely clear the old calendar if it wasn't the initial\n            }\n            else {\n                prevCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' });\n            }\n        }\n        if (nextCalendar) {\n            nextCalendar.dispatch({ type: 'SET_EVENT_DRAG', state: state });\n        }\n    };\n    EventDragging.prototype.clearDrag = function () {\n        var initialCalendar = this.component.calendar;\n        var receivingCalendar = this.receivingCalendar;\n        if (receivingCalendar) {\n            receivingCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' });\n        }\n        // the initial calendar might have an dummy drag state from displayDrag\n        if (initialCalendar !== receivingCalendar) {\n            initialCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' });\n        }\n    };\n    EventDragging.prototype.cleanup = function () {\n        this.subjectSeg = null;\n        this.isDragging = false;\n        this.eventRange = null;\n        this.relevantEvents = null;\n        this.receivingCalendar = null;\n        this.validMutation = null;\n        this.mutatedRelevantEvents = null;\n    };\n    EventDragging.SELECTOR = '.fc-draggable, .fc-resizable'; // TODO: test this in IE11\n    return EventDragging;\n}(Interaction));\nfunction computeEventMutation(hit0, hit1, massagers) {\n    var dateSpan0 = hit0.dateSpan;\n    var dateSpan1 = hit1.dateSpan;\n    var date0 = dateSpan0.range.start;\n    var date1 = dateSpan1.range.start;\n    var standardProps = {};\n    if (dateSpan0.allDay !== dateSpan1.allDay) {\n        standardProps.allDay = dateSpan1.allDay;\n        standardProps.hasEnd = hit1.component.opt('allDayMaintainDuration');\n        if (dateSpan1.allDay) {\n            // means date1 is already start-of-day,\n            // but date0 needs to be converted\n            date0 = startOfDay(date0);\n        }\n    }\n    var delta = diffDates(date0, date1, hit0.component.dateEnv, hit0.component === hit1.component ?\n        hit0.component.largeUnit :\n        null);\n    if (delta.milliseconds) { // has hours/minutes/seconds\n        standardProps.allDay = false;\n    }\n    var mutation = {\n        datesDelta: delta,\n        standardProps: standardProps\n    };\n    for (var _i = 0, massagers_1 = massagers; _i < massagers_1.length; _i++) {\n        var massager = massagers_1[_i];\n        massager(mutation, hit0, hit1);\n    }\n    return mutation;\n}\nfunction getComponentTouchDelay$1(component) {\n    var delay = component.opt('eventLongPressDelay');\n    if (delay == null) {\n        delay = component.opt('longPressDelay');\n    }\n    return delay;\n}\n\nvar EventDragging$1 = /** @class */ (function (_super) {\n    __extends(EventDragging, _super);\n    function EventDragging(settings) {\n        var _this = _super.call(this, settings) || this;\n        // internal state\n        _this.draggingSeg = null; // TODO: rename to resizingSeg? subjectSeg?\n        _this.eventRange = null;\n        _this.relevantEvents = null;\n        _this.validMutation = null;\n        _this.mutatedRelevantEvents = null;\n        _this.handlePointerDown = function (ev) {\n            var component = _this.component;\n            var seg = _this.querySeg(ev);\n            var eventRange = _this.eventRange = seg.eventRange;\n            _this.dragging.minDistance = component.opt('eventDragMinDistance');\n            // if touch, need to be working with a selected event\n            _this.dragging.setIgnoreMove(!_this.component.isValidSegDownEl(ev.origEvent.target) ||\n                (ev.isTouch && _this.component.props.eventSelection !== eventRange.instance.instanceId));\n        };\n        _this.handleDragStart = function (ev) {\n            var calendar = _this.component.calendar;\n            var eventRange = _this.eventRange;\n            _this.relevantEvents = getRelevantEvents(calendar.state.eventStore, _this.eventRange.instance.instanceId);\n            _this.draggingSeg = _this.querySeg(ev);\n            calendar.unselect();\n            calendar.publiclyTrigger('eventResizeStart', [\n                {\n                    el: _this.draggingSeg.el,\n                    event: new EventApi(calendar, eventRange.def, eventRange.instance),\n                    jsEvent: ev.origEvent,\n                    view: _this.component.view\n                }\n            ]);\n        };\n        _this.handleHitUpdate = function (hit, isFinal, ev) {\n            var calendar = _this.component.calendar;\n            var relevantEvents = _this.relevantEvents;\n            var initialHit = _this.hitDragging.initialHit;\n            var eventInstance = _this.eventRange.instance;\n            var mutation = null;\n            var mutatedRelevantEvents = null;\n            var isInvalid = false;\n            var interaction = {\n                affectedEvents: relevantEvents,\n                mutatedEvents: createEmptyEventStore(),\n                isEvent: true,\n                origSeg: _this.draggingSeg\n            };\n            if (hit) {\n                mutation = computeMutation(initialHit, hit, ev.subjectEl.classList.contains('fc-start-resizer'), eventInstance.range, calendar.pluginSystem.hooks.eventResizeJoinTransforms);\n            }\n            if (mutation) {\n                mutatedRelevantEvents = applyMutationToEventStore(relevantEvents, calendar.eventUiBases, mutation, calendar);\n                interaction.mutatedEvents = mutatedRelevantEvents;\n                if (!_this.component.isInteractionValid(interaction)) {\n                    isInvalid = true;\n                    mutation = null;\n                    mutatedRelevantEvents = null;\n                    interaction.mutatedEvents = null;\n                }\n            }\n            if (mutatedRelevantEvents) {\n                calendar.dispatch({\n                    type: 'SET_EVENT_RESIZE',\n                    state: interaction\n                });\n            }\n            else {\n                calendar.dispatch({ type: 'UNSET_EVENT_RESIZE' });\n            }\n            if (!isInvalid) {\n                enableCursor();\n            }\n            else {\n                disableCursor();\n            }\n            if (!isFinal) {\n                if (mutation && isHitsEqual(initialHit, hit)) {\n                    mutation = null;\n                }\n                _this.validMutation = mutation;\n                _this.mutatedRelevantEvents = mutatedRelevantEvents;\n            }\n        };\n        _this.handleDragEnd = function (ev) {\n            var calendar = _this.component.calendar;\n            var view = _this.component.view;\n            var eventDef = _this.eventRange.def;\n            var eventInstance = _this.eventRange.instance;\n            var eventApi = new EventApi(calendar, eventDef, eventInstance);\n            var relevantEvents = _this.relevantEvents;\n            var mutatedRelevantEvents = _this.mutatedRelevantEvents;\n            calendar.publiclyTrigger('eventResizeStop', [\n                {\n                    el: _this.draggingSeg.el,\n                    event: eventApi,\n                    jsEvent: ev.origEvent,\n                    view: view\n                }\n            ]);\n            if (_this.validMutation) {\n                calendar.dispatch({\n                    type: 'MERGE_EVENTS',\n                    eventStore: mutatedRelevantEvents\n                });\n                calendar.publiclyTrigger('eventResize', [\n                    {\n                        el: _this.draggingSeg.el,\n                        startDelta: _this.validMutation.startDelta || createDuration(0),\n                        endDelta: _this.validMutation.endDelta || createDuration(0),\n                        prevEvent: eventApi,\n                        event: new EventApi(// the data AFTER the mutation\n                        calendar, mutatedRelevantEvents.defs[eventDef.defId], eventInstance ? mutatedRelevantEvents.instances[eventInstance.instanceId] : null),\n                        revert: function () {\n                            calendar.dispatch({\n                                type: 'MERGE_EVENTS',\n                                eventStore: relevantEvents\n                            });\n                        },\n                        jsEvent: ev.origEvent,\n                        view: view\n                    }\n                ]);\n            }\n            else {\n                calendar.publiclyTrigger('_noEventResize');\n            }\n            // reset all internal state\n            _this.draggingSeg = null;\n            _this.relevantEvents = null;\n            _this.validMutation = null;\n            // okay to keep eventInstance around. useful to set it in handlePointerDown\n        };\n        var component = settings.component;\n        var dragging = _this.dragging = new FeaturefulElementDragging(component.el);\n        dragging.pointer.selector = '.fc-resizer';\n        dragging.touchScrollAllowed = false;\n        dragging.autoScroller.isEnabled = component.opt('dragScroll');\n        var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, interactionSettingsToStore(settings));\n        hitDragging.emitter.on('pointerdown', _this.handlePointerDown);\n        hitDragging.emitter.on('dragstart', _this.handleDragStart);\n        hitDragging.emitter.on('hitupdate', _this.handleHitUpdate);\n        hitDragging.emitter.on('dragend', _this.handleDragEnd);\n        return _this;\n    }\n    EventDragging.prototype.destroy = function () {\n        this.dragging.destroy();\n    };\n    EventDragging.prototype.querySeg = function (ev) {\n        return getElSeg(elementClosest(ev.subjectEl, this.component.fgSegSelector));\n    };\n    return EventDragging;\n}(Interaction));\nfunction computeMutation(hit0, hit1, isFromStart, instanceRange, transforms) {\n    var dateEnv = hit0.component.dateEnv;\n    var date0 = hit0.dateSpan.range.start;\n    var date1 = hit1.dateSpan.range.start;\n    var delta = diffDates(date0, date1, dateEnv, hit0.component.largeUnit);\n    var props = {};\n    for (var _i = 0, transforms_1 = transforms; _i < transforms_1.length; _i++) {\n        var transform = transforms_1[_i];\n        var res = transform(hit0, hit1);\n        if (res === false) {\n            return null;\n        }\n        else if (res) {\n            __assign(props, res);\n        }\n    }\n    if (isFromStart) {\n        if (dateEnv.add(instanceRange.start, delta) < instanceRange.end) {\n            props.startDelta = delta;\n            return props;\n        }\n    }\n    else {\n        if (dateEnv.add(instanceRange.end, delta) > instanceRange.start) {\n            props.endDelta = delta;\n            return props;\n        }\n    }\n    return null;\n}\n\nvar UnselectAuto = /** @class */ (function () {\n    function UnselectAuto(calendar) {\n        var _this = this;\n        this.isRecentPointerDateSelect = false; // wish we could use a selector to detect date selection, but uses hit system\n        this.onSelect = function (selectInfo) {\n            if (selectInfo.jsEvent) {\n                _this.isRecentPointerDateSelect = true;\n            }\n        };\n        this.onDocumentPointerUp = function (pev) {\n            var _a = _this, calendar = _a.calendar, documentPointer = _a.documentPointer;\n            var state = calendar.state;\n            // touch-scrolling should never unfocus any type of selection\n            if (!documentPointer.wasTouchScroll) {\n                if (state.dateSelection && // an existing date selection?\n                    !_this.isRecentPointerDateSelect // a new pointer-initiated date selection since last onDocumentPointerUp?\n                ) {\n                    var unselectAuto = calendar.viewOpt('unselectAuto');\n                    var unselectCancel = calendar.viewOpt('unselectCancel');\n                    if (unselectAuto && (!unselectAuto || !elementClosest(documentPointer.downEl, unselectCancel))) {\n                        calendar.unselect(pev);\n                    }\n                }\n                if (state.eventSelection && // an existing event selected?\n                    !elementClosest(documentPointer.downEl, EventDragging.SELECTOR) // interaction DIDN'T start on an event\n                ) {\n                    calendar.dispatch({ type: 'UNSELECT_EVENT' });\n                }\n            }\n            _this.isRecentPointerDateSelect = false;\n        };\n        this.calendar = calendar;\n        var documentPointer = this.documentPointer = new PointerDragging(document);\n        documentPointer.shouldIgnoreMove = true;\n        documentPointer.shouldWatchScroll = false;\n        documentPointer.emitter.on('pointerup', this.onDocumentPointerUp);\n        /*\n        TODO: better way to know about whether there was a selection with the pointer\n        */\n        calendar.on('select', this.onSelect);\n    }\n    UnselectAuto.prototype.destroy = function () {\n        this.calendar.off('select', this.onSelect);\n        this.documentPointer.destroy();\n    };\n    return UnselectAuto;\n}());\n\n/*\nGiven an already instantiated draggable object for one-or-more elements,\nInterprets any dragging as an attempt to drag an events that lives outside\nof a calendar onto a calendar.\n*/\nvar ExternalElementDragging = /** @class */ (function () {\n    function ExternalElementDragging(dragging, suppliedDragMeta) {\n        var _this = this;\n        this.receivingCalendar = null;\n        this.droppableEvent = null; // will exist for all drags, even if create:false\n        this.suppliedDragMeta = null;\n        this.dragMeta = null;\n        this.handleDragStart = function (ev) {\n            _this.dragMeta = _this.buildDragMeta(ev.subjectEl);\n        };\n        this.handleHitUpdate = function (hit, isFinal, ev) {\n            var dragging = _this.hitDragging.dragging;\n            var receivingCalendar = null;\n            var droppableEvent = null;\n            var isInvalid = false;\n            var interaction = {\n                affectedEvents: createEmptyEventStore(),\n                mutatedEvents: createEmptyEventStore(),\n                isEvent: _this.dragMeta.create,\n                origSeg: null\n            };\n            if (hit) {\n                receivingCalendar = hit.component.calendar;\n                if (_this.canDropElOnCalendar(ev.subjectEl, receivingCalendar)) {\n                    droppableEvent = computeEventForDateSpan(hit.dateSpan, _this.dragMeta, receivingCalendar);\n                    interaction.mutatedEvents = eventTupleToStore(droppableEvent);\n                    isInvalid = !isInteractionValid(interaction, receivingCalendar);\n                    if (isInvalid) {\n                        interaction.mutatedEvents = createEmptyEventStore();\n                        droppableEvent = null;\n                    }\n                }\n            }\n            _this.displayDrag(receivingCalendar, interaction);\n            // show mirror if no already-rendered mirror element OR if we are shutting down the mirror (?)\n            // TODO: wish we could somehow wait for dispatch to guarantee render\n            dragging.setMirrorIsVisible(isFinal || !droppableEvent || !document.querySelector('.fc-mirror'));\n            if (!isInvalid) {\n                enableCursor();\n            }\n            else {\n                disableCursor();\n            }\n            if (!isFinal) {\n                dragging.setMirrorNeedsRevert(!droppableEvent);\n                _this.receivingCalendar = receivingCalendar;\n                _this.droppableEvent = droppableEvent;\n            }\n        };\n        this.handleDragEnd = function (pev) {\n            var _a = _this, receivingCalendar = _a.receivingCalendar, droppableEvent = _a.droppableEvent;\n            _this.clearDrag();\n            if (receivingCalendar && droppableEvent) {\n                var finalHit = _this.hitDragging.finalHit;\n                var finalView = finalHit.component.view;\n                var dragMeta = _this.dragMeta;\n                var arg = __assign({}, receivingCalendar.buildDatePointApi(finalHit.dateSpan), { draggedEl: pev.subjectEl, jsEvent: pev.origEvent, view: finalView });\n                receivingCalendar.publiclyTrigger('drop', [arg]);\n                if (dragMeta.create) {\n                    receivingCalendar.dispatch({\n                        type: 'MERGE_EVENTS',\n                        eventStore: eventTupleToStore(droppableEvent)\n                    });\n                    if (pev.isTouch) {\n                        receivingCalendar.dispatch({\n                            type: 'SELECT_EVENT',\n                            eventInstanceId: droppableEvent.instance.instanceId\n                        });\n                    }\n                    // signal that an external event landed\n                    receivingCalendar.publiclyTrigger('eventReceive', [\n                        {\n                            draggedEl: pev.subjectEl,\n                            event: new EventApi(receivingCalendar, droppableEvent.def, droppableEvent.instance),\n                            view: finalView\n                        }\n                    ]);\n                }\n            }\n            _this.receivingCalendar = null;\n            _this.droppableEvent = null;\n        };\n        var hitDragging = this.hitDragging = new HitDragging(dragging, interactionSettingsStore);\n        hitDragging.requireInitial = false; // will start outside of a component\n        hitDragging.emitter.on('dragstart', this.handleDragStart);\n        hitDragging.emitter.on('hitupdate', this.handleHitUpdate);\n        hitDragging.emitter.on('dragend', this.handleDragEnd);\n        this.suppliedDragMeta = suppliedDragMeta;\n    }\n    ExternalElementDragging.prototype.buildDragMeta = function (subjectEl) {\n        if (typeof this.suppliedDragMeta === 'object') {\n            return parseDragMeta(this.suppliedDragMeta);\n        }\n        else if (typeof this.suppliedDragMeta === 'function') {\n            return parseDragMeta(this.suppliedDragMeta(subjectEl));\n        }\n        else {\n            return getDragMetaFromEl(subjectEl);\n        }\n    };\n    ExternalElementDragging.prototype.displayDrag = function (nextCalendar, state) {\n        var prevCalendar = this.receivingCalendar;\n        if (prevCalendar && prevCalendar !== nextCalendar) {\n            prevCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' });\n        }\n        if (nextCalendar) {\n            nextCalendar.dispatch({ type: 'SET_EVENT_DRAG', state: state });\n        }\n    };\n    ExternalElementDragging.prototype.clearDrag = function () {\n        if (this.receivingCalendar) {\n            this.receivingCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' });\n        }\n    };\n    ExternalElementDragging.prototype.canDropElOnCalendar = function (el, receivingCalendar) {\n        var dropAccept = receivingCalendar.opt('dropAccept');\n        if (typeof dropAccept === 'function') {\n            return dropAccept(el);\n        }\n        else if (typeof dropAccept === 'string' && dropAccept) {\n            return Boolean(elementMatches(el, dropAccept));\n        }\n        return true;\n    };\n    return ExternalElementDragging;\n}());\n// Utils for computing event store from the DragMeta\n// ----------------------------------------------------------------------------------------------------\nfunction computeEventForDateSpan(dateSpan, dragMeta, calendar) {\n    var defProps = __assign({}, dragMeta.leftoverProps);\n    for (var _i = 0, _a = calendar.pluginSystem.hooks.externalDefTransforms; _i < _a.length; _i++) {\n        var transform = _a[_i];\n        __assign(defProps, transform(dateSpan, dragMeta));\n    }\n    var def = parseEventDef(defProps, dragMeta.sourceId, dateSpan.allDay, calendar.opt('forceEventDuration') || Boolean(dragMeta.duration), // hasEnd\n    calendar);\n    var start = dateSpan.range.start;\n    // only rely on time info if drop zone is all-day,\n    // otherwise, we already know the time\n    if (dateSpan.allDay && dragMeta.startTime) {\n        start = calendar.dateEnv.add(start, dragMeta.startTime);\n    }\n    var end = dragMeta.duration ?\n        calendar.dateEnv.add(start, dragMeta.duration) :\n        calendar.getDefaultEventEnd(dateSpan.allDay, start);\n    var instance = createEventInstance(def.defId, { start: start, end: end });\n    return { def: def, instance: instance };\n}\n// Utils for extracting data from element\n// ----------------------------------------------------------------------------------------------------\nfunction getDragMetaFromEl(el) {\n    var str = getEmbeddedElData(el, 'event');\n    var obj = str ?\n        JSON.parse(str) :\n        { create: false }; // if no embedded data, assume no event creation\n    return parseDragMeta(obj);\n}\nconfig.dataAttrPrefix = '';\nfunction getEmbeddedElData(el, name) {\n    var prefix = config.dataAttrPrefix;\n    var prefixedName = (prefix ? prefix + '-' : '') + name;\n    return el.getAttribute('data-' + prefixedName) || '';\n}\n\n/*\nMakes an element (that is *external* to any calendar) draggable.\nCan pass in data that determines how an event will be created when dropped onto a calendar.\nLeverages FullCalendar's internal drag-n-drop functionality WITHOUT a third-party drag system.\n*/\nvar ExternalDraggable = /** @class */ (function () {\n    function ExternalDraggable(el, settings) {\n        var _this = this;\n        if (settings === void 0) { settings = {}; }\n        this.handlePointerDown = function (ev) {\n            var dragging = _this.dragging;\n            var _a = _this.settings, minDistance = _a.minDistance, longPressDelay = _a.longPressDelay;\n            dragging.minDistance =\n                minDistance != null ?\n                    minDistance :\n                    (ev.isTouch ? 0 : globalDefaults.eventDragMinDistance);\n            dragging.delay =\n                ev.isTouch ? // TODO: eventually read eventLongPressDelay instead vvv\n                    (longPressDelay != null ? longPressDelay : globalDefaults.longPressDelay) :\n                    0;\n        };\n        this.handleDragStart = function (ev) {\n            if (ev.isTouch &&\n                _this.dragging.delay &&\n                ev.subjectEl.classList.contains('fc-event')) {\n                _this.dragging.mirror.getMirrorEl().classList.add('fc-selected');\n            }\n        };\n        this.settings = settings;\n        var dragging = this.dragging = new FeaturefulElementDragging(el);\n        dragging.touchScrollAllowed = false;\n        if (settings.itemSelector != null) {\n            dragging.pointer.selector = settings.itemSelector;\n        }\n        if (settings.appendTo != null) {\n            dragging.mirror.parentNode = settings.appendTo; // TODO: write tests\n        }\n        dragging.emitter.on('pointerdown', this.handlePointerDown);\n        dragging.emitter.on('dragstart', this.handleDragStart);\n        new ExternalElementDragging(dragging, settings.eventData);\n    }\n    ExternalDraggable.prototype.destroy = function () {\n        this.dragging.destroy();\n    };\n    return ExternalDraggable;\n}());\n\n/*\nDetects when a *THIRD-PARTY* drag-n-drop system interacts with elements.\nThe third-party system is responsible for drawing the visuals effects of the drag.\nThis class simply monitors for pointer movements and fires events.\nIt also has the ability to hide the moving element (the \"mirror\") during the drag.\n*/\nvar InferredElementDragging = /** @class */ (function (_super) {\n    __extends(InferredElementDragging, _super);\n    function InferredElementDragging(containerEl) {\n        var _this = _super.call(this, containerEl) || this;\n        _this.shouldIgnoreMove = false;\n        _this.mirrorSelector = '';\n        _this.currentMirrorEl = null;\n        _this.handlePointerDown = function (ev) {\n            _this.emitter.trigger('pointerdown', ev);\n            if (!_this.shouldIgnoreMove) {\n                // fire dragstart right away. does not support delay or min-distance\n                _this.emitter.trigger('dragstart', ev);\n            }\n        };\n        _this.handlePointerMove = function (ev) {\n            if (!_this.shouldIgnoreMove) {\n                _this.emitter.trigger('dragmove', ev);\n            }\n        };\n        _this.handlePointerUp = function (ev) {\n            _this.emitter.trigger('pointerup', ev);\n            if (!_this.shouldIgnoreMove) {\n                // fire dragend right away. does not support a revert animation\n                _this.emitter.trigger('dragend', ev);\n            }\n        };\n        var pointer = _this.pointer = new PointerDragging(containerEl);\n        pointer.emitter.on('pointerdown', _this.handlePointerDown);\n        pointer.emitter.on('pointermove', _this.handlePointerMove);\n        pointer.emitter.on('pointerup', _this.handlePointerUp);\n        return _this;\n    }\n    InferredElementDragging.prototype.destroy = function () {\n        this.pointer.destroy();\n    };\n    InferredElementDragging.prototype.setIgnoreMove = function (bool) {\n        this.shouldIgnoreMove = bool;\n    };\n    InferredElementDragging.prototype.setMirrorIsVisible = function (bool) {\n        if (bool) {\n            // restore a previously hidden element.\n            // use the reference in case the selector class has already been removed.\n            if (this.currentMirrorEl) {\n                this.currentMirrorEl.style.visibility = '';\n                this.currentMirrorEl = null;\n            }\n        }\n        else {\n            var mirrorEl = this.mirrorSelector ?\n                document.querySelector(this.mirrorSelector) :\n                null;\n            if (mirrorEl) {\n                this.currentMirrorEl = mirrorEl;\n                mirrorEl.style.visibility = 'hidden';\n            }\n        }\n    };\n    return InferredElementDragging;\n}(ElementDragging));\n\n/*\nBridges third-party drag-n-drop systems with FullCalendar.\nMust be instantiated and destroyed by caller.\n*/\nvar ThirdPartyDraggable = /** @class */ (function () {\n    function ThirdPartyDraggable(containerOrSettings, settings) {\n        var containerEl = document;\n        if (\n        // wish we could just test instanceof EventTarget, but doesn't work in IE11\n        containerOrSettings === document ||\n            containerOrSettings instanceof Element) {\n            containerEl = containerOrSettings;\n            settings = settings || {};\n        }\n        else {\n            settings = (containerOrSettings || {});\n        }\n        var dragging = this.dragging = new InferredElementDragging(containerEl);\n        if (typeof settings.itemSelector === 'string') {\n            dragging.pointer.selector = settings.itemSelector;\n        }\n        else if (containerEl === document) {\n            dragging.pointer.selector = '[data-event]';\n        }\n        if (typeof settings.mirrorSelector === 'string') {\n            dragging.mirrorSelector = settings.mirrorSelector;\n        }\n        new ExternalElementDragging(dragging, settings.eventData);\n    }\n    ThirdPartyDraggable.prototype.destroy = function () {\n        this.dragging.destroy();\n    };\n    return ThirdPartyDraggable;\n}());\n\nvar main = createPlugin({\n    componentInteractions: [DateClicking, DateSelecting, EventDragging, EventDragging$1],\n    calendarInteractions: [UnselectAuto],\n    elementDraggingImpl: FeaturefulElementDragging\n});\n\nexport default main;\nexport { ExternalDraggable as Draggable, FeaturefulElementDragging, PointerDragging, ThirdPartyDraggable };\n","/*!\nFullCalendar Time Grid Plugin v4.3.0\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\n\nimport { createFormatter, removeElement, cssToStr, isMultiDayRange, htmlEscape, compareByFieldSpecs, applyStyle, FgEventRenderer, buildSegCompareObj, FillRenderer, memoizeRendering, createDuration, wholeDivideDurations, findElements, PositionCache, startOfDay, asRoughMs, formatIsoTimeString, addDurations, htmlToElement, createElement, multiplyDuration, DateComponent, hasBgRendering, Splitter, diffDays, buildGotoAnchorHtml, getAllDayHtml, ScrollComponent, matchCellWidths, uncompensateScroll, compensateScroll, subtractInnerElHeight, View, memoize, intersectRanges, Slicer, DayHeader, DaySeries, DayTable, createPlugin } from '@fullcalendar/core';\nimport { DayBgRow, DayGrid, SimpleDayGrid } from '@fullcalendar/daygrid';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/*\nOnly handles foreground segs.\nDoes not own rendering. Use for low-level util methods by TimeGrid.\n*/\nvar TimeGridEventRenderer = /** @class */ (function (_super) {\n    __extends(TimeGridEventRenderer, _super);\n    function TimeGridEventRenderer(timeGrid) {\n        var _this = _super.call(this, timeGrid.context) || this;\n        _this.timeGrid = timeGrid;\n        _this.fullTimeFormat = createFormatter({\n            hour: 'numeric',\n            minute: '2-digit',\n            separator: _this.context.options.defaultRangeSeparator\n        });\n        return _this;\n    }\n    // Given an array of foreground segments, render a DOM element for each, computes position,\n    // and attaches to the column inner-container elements.\n    TimeGridEventRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n        var segsByCol = this.timeGrid.groupSegsByCol(segs);\n        // order the segs within each column\n        // TODO: have groupSegsByCol do this?\n        for (var col = 0; col < segsByCol.length; col++) {\n            segsByCol[col] = this.sortEventSegs(segsByCol[col]);\n        }\n        this.segsByCol = segsByCol;\n        this.timeGrid.attachSegsByCol(segsByCol, this.timeGrid.fgContainerEls);\n    };\n    TimeGridEventRenderer.prototype.detachSegs = function (segs) {\n        segs.forEach(function (seg) {\n            removeElement(seg.el);\n        });\n        this.segsByCol = null;\n    };\n    TimeGridEventRenderer.prototype.computeSegSizes = function (allSegs) {\n        var _a = this, timeGrid = _a.timeGrid, segsByCol = _a.segsByCol;\n        var colCnt = timeGrid.colCnt;\n        timeGrid.computeSegVerticals(allSegs); // horizontals relies on this\n        if (segsByCol) {\n            for (var col = 0; col < colCnt; col++) {\n                this.computeSegHorizontals(segsByCol[col]); // compute horizontal coordinates, z-index's, and reorder the array\n            }\n        }\n    };\n    TimeGridEventRenderer.prototype.assignSegSizes = function (allSegs) {\n        var _a = this, timeGrid = _a.timeGrid, segsByCol = _a.segsByCol;\n        var colCnt = timeGrid.colCnt;\n        timeGrid.assignSegVerticals(allSegs); // horizontals relies on this\n        if (segsByCol) {\n            for (var col = 0; col < colCnt; col++) {\n                this.assignSegCss(segsByCol[col]);\n            }\n        }\n    };\n    // Computes a default event time formatting string if `eventTimeFormat` is not explicitly defined\n    TimeGridEventRenderer.prototype.computeEventTimeFormat = function () {\n        return {\n            hour: 'numeric',\n            minute: '2-digit',\n            meridiem: false\n        };\n    };\n    // Computes a default `displayEventEnd` value if one is not expliclty defined\n    TimeGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n        return true;\n    };\n    // Renders the HTML for a single event segment's default rendering\n    TimeGridEventRenderer.prototype.renderSegHtml = function (seg, mirrorInfo) {\n        var view = this.context.view;\n        var eventRange = seg.eventRange;\n        var eventDef = eventRange.def;\n        var eventUi = eventRange.ui;\n        var allDay = eventDef.allDay;\n        var isDraggable = view.computeEventDraggable(eventDef, eventUi);\n        var isResizableFromStart = seg.isStart && view.computeEventStartResizable(eventDef, eventUi);\n        var isResizableFromEnd = seg.isEnd && view.computeEventEndResizable(eventDef, eventUi);\n        var classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd, mirrorInfo);\n        var skinCss = cssToStr(this.getSkinCss(eventUi));\n        var timeText;\n        var fullTimeText; // more verbose time text. for the print stylesheet\n        var startTimeText; // just the start time text\n        classes.unshift('fc-time-grid-event');\n        // if the event appears to span more than one day...\n        if (isMultiDayRange(eventRange.range)) {\n            // Don't display time text on segments that run entirely through a day.\n            // That would appear as midnight-midnight and would look dumb.\n            // Otherwise, display the time text for the *segment's* times (like 6pm-midnight or midnight-10am)\n            if (seg.isStart || seg.isEnd) {\n                var unzonedStart = seg.start;\n                var unzonedEnd = seg.end;\n                timeText = this._getTimeText(unzonedStart, unzonedEnd, allDay); // TODO: give the timezones\n                fullTimeText = this._getTimeText(unzonedStart, unzonedEnd, allDay, this.fullTimeFormat);\n                startTimeText = this._getTimeText(unzonedStart, unzonedEnd, allDay, null, false); // displayEnd=false\n            }\n        }\n        else {\n            // Display the normal time text for the *event's* times\n            timeText = this.getTimeText(eventRange);\n            fullTimeText = this.getTimeText(eventRange, this.fullTimeFormat);\n            startTimeText = this.getTimeText(eventRange, null, false); // displayEnd=false\n        }\n        return '<a class=\"' + classes.join(' ') + '\"' +\n            (eventDef.url ?\n                ' href=\"' + htmlEscape(eventDef.url) + '\"' :\n                '') +\n            (skinCss ?\n                ' style=\"' + skinCss + '\"' :\n                '') +\n            '>' +\n            '<div class=\"fc-content\">' +\n            (timeText ?\n                '<div class=\"fc-time\"' +\n                    ' data-start=\"' + htmlEscape(startTimeText) + '\"' +\n                    ' data-full=\"' + htmlEscape(fullTimeText) + '\"' +\n                    '>' +\n                    '<span>' + htmlEscape(timeText) + '</span>' +\n                    '</div>' :\n                '') +\n            (eventDef.title ?\n                '<div class=\"fc-title\">' +\n                    htmlEscape(eventDef.title) +\n                    '</div>' :\n                '') +\n            '</div>' +\n            /* TODO: write CSS for this\n            (isResizableFromStart ?\n              '<div class=\"fc-resizer fc-start-resizer\"></div>' :\n              ''\n              ) +\n            */\n            (isResizableFromEnd ?\n                '<div class=\"fc-resizer fc-end-resizer\"></div>' :\n                '') +\n            '</a>';\n    };\n    // Given an array of segments that are all in the same column, sets the backwardCoord and forwardCoord on each.\n    // Assumed the segs are already ordered.\n    // NOTE: Also reorders the given array by date!\n    TimeGridEventRenderer.prototype.computeSegHorizontals = function (segs) {\n        var levels;\n        var level0;\n        var i;\n        levels = buildSlotSegLevels(segs);\n        computeForwardSlotSegs(levels);\n        if ((level0 = levels[0])) {\n            for (i = 0; i < level0.length; i++) {\n                computeSlotSegPressures(level0[i]);\n            }\n            for (i = 0; i < level0.length; i++) {\n                this.computeSegForwardBack(level0[i], 0, 0);\n            }\n        }\n    };\n    // Calculate seg.forwardCoord and seg.backwardCoord for the segment, where both values range\n    // from 0 to 1. If the calendar is left-to-right, the seg.backwardCoord maps to \"left\" and\n    // seg.forwardCoord maps to \"right\" (via percentage). Vice-versa if the calendar is right-to-left.\n    //\n    // The segment might be part of a \"series\", which means consecutive segments with the same pressure\n    // who's width is unknown until an edge has been hit. `seriesBackwardPressure` is the number of\n    // segments behind this one in the current series, and `seriesBackwardCoord` is the starting\n    // coordinate of the first segment in the series.\n    TimeGridEventRenderer.prototype.computeSegForwardBack = function (seg, seriesBackwardPressure, seriesBackwardCoord) {\n        var forwardSegs = seg.forwardSegs;\n        var i;\n        if (seg.forwardCoord === undefined) { // not already computed\n            if (!forwardSegs.length) {\n                // if there are no forward segments, this segment should butt up against the edge\n                seg.forwardCoord = 1;\n            }\n            else {\n                // sort highest pressure first\n                this.sortForwardSegs(forwardSegs);\n                // this segment's forwardCoord will be calculated from the backwardCoord of the\n                // highest-pressure forward segment.\n                this.computeSegForwardBack(forwardSegs[0], seriesBackwardPressure + 1, seriesBackwardCoord);\n                seg.forwardCoord = forwardSegs[0].backwardCoord;\n            }\n            // calculate the backwardCoord from the forwardCoord. consider the series\n            seg.backwardCoord = seg.forwardCoord -\n                (seg.forwardCoord - seriesBackwardCoord) / // available width for series\n                    (seriesBackwardPressure + 1); // # of segments in the series\n            // use this segment's coordinates to computed the coordinates of the less-pressurized\n            // forward segments\n            for (i = 0; i < forwardSegs.length; i++) {\n                this.computeSegForwardBack(forwardSegs[i], 0, seg.forwardCoord);\n            }\n        }\n    };\n    TimeGridEventRenderer.prototype.sortForwardSegs = function (forwardSegs) {\n        var objs = forwardSegs.map(buildTimeGridSegCompareObj);\n        var specs = [\n            // put higher-pressure first\n            { field: 'forwardPressure', order: -1 },\n            // put segments that are closer to initial edge first (and favor ones with no coords yet)\n            { field: 'backwardCoord', order: 1 }\n        ].concat(this.context.view.eventOrderSpecs);\n        objs.sort(function (obj0, obj1) {\n            return compareByFieldSpecs(obj0, obj1, specs);\n        });\n        return objs.map(function (c) {\n            return c._seg;\n        });\n    };\n    // Given foreground event segments that have already had their position coordinates computed,\n    // assigns position-related CSS values to their elements.\n    TimeGridEventRenderer.prototype.assignSegCss = function (segs) {\n        for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n            var seg = segs_1[_i];\n            applyStyle(seg.el, this.generateSegCss(seg));\n            if (seg.level > 0) {\n                seg.el.classList.add('fc-time-grid-event-inset');\n            }\n            // if the event is short that the title will be cut off,\n            // attach a className that condenses the title into the time area.\n            if (seg.eventRange.def.title && seg.bottom - seg.top < 30) {\n                seg.el.classList.add('fc-short'); // TODO: \"condensed\" is a better name\n            }\n        }\n    };\n    // Generates an object with CSS properties/values that should be applied to an event segment element.\n    // Contains important positioning-related properties that should be applied to any event element, customized or not.\n    TimeGridEventRenderer.prototype.generateSegCss = function (seg) {\n        var shouldOverlap = this.context.options.slotEventOverlap;\n        var backwardCoord = seg.backwardCoord; // the left side if LTR. the right side if RTL. floating-point\n        var forwardCoord = seg.forwardCoord; // the right side if LTR. the left side if RTL. floating-point\n        var props = this.timeGrid.generateSegVerticalCss(seg); // get top/bottom first\n        var isRtl = this.timeGrid.isRtl;\n        var left; // amount of space from left edge, a fraction of the total width\n        var right; // amount of space from right edge, a fraction of the total width\n        if (shouldOverlap) {\n            // double the width, but don't go beyond the maximum forward coordinate (1.0)\n            forwardCoord = Math.min(1, backwardCoord + (forwardCoord - backwardCoord) * 2);\n        }\n        if (isRtl) {\n            left = 1 - forwardCoord;\n            right = backwardCoord;\n        }\n        else {\n            left = backwardCoord;\n            right = 1 - forwardCoord;\n        }\n        props.zIndex = seg.level + 1; // convert from 0-base to 1-based\n        props.left = left * 100 + '%';\n        props.right = right * 100 + '%';\n        if (shouldOverlap && seg.forwardPressure) {\n            // add padding to the edge so that forward stacked events don't cover the resizer's icon\n            props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n        }\n        return props;\n    };\n    return TimeGridEventRenderer;\n}(FgEventRenderer));\n// Builds an array of segments \"levels\". The first level will be the leftmost tier of segments if the calendar is\n// left-to-right, or the rightmost if the calendar is right-to-left. Assumes the segments are already ordered by date.\nfunction buildSlotSegLevels(segs) {\n    var levels = [];\n    var i;\n    var seg;\n    var j;\n    for (i = 0; i < segs.length; i++) {\n        seg = segs[i];\n        // go through all the levels and stop on the first level where there are no collisions\n        for (j = 0; j < levels.length; j++) {\n            if (!computeSlotSegCollisions(seg, levels[j]).length) {\n                break;\n            }\n        }\n        seg.level = j;\n        (levels[j] || (levels[j] = [])).push(seg);\n    }\n    return levels;\n}\n// For every segment, figure out the other segments that are in subsequent\n// levels that also occupy the same vertical space. Accumulate in seg.forwardSegs\nfunction computeForwardSlotSegs(levels) {\n    var i;\n    var level;\n    var j;\n    var seg;\n    var k;\n    for (i = 0; i < levels.length; i++) {\n        level = levels[i];\n        for (j = 0; j < level.length; j++) {\n            seg = level[j];\n            seg.forwardSegs = [];\n            for (k = i + 1; k < levels.length; k++) {\n                computeSlotSegCollisions(seg, levels[k], seg.forwardSegs);\n            }\n        }\n    }\n}\n// Figure out which path forward (via seg.forwardSegs) results in the longest path until\n// the furthest edge is reached. The number of segments in this path will be seg.forwardPressure\nfunction computeSlotSegPressures(seg) {\n    var forwardSegs = seg.forwardSegs;\n    var forwardPressure = 0;\n    var i;\n    var forwardSeg;\n    if (seg.forwardPressure === undefined) { // not already computed\n        for (i = 0; i < forwardSegs.length; i++) {\n            forwardSeg = forwardSegs[i];\n            // figure out the child's maximum forward path\n            computeSlotSegPressures(forwardSeg);\n            // either use the existing maximum, or use the child's forward pressure\n            // plus one (for the forwardSeg itself)\n            forwardPressure = Math.max(forwardPressure, 1 + forwardSeg.forwardPressure);\n        }\n        seg.forwardPressure = forwardPressure;\n    }\n}\n// Find all the segments in `otherSegs` that vertically collide with `seg`.\n// Append into an optionally-supplied `results` array and return.\nfunction computeSlotSegCollisions(seg, otherSegs, results) {\n    if (results === void 0) { results = []; }\n    for (var i = 0; i < otherSegs.length; i++) {\n        if (isSlotSegCollision(seg, otherSegs[i])) {\n            results.push(otherSegs[i]);\n        }\n    }\n    return results;\n}\n// Do these segments occupy the same vertical space?\nfunction isSlotSegCollision(seg1, seg2) {\n    return seg1.bottom > seg2.top && seg1.top < seg2.bottom;\n}\nfunction buildTimeGridSegCompareObj(seg) {\n    var obj = buildSegCompareObj(seg);\n    obj.forwardPressure = seg.forwardPressure;\n    obj.backwardCoord = seg.backwardCoord;\n    return obj;\n}\n\nvar TimeGridMirrorRenderer = /** @class */ (function (_super) {\n    __extends(TimeGridMirrorRenderer, _super);\n    function TimeGridMirrorRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TimeGridMirrorRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n        this.segsByCol = this.timeGrid.groupSegsByCol(segs);\n        this.timeGrid.attachSegsByCol(this.segsByCol, this.timeGrid.mirrorContainerEls);\n        this.sourceSeg = mirrorInfo.sourceSeg;\n    };\n    TimeGridMirrorRenderer.prototype.generateSegCss = function (seg) {\n        var props = _super.prototype.generateSegCss.call(this, seg);\n        var sourceSeg = this.sourceSeg;\n        if (sourceSeg && sourceSeg.col === seg.col) {\n            var sourceSegProps = _super.prototype.generateSegCss.call(this, sourceSeg);\n            props.left = sourceSegProps.left;\n            props.right = sourceSegProps.right;\n            props.marginLeft = sourceSegProps.marginLeft;\n            props.marginRight = sourceSegProps.marginRight;\n        }\n        return props;\n    };\n    return TimeGridMirrorRenderer;\n}(TimeGridEventRenderer));\n\nvar TimeGridFillRenderer = /** @class */ (function (_super) {\n    __extends(TimeGridFillRenderer, _super);\n    function TimeGridFillRenderer(timeGrid) {\n        var _this = _super.call(this, timeGrid.context) || this;\n        _this.timeGrid = timeGrid;\n        return _this;\n    }\n    TimeGridFillRenderer.prototype.attachSegs = function (type, segs) {\n        var timeGrid = this.timeGrid;\n        var containerEls;\n        // TODO: more efficient lookup\n        if (type === 'bgEvent') {\n            containerEls = timeGrid.bgContainerEls;\n        }\n        else if (type === 'businessHours') {\n            containerEls = timeGrid.businessContainerEls;\n        }\n        else if (type === 'highlight') {\n            containerEls = timeGrid.highlightContainerEls;\n        }\n        timeGrid.attachSegsByCol(timeGrid.groupSegsByCol(segs), containerEls);\n        return segs.map(function (seg) {\n            return seg.el;\n        });\n    };\n    TimeGridFillRenderer.prototype.computeSegSizes = function (segs) {\n        this.timeGrid.computeSegVerticals(segs);\n    };\n    TimeGridFillRenderer.prototype.assignSegSizes = function (segs) {\n        this.timeGrid.assignSegVerticals(segs);\n    };\n    return TimeGridFillRenderer;\n}(FillRenderer));\n\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\n// potential nice values for the slot-duration and interval-duration\n// from largest to smallest\nvar AGENDA_STOCK_SUB_DURATIONS = [\n    { hours: 1 },\n    { minutes: 30 },\n    { minutes: 15 },\n    { seconds: 30 },\n    { seconds: 15 }\n];\nvar TimeGrid = /** @class */ (function (_super) {\n    __extends(TimeGrid, _super);\n    function TimeGrid(context, el, renderProps) {\n        var _this = _super.call(this, context, el) || this;\n        _this.isSlatSizesDirty = false;\n        _this.isColSizesDirty = false;\n        _this.renderSlats = memoizeRendering(_this._renderSlats);\n        var eventRenderer = _this.eventRenderer = new TimeGridEventRenderer(_this);\n        var fillRenderer = _this.fillRenderer = new TimeGridFillRenderer(_this);\n        _this.mirrorRenderer = new TimeGridMirrorRenderer(_this);\n        var renderColumns = _this.renderColumns = memoizeRendering(_this._renderColumns, _this._unrenderColumns);\n        _this.renderBusinessHours = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'businessHours'), fillRenderer.unrender.bind(fillRenderer, 'businessHours'), [renderColumns]);\n        _this.renderDateSelection = memoizeRendering(_this._renderDateSelection, _this._unrenderDateSelection, [renderColumns]);\n        _this.renderFgEvents = memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderColumns]);\n        _this.renderBgEvents = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'bgEvent'), fillRenderer.unrender.bind(fillRenderer, 'bgEvent'), [renderColumns]);\n        _this.renderEventSelection = memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n        _this.renderEventDrag = memoizeRendering(_this._renderEventDrag, _this._unrenderEventDrag, [renderColumns]);\n        _this.renderEventResize = memoizeRendering(_this._renderEventResize, _this._unrenderEventResize, [renderColumns]);\n        _this.processOptions();\n        el.innerHTML =\n            '<div class=\"fc-bg\"></div>' +\n                '<div class=\"fc-slats\"></div>' +\n                '<hr class=\"fc-divider ' + _this.theme.getClass('widgetHeader') + '\" style=\"display:none\" />';\n        _this.rootBgContainerEl = el.querySelector('.fc-bg');\n        _this.slatContainerEl = el.querySelector('.fc-slats');\n        _this.bottomRuleEl = el.querySelector('.fc-divider');\n        _this.renderProps = renderProps;\n        return _this;\n    }\n    /* Options\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Parses various options into properties of this object\n    TimeGrid.prototype.processOptions = function () {\n        var slotDuration = this.opt('slotDuration');\n        var snapDuration = this.opt('snapDuration');\n        var snapsPerSlot;\n        var input;\n        slotDuration = createDuration(slotDuration);\n        snapDuration = snapDuration ? createDuration(snapDuration) : slotDuration;\n        snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n        if (snapsPerSlot === null) {\n            snapDuration = slotDuration;\n            snapsPerSlot = 1;\n            // TODO: say warning?\n        }\n        this.slotDuration = slotDuration;\n        this.snapDuration = snapDuration;\n        this.snapsPerSlot = snapsPerSlot;\n        // might be an array value (for TimelineView).\n        // if so, getting the most granular entry (the last one probably).\n        input = this.opt('slotLabelFormat');\n        if (Array.isArray(input)) {\n            input = input[input.length - 1];\n        }\n        this.labelFormat = createFormatter(input || {\n            hour: 'numeric',\n            minute: '2-digit',\n            omitZeroMinute: true,\n            meridiem: 'short'\n        });\n        input = this.opt('slotLabelInterval');\n        this.labelInterval = input ?\n            createDuration(input) :\n            this.computeLabelInterval(slotDuration);\n    };\n    // Computes an automatic value for slotLabelInterval\n    TimeGrid.prototype.computeLabelInterval = function (slotDuration) {\n        var i;\n        var labelInterval;\n        var slotsPerLabel;\n        // find the smallest stock label interval that results in more than one slots-per-label\n        for (i = AGENDA_STOCK_SUB_DURATIONS.length - 1; i >= 0; i--) {\n            labelInterval = createDuration(AGENDA_STOCK_SUB_DURATIONS[i]);\n            slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n            if (slotsPerLabel !== null && slotsPerLabel > 1) {\n                return labelInterval;\n            }\n        }\n        return slotDuration; // fall back\n    };\n    /* Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeGrid.prototype.render = function (props) {\n        var cells = props.cells;\n        this.colCnt = cells.length;\n        this.renderSlats(props.dateProfile);\n        this.renderColumns(props.cells, props.dateProfile);\n        this.renderBusinessHours(props.businessHourSegs);\n        this.renderDateSelection(props.dateSelectionSegs);\n        this.renderFgEvents(props.fgEventSegs);\n        this.renderBgEvents(props.bgEventSegs);\n        this.renderEventSelection(props.eventSelection);\n        this.renderEventDrag(props.eventDrag);\n        this.renderEventResize(props.eventResize);\n    };\n    TimeGrid.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        // should unrender everything else too\n        this.renderSlats.unrender();\n        this.renderColumns.unrender();\n    };\n    TimeGrid.prototype.updateSize = function (isResize) {\n        var _a = this, fillRenderer = _a.fillRenderer, eventRenderer = _a.eventRenderer, mirrorRenderer = _a.mirrorRenderer;\n        if (isResize || this.isSlatSizesDirty) {\n            this.buildSlatPositions();\n            this.isSlatSizesDirty = false;\n        }\n        if (isResize || this.isColSizesDirty) {\n            this.buildColPositions();\n            this.isColSizesDirty = false;\n        }\n        fillRenderer.computeSizes(isResize);\n        eventRenderer.computeSizes(isResize);\n        mirrorRenderer.computeSizes(isResize);\n        fillRenderer.assignSizes(isResize);\n        eventRenderer.assignSizes(isResize);\n        mirrorRenderer.assignSizes(isResize);\n    };\n    TimeGrid.prototype._renderSlats = function (dateProfile) {\n        var theme = this.theme;\n        this.slatContainerEl.innerHTML =\n            '<table class=\"' + theme.getClass('tableGrid') + '\">' +\n                this.renderSlatRowHtml(dateProfile) +\n                '</table>';\n        this.slatEls = findElements(this.slatContainerEl, 'tr');\n        this.slatPositions = new PositionCache(this.el, this.slatEls, false, true // vertical\n        );\n        this.isSlatSizesDirty = true;\n    };\n    // Generates the HTML for the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n    TimeGrid.prototype.renderSlatRowHtml = function (dateProfile) {\n        var _a = this, dateEnv = _a.dateEnv, theme = _a.theme, isRtl = _a.isRtl;\n        var html = '';\n        var dayStart = startOfDay(dateProfile.renderRange.start);\n        var slotTime = dateProfile.minTime;\n        var slotIterator = createDuration(0);\n        var slotDate; // will be on the view's first day, but we only care about its time\n        var isLabeled;\n        var axisHtml;\n        // Calculate the time for each slot\n        while (asRoughMs(slotTime) < asRoughMs(dateProfile.maxTime)) {\n            slotDate = dateEnv.add(dayStart, slotTime);\n            isLabeled = wholeDivideDurations(slotIterator, this.labelInterval) !== null;\n            axisHtml =\n                '<td class=\"fc-axis fc-time ' + theme.getClass('widgetContent') + '\">' +\n                    (isLabeled ?\n                        '<span>' + // for matchCellWidths\n                            htmlEscape(dateEnv.format(slotDate, this.labelFormat)) +\n                            '</span>' :\n                        '') +\n                    '</td>';\n            html +=\n                '<tr data-time=\"' + formatIsoTimeString(slotDate) + '\"' +\n                    (isLabeled ? '' : ' class=\"fc-minor\"') +\n                    '>' +\n                    (!isRtl ? axisHtml : '') +\n                    '<td class=\"' + theme.getClass('widgetContent') + '\"></td>' +\n                    (isRtl ? axisHtml : '') +\n                    '</tr>';\n            slotTime = addDurations(slotTime, this.slotDuration);\n            slotIterator = addDurations(slotIterator, this.slotDuration);\n        }\n        return html;\n    };\n    TimeGrid.prototype._renderColumns = function (cells, dateProfile) {\n        var _a = this, theme = _a.theme, dateEnv = _a.dateEnv, view = _a.view;\n        var bgRow = new DayBgRow(this.context);\n        this.rootBgContainerEl.innerHTML =\n            '<table class=\"' + theme.getClass('tableGrid') + '\">' +\n                bgRow.renderHtml({\n                    cells: cells,\n                    dateProfile: dateProfile,\n                    renderIntroHtml: this.renderProps.renderBgIntroHtml\n                }) +\n                '</table>';\n        this.colEls = findElements(this.el, '.fc-day, .fc-disabled-day');\n        for (var col = 0; col < this.colCnt; col++) {\n            this.publiclyTrigger('dayRender', [\n                {\n                    date: dateEnv.toDate(cells[col].date),\n                    el: this.colEls[col],\n                    view: view\n                }\n            ]);\n        }\n        if (this.isRtl) {\n            this.colEls.reverse();\n        }\n        this.colPositions = new PositionCache(this.el, this.colEls, true, // horizontal\n        false);\n        this.renderContentSkeleton();\n        this.isColSizesDirty = true;\n    };\n    TimeGrid.prototype._unrenderColumns = function () {\n        this.unrenderContentSkeleton();\n    };\n    /* Content Skeleton\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Renders the DOM that the view's content will live in\n    TimeGrid.prototype.renderContentSkeleton = function () {\n        var parts = [];\n        var skeletonEl;\n        parts.push(this.renderProps.renderIntroHtml());\n        for (var i = 0; i < this.colCnt; i++) {\n            parts.push('<td>' +\n                '<div class=\"fc-content-col\">' +\n                '<div class=\"fc-event-container fc-mirror-container\"></div>' +\n                '<div class=\"fc-event-container\"></div>' +\n                '<div class=\"fc-highlight-container\"></div>' +\n                '<div class=\"fc-bgevent-container\"></div>' +\n                '<div class=\"fc-business-container\"></div>' +\n                '</div>' +\n                '</td>');\n        }\n        if (this.isRtl) {\n            parts.reverse();\n        }\n        skeletonEl = this.contentSkeletonEl = htmlToElement('<div class=\"fc-content-skeleton\">' +\n            '<table>' +\n            '<tr>' + parts.join('') + '</tr>' +\n            '</table>' +\n            '</div>');\n        this.colContainerEls = findElements(skeletonEl, '.fc-content-col');\n        this.mirrorContainerEls = findElements(skeletonEl, '.fc-mirror-container');\n        this.fgContainerEls = findElements(skeletonEl, '.fc-event-container:not(.fc-mirror-container)');\n        this.bgContainerEls = findElements(skeletonEl, '.fc-bgevent-container');\n        this.highlightContainerEls = findElements(skeletonEl, '.fc-highlight-container');\n        this.businessContainerEls = findElements(skeletonEl, '.fc-business-container');\n        if (this.isRtl) {\n            this.colContainerEls.reverse();\n            this.mirrorContainerEls.reverse();\n            this.fgContainerEls.reverse();\n            this.bgContainerEls.reverse();\n            this.highlightContainerEls.reverse();\n            this.businessContainerEls.reverse();\n        }\n        this.el.appendChild(skeletonEl);\n    };\n    TimeGrid.prototype.unrenderContentSkeleton = function () {\n        removeElement(this.contentSkeletonEl);\n    };\n    // Given a flat array of segments, return an array of sub-arrays, grouped by each segment's col\n    TimeGrid.prototype.groupSegsByCol = function (segs) {\n        var segsByCol = [];\n        var i;\n        for (i = 0; i < this.colCnt; i++) {\n            segsByCol.push([]);\n        }\n        for (i = 0; i < segs.length; i++) {\n            segsByCol[segs[i].col].push(segs[i]);\n        }\n        return segsByCol;\n    };\n    // Given segments grouped by column, insert the segments' elements into a parallel array of container\n    // elements, each living within a column.\n    TimeGrid.prototype.attachSegsByCol = function (segsByCol, containerEls) {\n        var col;\n        var segs;\n        var i;\n        for (col = 0; col < this.colCnt; col++) { // iterate each column grouping\n            segs = segsByCol[col];\n            for (i = 0; i < segs.length; i++) {\n                containerEls[col].appendChild(segs[i].el);\n            }\n        }\n    };\n    /* Now Indicator\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeGrid.prototype.getNowIndicatorUnit = function () {\n        return 'minute'; // will refresh on the minute\n    };\n    TimeGrid.prototype.renderNowIndicator = function (segs, date) {\n        // HACK: if date columns not ready for some reason (scheduler)\n        if (!this.colContainerEls) {\n            return;\n        }\n        var top = this.computeDateTop(date);\n        var nodes = [];\n        var i;\n        // render lines within the columns\n        for (i = 0; i < segs.length; i++) {\n            var lineEl = createElement('div', { className: 'fc-now-indicator fc-now-indicator-line' });\n            lineEl.style.top = top + 'px';\n            this.colContainerEls[segs[i].col].appendChild(lineEl);\n            nodes.push(lineEl);\n        }\n        // render an arrow over the axis\n        if (segs.length > 0) { // is the current time in view?\n            var arrowEl = createElement('div', { className: 'fc-now-indicator fc-now-indicator-arrow' });\n            arrowEl.style.top = top + 'px';\n            this.contentSkeletonEl.appendChild(arrowEl);\n            nodes.push(arrowEl);\n        }\n        this.nowIndicatorEls = nodes;\n    };\n    TimeGrid.prototype.unrenderNowIndicator = function () {\n        if (this.nowIndicatorEls) {\n            this.nowIndicatorEls.forEach(removeElement);\n            this.nowIndicatorEls = null;\n        }\n    };\n    /* Coordinates\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeGrid.prototype.getTotalSlatHeight = function () {\n        return this.slatContainerEl.getBoundingClientRect().height;\n    };\n    // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n    TimeGrid.prototype.computeDateTop = function (when, startOfDayDate) {\n        if (!startOfDayDate) {\n            startOfDayDate = startOfDay(when);\n        }\n        return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n    };\n    // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n    TimeGrid.prototype.computeTimeTop = function (duration) {\n        var len = this.slatEls.length;\n        var dateProfile = this.props.dateProfile;\n        var slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.minTime)) / asRoughMs(this.slotDuration); // floating-point value of # of slots covered\n        var slatIndex;\n        var slatRemainder;\n        // compute a floating-point number for how many slats should be progressed through.\n        // from 0 to number of slats (inclusive)\n        // constrained because minTime/maxTime might be customized.\n        slatCoverage = Math.max(0, slatCoverage);\n        slatCoverage = Math.min(len, slatCoverage);\n        // an integer index of the furthest whole slat\n        // from 0 to number slats (*exclusive*, so len-1)\n        slatIndex = Math.floor(slatCoverage);\n        slatIndex = Math.min(slatIndex, len - 1);\n        // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n        // could be 1.0 if slatCoverage is covering *all* the slots\n        slatRemainder = slatCoverage - slatIndex;\n        return this.slatPositions.tops[slatIndex] +\n            this.slatPositions.getHeight(slatIndex) * slatRemainder;\n    };\n    // For each segment in an array, computes and assigns its top and bottom properties\n    TimeGrid.prototype.computeSegVerticals = function (segs) {\n        var eventMinHeight = this.opt('timeGridEventMinHeight');\n        var i;\n        var seg;\n        var dayDate;\n        for (i = 0; i < segs.length; i++) {\n            seg = segs[i];\n            dayDate = this.props.cells[seg.col].date;\n            seg.top = this.computeDateTop(seg.start, dayDate);\n            seg.bottom = Math.max(seg.top + eventMinHeight, this.computeDateTop(seg.end, dayDate));\n        }\n    };\n    // Given segments that already have their top/bottom properties computed, applies those values to\n    // the segments' elements.\n    TimeGrid.prototype.assignSegVerticals = function (segs) {\n        var i;\n        var seg;\n        for (i = 0; i < segs.length; i++) {\n            seg = segs[i];\n            applyStyle(seg.el, this.generateSegVerticalCss(seg));\n        }\n    };\n    // Generates an object with CSS properties for the top/bottom coordinates of a segment element\n    TimeGrid.prototype.generateSegVerticalCss = function (seg) {\n        return {\n            top: seg.top,\n            bottom: -seg.bottom // flipped because needs to be space beyond bottom edge of event container\n        };\n    };\n    /* Sizing\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeGrid.prototype.buildPositionCaches = function () {\n        this.buildColPositions();\n        this.buildSlatPositions();\n    };\n    TimeGrid.prototype.buildColPositions = function () {\n        this.colPositions.build();\n    };\n    TimeGrid.prototype.buildSlatPositions = function () {\n        this.slatPositions.build();\n    };\n    /* Hit System\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeGrid.prototype.positionToHit = function (positionLeft, positionTop) {\n        var _a = this, dateEnv = _a.dateEnv, snapsPerSlot = _a.snapsPerSlot, slatPositions = _a.slatPositions, colPositions = _a.colPositions;\n        var colIndex = colPositions.leftToIndex(positionLeft);\n        var slatIndex = slatPositions.topToIndex(positionTop);\n        if (colIndex != null && slatIndex != null) {\n            var slatTop = slatPositions.tops[slatIndex];\n            var slatHeight = slatPositions.getHeight(slatIndex);\n            var partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n            var localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n            var snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n            var dayDate = this.props.cells[colIndex].date;\n            var time = addDurations(this.props.dateProfile.minTime, multiplyDuration(this.snapDuration, snapIndex));\n            var start = dateEnv.add(dayDate, time);\n            var end = dateEnv.add(start, this.snapDuration);\n            return {\n                col: colIndex,\n                dateSpan: {\n                    range: { start: start, end: end },\n                    allDay: false\n                },\n                dayEl: this.colEls[colIndex],\n                relativeRect: {\n                    left: colPositions.lefts[colIndex],\n                    right: colPositions.rights[colIndex],\n                    top: slatTop,\n                    bottom: slatTop + slatHeight\n                }\n            };\n        }\n    };\n    /* Event Drag Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeGrid.prototype._renderEventDrag = function (state) {\n        if (state) {\n            this.eventRenderer.hideByHash(state.affectedInstances);\n            if (state.isEvent) {\n                this.mirrorRenderer.renderSegs(state.segs, { isDragging: true, sourceSeg: state.sourceSeg });\n            }\n            else {\n                this.fillRenderer.renderSegs('highlight', state.segs);\n            }\n        }\n    };\n    TimeGrid.prototype._unrenderEventDrag = function (state) {\n        if (state) {\n            this.eventRenderer.showByHash(state.affectedInstances);\n            this.mirrorRenderer.unrender(state.segs, { isDragging: true, sourceSeg: state.sourceSeg });\n            this.fillRenderer.unrender('highlight');\n        }\n    };\n    /* Event Resize Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeGrid.prototype._renderEventResize = function (state) {\n        if (state) {\n            this.eventRenderer.hideByHash(state.affectedInstances);\n            this.mirrorRenderer.renderSegs(state.segs, { isResizing: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    TimeGrid.prototype._unrenderEventResize = function (state) {\n        if (state) {\n            this.eventRenderer.showByHash(state.affectedInstances);\n            this.mirrorRenderer.unrender(state.segs, { isResizing: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    /* Selection\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Renders a visual indication of a selection. Overrides the default, which was to simply render a highlight.\n    TimeGrid.prototype._renderDateSelection = function (segs) {\n        if (segs) {\n            if (this.opt('selectMirror')) {\n                this.mirrorRenderer.renderSegs(segs, { isSelecting: true });\n            }\n            else {\n                this.fillRenderer.renderSegs('highlight', segs);\n            }\n        }\n    };\n    TimeGrid.prototype._unrenderDateSelection = function (segs) {\n        this.mirrorRenderer.unrender(segs, { isSelecting: true });\n        this.fillRenderer.unrender('highlight');\n    };\n    return TimeGrid;\n}(DateComponent));\n\nvar AllDaySplitter = /** @class */ (function (_super) {\n    __extends(AllDaySplitter, _super);\n    function AllDaySplitter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AllDaySplitter.prototype.getKeyInfo = function () {\n        return {\n            allDay: {},\n            timed: {}\n        };\n    };\n    AllDaySplitter.prototype.getKeysForDateSpan = function (dateSpan) {\n        if (dateSpan.allDay) {\n            return ['allDay'];\n        }\n        else {\n            return ['timed'];\n        }\n    };\n    AllDaySplitter.prototype.getKeysForEventDef = function (eventDef) {\n        if (!eventDef.allDay) {\n            return ['timed'];\n        }\n        else if (hasBgRendering(eventDef)) {\n            return ['timed', 'allDay'];\n        }\n        else {\n            return ['allDay'];\n        }\n    };\n    return AllDaySplitter;\n}(Splitter));\n\nvar TIMEGRID_ALL_DAY_EVENT_LIMIT = 5;\nvar WEEK_HEADER_FORMAT = createFormatter({ week: 'short' });\n/* An abstract class for all timegrid-related views. Displays one more columns with time slots running vertically.\n----------------------------------------------------------------------------------------------------------------------*/\n// Is a manager for the TimeGrid subcomponent and possibly the DayGrid subcomponent (if allDaySlot is on).\n// Responsible for managing width/height.\nvar TimeGridView = /** @class */ (function (_super) {\n    __extends(TimeGridView, _super);\n    function TimeGridView(context, viewSpec, dateProfileGenerator, parentEl) {\n        var _this = _super.call(this, context, viewSpec, dateProfileGenerator, parentEl) || this;\n        _this.splitter = new AllDaySplitter();\n        /* Header Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        // Generates the HTML that will go before the day-of week header cells\n        _this.renderHeadIntroHtml = function () {\n            var _a = _this, theme = _a.theme, dateEnv = _a.dateEnv;\n            var range = _this.props.dateProfile.renderRange;\n            var dayCnt = diffDays(range.start, range.end);\n            var weekText;\n            if (_this.opt('weekNumbers')) {\n                weekText = dateEnv.format(range.start, WEEK_HEADER_FORMAT);\n                return '' +\n                    '<th class=\"fc-axis fc-week-number ' + theme.getClass('widgetHeader') + '\" ' + _this.axisStyleAttr() + '>' +\n                    buildGotoAnchorHtml(// aside from link, important for matchCellWidths\n                    _this, { date: range.start, type: 'week', forceOff: dayCnt > 1 }, htmlEscape(weekText) // inner HTML\n                    ) +\n                    '</th>';\n            }\n            else {\n                return '<th class=\"fc-axis ' + theme.getClass('widgetHeader') + '\" ' + _this.axisStyleAttr() + '></th>';\n            }\n        };\n        /* Time Grid Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        // Generates the HTML that goes before the bg of the TimeGrid slot area. Long vertical column.\n        _this.renderTimeGridBgIntroHtml = function () {\n            var theme = _this.theme;\n            return '<td class=\"fc-axis ' + theme.getClass('widgetContent') + '\" ' + _this.axisStyleAttr() + '></td>';\n        };\n        // Generates the HTML that goes before all other types of cells.\n        // Affects content-skeleton, mirror-skeleton, highlight-skeleton for both the time-grid and day-grid.\n        _this.renderTimeGridIntroHtml = function () {\n            return '<td class=\"fc-axis\" ' + _this.axisStyleAttr() + '></td>';\n        };\n        /* Day Grid Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        // Generates the HTML that goes before the all-day cells\n        _this.renderDayGridBgIntroHtml = function () {\n            var theme = _this.theme;\n            return '' +\n                '<td class=\"fc-axis ' + theme.getClass('widgetContent') + '\" ' + _this.axisStyleAttr() + '>' +\n                '<span>' + // needed for matchCellWidths\n                getAllDayHtml(_this) +\n                '</span>' +\n                '</td>';\n        };\n        // Generates the HTML that goes before all other types of cells.\n        // Affects content-skeleton, mirror-skeleton, highlight-skeleton for both the time-grid and day-grid.\n        _this.renderDayGridIntroHtml = function () {\n            return '<td class=\"fc-axis\" ' + _this.axisStyleAttr() + '></td>';\n        };\n        _this.el.classList.add('fc-timeGrid-view');\n        _this.el.innerHTML = _this.renderSkeletonHtml();\n        _this.scroller = new ScrollComponent('hidden', // overflow x\n        'auto' // overflow y\n        );\n        var timeGridWrapEl = _this.scroller.el;\n        _this.el.querySelector('.fc-body > tr > td').appendChild(timeGridWrapEl);\n        timeGridWrapEl.classList.add('fc-time-grid-container');\n        var timeGridEl = createElement('div', { className: 'fc-time-grid' });\n        timeGridWrapEl.appendChild(timeGridEl);\n        _this.timeGrid = new TimeGrid(_this.context, timeGridEl, {\n            renderBgIntroHtml: _this.renderTimeGridBgIntroHtml,\n            renderIntroHtml: _this.renderTimeGridIntroHtml\n        });\n        if (_this.opt('allDaySlot')) { // should we display the \"all-day\" area?\n            _this.dayGrid = new DayGrid(// the all-day subcomponent of this view\n            _this.context, _this.el.querySelector('.fc-day-grid'), {\n                renderNumberIntroHtml: _this.renderDayGridIntroHtml,\n                renderBgIntroHtml: _this.renderDayGridBgIntroHtml,\n                renderIntroHtml: _this.renderDayGridIntroHtml,\n                colWeekNumbersVisible: false,\n                cellWeekNumbersVisible: false\n            });\n            // have the day-grid extend it's coordinate area over the <hr> dividing the two grids\n            var dividerEl = _this.el.querySelector('.fc-divider');\n            _this.dayGrid.bottomCoordPadding = dividerEl.getBoundingClientRect().height;\n        }\n        return _this;\n    }\n    TimeGridView.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.timeGrid.destroy();\n        if (this.dayGrid) {\n            this.dayGrid.destroy();\n        }\n        this.scroller.destroy();\n    };\n    /* Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Builds the HTML skeleton for the view.\n    // The day-grid and time-grid components will render inside containers defined by this HTML.\n    TimeGridView.prototype.renderSkeletonHtml = function () {\n        var theme = this.theme;\n        return '' +\n            '<table class=\"' + theme.getClass('tableGrid') + '\">' +\n            (this.opt('columnHeader') ?\n                '<thead class=\"fc-head\">' +\n                    '<tr>' +\n                    '<td class=\"fc-head-container ' + theme.getClass('widgetHeader') + '\">&nbsp;</td>' +\n                    '</tr>' +\n                    '</thead>' :\n                '') +\n            '<tbody class=\"fc-body\">' +\n            '<tr>' +\n            '<td class=\"' + theme.getClass('widgetContent') + '\">' +\n            (this.opt('allDaySlot') ?\n                '<div class=\"fc-day-grid\"></div>' +\n                    '<hr class=\"fc-divider ' + theme.getClass('widgetHeader') + '\" />' :\n                '') +\n            '</td>' +\n            '</tr>' +\n            '</tbody>' +\n            '</table>';\n    };\n    /* Now Indicator\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeGridView.prototype.getNowIndicatorUnit = function () {\n        return this.timeGrid.getNowIndicatorUnit();\n    };\n    // subclasses should implement\n    // renderNowIndicator(date: DateMarker) {\n    // }\n    TimeGridView.prototype.unrenderNowIndicator = function () {\n        this.timeGrid.unrenderNowIndicator();\n    };\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeGridView.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n        _super.prototype.updateSize.call(this, isResize, viewHeight, isAuto); // will call updateBaseSize. important that executes first\n        this.timeGrid.updateSize(isResize);\n        if (this.dayGrid) {\n            this.dayGrid.updateSize(isResize);\n        }\n    };\n    // Adjusts the vertical dimensions of the view to the specified values\n    TimeGridView.prototype.updateBaseSize = function (isResize, viewHeight, isAuto) {\n        var _this = this;\n        var eventLimit;\n        var scrollerHeight;\n        var scrollbarWidths;\n        // make all axis cells line up\n        this.axisWidth = matchCellWidths(findElements(this.el, '.fc-axis'));\n        // hack to give the view some height prior to timeGrid's columns being rendered\n        // TODO: separate setting height from scroller VS timeGrid.\n        if (!this.timeGrid.colEls) {\n            if (!isAuto) {\n                scrollerHeight = this.computeScrollerHeight(viewHeight);\n                this.scroller.setHeight(scrollerHeight);\n            }\n            return;\n        }\n        // set of fake row elements that must compensate when scroller has scrollbars\n        var noScrollRowEls = findElements(this.el, '.fc-row').filter(function (node) {\n            return !_this.scroller.el.contains(node);\n        });\n        // reset all dimensions back to the original state\n        this.timeGrid.bottomRuleEl.style.display = 'none'; // will be shown later if this <hr> is necessary\n        this.scroller.clear(); // sets height to 'auto' and clears overflow\n        noScrollRowEls.forEach(uncompensateScroll);\n        // limit number of events in the all-day area\n        if (this.dayGrid) {\n            this.dayGrid.removeSegPopover(); // kill the \"more\" popover if displayed\n            eventLimit = this.opt('eventLimit');\n            if (eventLimit && typeof eventLimit !== 'number') {\n                eventLimit = TIMEGRID_ALL_DAY_EVENT_LIMIT; // make sure \"auto\" goes to a real number\n            }\n            if (eventLimit) {\n                this.dayGrid.limitRows(eventLimit);\n            }\n        }\n        if (!isAuto) { // should we force dimensions of the scroll container?\n            scrollerHeight = this.computeScrollerHeight(viewHeight);\n            this.scroller.setHeight(scrollerHeight);\n            scrollbarWidths = this.scroller.getScrollbarWidths();\n            if (scrollbarWidths.left || scrollbarWidths.right) { // using scrollbars?\n                // make the all-day and header rows lines up\n                noScrollRowEls.forEach(function (rowEl) {\n                    compensateScroll(rowEl, scrollbarWidths);\n                });\n                // the scrollbar compensation might have changed text flow, which might affect height, so recalculate\n                // and reapply the desired height to the scroller.\n                scrollerHeight = this.computeScrollerHeight(viewHeight);\n                this.scroller.setHeight(scrollerHeight);\n            }\n            // guarantees the same scrollbar widths\n            this.scroller.lockOverflow(scrollbarWidths);\n            // if there's any space below the slats, show the horizontal rule.\n            // this won't cause any new overflow, because lockOverflow already called.\n            if (this.timeGrid.getTotalSlatHeight() < scrollerHeight) {\n                this.timeGrid.bottomRuleEl.style.display = '';\n            }\n        }\n    };\n    // given a desired total height of the view, returns what the height of the scroller should be\n    TimeGridView.prototype.computeScrollerHeight = function (viewHeight) {\n        return viewHeight -\n            subtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\n    };\n    /* Scroll\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Computes the initial pre-configured scroll state prior to allowing the user to change it\n    TimeGridView.prototype.computeDateScroll = function (duration) {\n        var top = this.timeGrid.computeTimeTop(duration);\n        // zoom can give weird floating-point values. rather scroll a little bit further\n        top = Math.ceil(top);\n        if (top) {\n            top++; // to overcome top border that slots beyond the first have. looks better\n        }\n        return { top: top };\n    };\n    TimeGridView.prototype.queryDateScroll = function () {\n        return { top: this.scroller.getScrollTop() };\n    };\n    TimeGridView.prototype.applyDateScroll = function (scroll) {\n        if (scroll.top !== undefined) {\n            this.scroller.setScrollTop(scroll.top);\n        }\n    };\n    // Generates an HTML attribute string for setting the width of the axis, if it is known\n    TimeGridView.prototype.axisStyleAttr = function () {\n        if (this.axisWidth != null) {\n            return 'style=\"width:' + this.axisWidth + 'px\"';\n        }\n        return '';\n    };\n    return TimeGridView;\n}(View));\nTimeGridView.prototype.usesMinMaxTime = true; // indicates that minTime/maxTime affects rendering\n\nvar SimpleTimeGrid = /** @class */ (function (_super) {\n    __extends(SimpleTimeGrid, _super);\n    function SimpleTimeGrid(context, timeGrid) {\n        var _this = _super.call(this, context, timeGrid.el) || this;\n        _this.buildDayRanges = memoize(buildDayRanges);\n        _this.slicer = new TimeGridSlicer();\n        _this.timeGrid = timeGrid;\n        context.calendar.registerInteractiveComponent(_this, {\n            el: _this.timeGrid.el\n        });\n        return _this;\n    }\n    SimpleTimeGrid.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.calendar.unregisterInteractiveComponent(this);\n    };\n    SimpleTimeGrid.prototype.render = function (props) {\n        var dateProfile = props.dateProfile, dayTable = props.dayTable;\n        var dayRanges = this.dayRanges = this.buildDayRanges(dayTable, dateProfile, this.dateEnv);\n        this.timeGrid.receiveProps(__assign({}, this.slicer.sliceProps(props, dateProfile, null, this.timeGrid, dayRanges), { dateProfile: dateProfile, cells: dayTable.cells[0] }));\n    };\n    SimpleTimeGrid.prototype.renderNowIndicator = function (date) {\n        this.timeGrid.renderNowIndicator(this.slicer.sliceNowDate(date, this.timeGrid, this.dayRanges), date);\n    };\n    SimpleTimeGrid.prototype.buildPositionCaches = function () {\n        this.timeGrid.buildPositionCaches();\n    };\n    SimpleTimeGrid.prototype.queryHit = function (positionLeft, positionTop) {\n        var rawHit = this.timeGrid.positionToHit(positionLeft, positionTop);\n        if (rawHit) {\n            return {\n                component: this.timeGrid,\n                dateSpan: rawHit.dateSpan,\n                dayEl: rawHit.dayEl,\n                rect: {\n                    left: rawHit.relativeRect.left,\n                    right: rawHit.relativeRect.right,\n                    top: rawHit.relativeRect.top,\n                    bottom: rawHit.relativeRect.bottom\n                },\n                layer: 0\n            };\n        }\n    };\n    return SimpleTimeGrid;\n}(DateComponent));\nfunction buildDayRanges(dayTable, dateProfile, dateEnv) {\n    var ranges = [];\n    for (var _i = 0, _a = dayTable.headerDates; _i < _a.length; _i++) {\n        var date = _a[_i];\n        ranges.push({\n            start: dateEnv.add(date, dateProfile.minTime),\n            end: dateEnv.add(date, dateProfile.maxTime)\n        });\n    }\n    return ranges;\n}\nvar TimeGridSlicer = /** @class */ (function (_super) {\n    __extends(TimeGridSlicer, _super);\n    function TimeGridSlicer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TimeGridSlicer.prototype.sliceRange = function (range, dayRanges) {\n        var segs = [];\n        for (var col = 0; col < dayRanges.length; col++) {\n            var segRange = intersectRanges(range, dayRanges[col]);\n            if (segRange) {\n                segs.push({\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: segRange.end.valueOf() === range.end.valueOf(),\n                    col: col\n                });\n            }\n        }\n        return segs;\n    };\n    return TimeGridSlicer;\n}(Slicer));\n\nvar TimeGridView$1 = /** @class */ (function (_super) {\n    __extends(TimeGridView, _super);\n    function TimeGridView(_context, viewSpec, dateProfileGenerator, parentEl) {\n        var _this = _super.call(this, _context, viewSpec, dateProfileGenerator, parentEl) || this;\n        _this.buildDayTable = memoize(buildDayTable);\n        if (_this.opt('columnHeader')) {\n            _this.header = new DayHeader(_this.context, _this.el.querySelector('.fc-head-container'));\n        }\n        _this.simpleTimeGrid = new SimpleTimeGrid(_this.context, _this.timeGrid);\n        if (_this.dayGrid) {\n            _this.simpleDayGrid = new SimpleDayGrid(_this.context, _this.dayGrid);\n        }\n        return _this;\n    }\n    TimeGridView.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.header) {\n            this.header.destroy();\n        }\n        this.simpleTimeGrid.destroy();\n        if (this.simpleDayGrid) {\n            this.simpleDayGrid.destroy();\n        }\n    };\n    TimeGridView.prototype.render = function (props) {\n        _super.prototype.render.call(this, props); // for flags for updateSize\n        var dateProfile = this.props.dateProfile;\n        var dayTable = this.buildDayTable(dateProfile, this.dateProfileGenerator);\n        var splitProps = this.splitter.splitProps(props);\n        if (this.header) {\n            this.header.receiveProps({\n                dateProfile: dateProfile,\n                dates: dayTable.headerDates,\n                datesRepDistinctDays: true,\n                renderIntroHtml: this.renderHeadIntroHtml\n            });\n        }\n        this.simpleTimeGrid.receiveProps(__assign({}, splitProps['timed'], { dateProfile: dateProfile,\n            dayTable: dayTable }));\n        if (this.simpleDayGrid) {\n            this.simpleDayGrid.receiveProps(__assign({}, splitProps['allDay'], { dateProfile: dateProfile,\n                dayTable: dayTable, nextDayThreshold: this.nextDayThreshold, isRigid: false }));\n        }\n    };\n    TimeGridView.prototype.renderNowIndicator = function (date) {\n        this.simpleTimeGrid.renderNowIndicator(date);\n    };\n    return TimeGridView;\n}(TimeGridView));\nfunction buildDayTable(dateProfile, dateProfileGenerator) {\n    var daySeries = new DaySeries(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTable(daySeries, false);\n}\n\nvar main = createPlugin({\n    defaultView: 'timeGridWeek',\n    views: {\n        timeGrid: {\n            class: TimeGridView$1,\n            allDaySlot: true,\n            slotDuration: '00:30:00',\n            slotEventOverlap: true // a bad name. confused with overlap/constraint system\n        },\n        timeGridDay: {\n            type: 'timeGrid',\n            duration: { days: 1 }\n        },\n        timeGridWeek: {\n            type: 'timeGrid',\n            duration: { weeks: 1 }\n        }\n    }\n});\n\nexport default main;\nexport { TimeGridView as AbstractTimeGridView, TimeGrid, TimeGridSlicer, TimeGridView$1 as TimeGridView, buildDayRanges, buildDayTable };\n","export default \"<!-- <div class=\\\"main-card\\\">\\n    <h1>Manage Calender</h1>\\n    <p>It will set up in further milestone.</p>\\n</div> -->\\n<div id=\\\"calendar\\\">\\n\\n<full-calendar #calendar defaultView=\\\"dayGridMonth\\\" \\n      [header]=\\\"{\\n        left: 'prev,next today',\\n        center: 'title',\\n        right: 'dayGridMonth,timeGridWeek,listweek,timeGridDay'\\n      }\\\" \\n      [buttonText]=\\\"{\\n          today: 'Today',\\n          month: 'Month',\\n          week: 'Week',\\n          list:'List',\\n          day: 'Day'\\n      }\\\" \\n      eventLimit=\\\"true\\\"\\n      [plugins]=\\\"calendarPlugins\\\" \\n      [events]=\\\"calendarEvents\\\"\\n      (dateClick)=\\\"handleDateClick($event)\\\" \\n      (eventClick)=\\\"eventClicked($event)\\\" \\n      (datesRender)=\\\"handleDatesRender($event)\\\"\\n      (eventRender)=\\\"eventRender($event)\\\"\\n      deepChangeDetection=\\\"true\\\"></full-calendar>\\n    </div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagecalenderComponent } from './managecalender.component';\n\n\nconst routes: Routes = [{path:'', component: ManagecalenderComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManagecalenderRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvbWFuYWdlLWNhbGVuZGVyL21hbmFnZWNhbGVuZGVyL21hbmFnZWNhbGVuZGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, ChangeDetectionStrategy, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGrigPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport moment from 'moment-timezone';\n\nimport { EventInput } from '@fullcalendar/core';\nimport { Router } from '@angular/router';\nimport { Helper } from 'src/app/shared/service/helper.service';\nimport { FullCalendarComponent } from '@fullcalendar/angular';\nimport { HttpRequestService } from 'src/app/shared/service/http-request.service';\n\n@Component({\n  selector: 'app-managecalender',\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './managecalender.component.html',\n  styleUrls: ['./managecalender.component.scss']\n})\nexport class ManagecalenderComponent implements OnInit {\n  calendarPlugins = [dayGridPlugin, timeGrigPlugin, interactionPlugin]; // important!\n  @ViewChild('calendar', { static: true }) calendarComponent: FullCalendarComponent;\n  calendarEvents: any = [\n    // { title: 'Event Now Event Now Event Now', start: new Date('Mon Feb 03 2020 00:00:00 GMT+0530 (India Standard Time)') },\n    // { title: 'Event Now', start: new Date('Mon Feb 03 2020 00:00:00 GMT+0530 (India Standard Time)') },{ title: 'Event Now', start: new Date('Mon Feb 15 2020 00:00:00 GMT+0530 (India Standard Time)') },{ title: 'Event Now', start: new Date() },\n    // { title: 'Event Now', start: new Date('Mon Feb 06 2020 00:00:00 GMT+0530 (India Standard Time)') },{ title: 'Event Now', start: new Date() },{ title: 'Event Now', start: new Date() },\n    // { title: 'Event Now', start: new Date('Mon Feb 11 2020 00:00:00 GMT+0530 (India Standard Time)') },{ title: 'Event Now', start: new Date() },{ title: 'Event Now', start: new Date() },{ title: 'Event Now', start: new Date() },{ title: 'Event Now', start: new Date() },{ title: 'Event Now', start: new Date() },{ title: 'Event Now', start: new Date() },\n  ];\n  currentDate: Date;\n\n  constructor(private http: HttpClient, private route: Router, private httpService: HttpRequestService, private helper: Helper) { }\n\n  ngOnInit(): void {\n  }\n\n  getList(month, year) {\n    // ?month=${month}&year=${year}\n\n    this.httpService.getRequest('GET', 'BOOKING', `month=${month}&year=${year}`).subscribe(rs => {\n      if (rs.res) {\n        let bkngs = rs.res.bkngs;\n        bkngs.forEach(element => {\n          this.calendarEvents.push({\n            title: element.service, start: new Date(element.bookDateTime), id:element._id\n            //  url: `booking/info/${element._id}`\n          })\n        });\n      } else {\n\n      }\n    }, (err) => {\n\n    })\n  }\n\n  handleDateClick(calDate) {\n    this.route.navigateByUrl('manage-calender/list/' + this.helper.parseDate(calDate.date));\n  }\n\n  eventClicked(calDate) {\n    let path = calDate.event.id;\n    this.route.navigate(['/booking/info', path]);\n  }\n\n  handleDatesRender($event) {\n    this.currentDate = this.calendarComponent.getApi().getDate();\n    this.calendarEvents = [];\n    this.getList(new Date(this.currentDate).getMonth(), new Date(this.currentDate).getFullYear());\n  }\n  eventRender(e) {\n    let { view, event, el } = e;\n    el.querySelectorAll(\".fc-content\")[0].setAttribute(\"data-tooltip\", event.title);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManagecalenderRoutingModule } from './managecalender-routing.module';\nimport { ManagecalenderComponent } from './managecalender.component';\nimport { FullCalendarModule } from '@fullcalendar/angular';\n\n\n@NgModule({\n  declarations: [ManagecalenderComponent],\n  imports: [\n    CommonModule,\n    ManagecalenderRoutingModule,\n    FullCalendarModule\n  ]\n})\nexport class ManagecalenderModule { }\n"],"sourceRoot":"webpack:///","file":"10-es5.js"}