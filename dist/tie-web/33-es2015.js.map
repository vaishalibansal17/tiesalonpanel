{"version":3,"sources":["./src/app/home/feedback/feedback.component.html","./src/app/home/feedback/feedback-routing.module.ts","./src/app/home/feedback/feedback.component.scss","./src/app/home/feedback/feedback.component.ts","./src/app/home/feedback/feedback.module.ts"],"names":[],"mappings":"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","file":"33-es2015.js","sourcesContent":["export default \"<div class=\\\"main-card\\\">\\n    <div class=\\\"custom_form\\\">\\n        <form [formGroup]='feedback' (ngSubmit)='feedbackSubmit()'>\\n            <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/email.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'EMAIL'| translate | titlecase}}\\\" class=\\\"form-control\\\"\\n                    formControlName=\\\"email\\\" maxlength=\\\"100\\\" readonly>\\n            </mat-form-field>\\n            <div *ngIf=\\\"(submitted || getControl.email.dirty|| getControl.email.touched) && getControl.email.errors\\\">\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.email.errors.required\\\">{{'LOGINEMAIL'| translate}}</p>\\n                <p class=\\\"color error\\\"\\n                    *ngIf=\\\"!getControl.email.errors.required && getControl.email.errors.invalidEmailAddress\\\">\\n                    {{'LOGINVALIDEMAIL'| translate}}</p>\\n            </div>\\n            <!-- <mat-form-field>\\n                <span class=\\\"email-img phone\\\"><img src=\\\"assets/images/mobile.png\\\" alt=\\\"envelope\\\"></span>\\n                <input matInput placeholder=\\\"{{'PHONE'| translate | titlecase}}\\\"\\n                    onkeypress='return event.charCode >= 48 && event.charCode <= 57' class=\\\"form-control\\\"\\n                    formControlName=\\\"phone\\\" maxlength=\\\"12\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"(submitted || getControl.phone.dirty|| getControl.phone.touched) && getControl.phone.errors\\\">\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.phone.errors.required\\\">{{'PHNREQ'|translate}}</p>\\n                <p class=\\\"color error\\\" *ngIf=\\\"!getControl.phone.errors.required && getControl.phone.errors.Invalidphone \\\">{{'PHNLNGTH'|translate}}</p>\\n            </div> -->\\n            <mat-form-field>\\n                <span class=\\\"email-img pass\\\"><img src=\\\"assets/images/description.png\\\" alt=\\\"envelope\\\"></span>\\n                <textarea matInput placeholder=\\\"{{'DESCRIPTION'| translate}}\\\" class=\\\"form-control\\\"\\n                    formControlName=\\\"description\\\" maxlength=\\\"500\\\"></textarea>\\n            </mat-form-field>\\n            <div\\n                *ngIf=\\\"(submitted || getControl.description.dirty|| getControl.description.touched) && getControl.description.errors\\\">\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.description.errors.required\\\">{{'DESCREQ' | translate}}</p>\\n                <p class=\\\"color error\\\" *ngIf=\\\"getControl.description.errors.minlength \\\">{{'DESCLNGTH'| translate}}</p>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-submit\\\">Send Feedback</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FeedbackComponent } from './feedback.component';\n\n\nconst routes: Routes = [{path:'', component: FeedbackComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeedbackRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvZmVlZGJhY2svZmVlZGJhY2suY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpRequestService } from 'src/app/shared/service/http-request.service';\nimport { ErrorService } from 'src/app/shared/service/error.service';\nimport { Helper } from 'src/app/shared/service/helper.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ValidationService } from 'src/app/shared/service/validation-service';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.scss']\n})\nexport class FeedbackComponent implements OnInit {\n  feedback: FormGroup;\n  submitted = false;\n\n  constructor(private httpService: HttpRequestService,\n    private errService: ErrorService,\n    private trns: TranslatePipe, private router: Router) { }\n\n  ngOnInit() {\n    let salon = JSON.parse(localStorage.getItem('salon'))\n    this.feedback = new FormGroup({\n      email: new FormControl(salon.email, [\n        Validators.required,\n        ValidationService.validateEmail\n      ]),\n      // phone: new FormControl(null, [\n      //   Validators.required,\n      //   ValidationService.phonevalidator\n      // ]),\n      description: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(500)\n      ])\n    });\n  }\n  get getControl() { return this.feedback.controls; }\n\n  feedbackSubmit() {\n    this.submitted = true;\n    if (this.feedback.valid) {\n      this.feedback.value['msg'] = this.feedback.value.description;\n      this.httpService.getRequest('POST', 'FEEDBCK', this.feedback.value).subscribe((response: any) => {\n\n        if (response.status === 1) {\n          this.router.navigateByUrl('dashboard')\n            .then(() => {\n              this.httpService.sucsTostr(this.trns.transform('SUCCESS'), this.trns.transform('FEEDSUCCESS'));\n            });\n        } else {\n          console.log(response);\n          this.errService.handleError(response.err.errCode)\n        }\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeedbackRoutingModule } from './feedback-routing.module';\nimport { FeedbackComponent } from './feedback.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApplicationpipeModule } from 'src/app/shared/module/applicationpipe/applicationpipe.module';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\n\n\n@NgModule({\n  declarations: [FeedbackComponent],\n  imports: [\n    CommonModule,\n    FeedbackRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    ApplicationpipeModule\n  ],\n  providers:[TranslatePipe]\n})\nexport class FeedbackModule { }\n"],"sourceRoot":"webpack:///"}