{"version":3,"sources":["src/app/home/report/sales/sales.component.html","src/app/home/report/sales/sales-routing.module.ts","src/app/home/report/sales/sales.component.scss","src/app/home/report/sales/sales.component.ts","src/app/home/report/sales/sales.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"main-card\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3 label\\\">Total Sales(YTD):</div>\\n        <div class=\\\"col-md-9 description\\\">$1,061</div>\\n        <div class=\\\"col-md-3 label\\\">Month of January:</div>\\n        <div class=\\\"col-md-9 description\\\">$290</div>\\n        <div class=\\\"col-md-3 label\\\">Current Week:</div>\\n        <div class=\\\"col-md-9 description\\\">$100</div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4 alignright\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"exportCSV()\\\"\\n      class=\\\"btn btn-export\\\">Export</a></div>\\n  </div>\\n  <div class=\\\"sales_description\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">06 January, 2020</div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 label\\\">Projected Sales:</div>\\n          <div class=\\\"col-md-6 description\\\">$1,061</div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 label\\\">Appts Booked:</div>\\n          <div class=\\\"col-md-6 description\\\">08</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"table_wrap mobile_hidden\\\" [hidden]=\\\"(dataSource.loading$ | async)\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8 table_scroll\\\" matSort>\\n      <ng-container matColumnDef=\\\"position\\\">\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let post; let i =index;\\\"> {{(paginator.pageIndex * paginator.pageSize)+i + 1}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Customer Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.name|| 'NA'}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"invoice\\\">\\n        <th mat-header-cell *matHeaderCellDef>Invoice Number</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element?.invoice || 'NA'}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"service\\\">\\n        <th mat-header-cell *matHeaderCellDef>Service</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{(element.service | service) | titlecase}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"serviceat\\\">\\n        <th mat-header-cell *matHeaderCellDef>Service At</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{element.service_at == 1?'Home':element?.service_at==2? 'Salon':'Clinic'}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"date\\\">\\n        <th mat-header-cell *matHeaderCellDef>Date</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.bookDateTime | date : 'dd MMM yyyy h:mm a'}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"amount\\\">\\n        <th mat-header-cell *matHeaderCellDef>Total Amount</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element?.totalAmount || 'NA'}}</td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n    <mat-paginator [length]=\\\"dataSource.totalCount$ | async\\\" [pageSize]=\\\"limitPage[0]\\\" [pageSizeOptions]=\\\"limitPage\\\">\\n    </mat-paginator>\\n    <!-- </div> -->\\n    <div class=\\\"margin_center\\\" *ngIf=\\\" !(dataSource.loading$ | async) && ((dataSource.totalCount$ | async)<=0) \\\">\\n      {{'NO_RCD' | translate}}\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card_view mobile_visible\\\">\\n    <div class=\\\"cards\\\">\\n      <div class=\\\"top_info\\\">\\n        <div class=\\\"right_status\\\">\\n          <ul>\\n            <li>22 Oct, 2019</li>\\n            <!--<li>10:00AM</li>-->\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"description\\\">\\n        <p class=\\\"user\\\"><img src=\\\"assets/images/user-pink.png\\\" alt=\\\"User\\\">Jane Doe</p>\\n        <p class=\\\"service\\\"><img src=\\\"assets/images/commissions.png\\\" alt=\\\"Commissions\\\">#TIE1234</p>\\n        <p class=\\\"service\\\"><img src=\\\"assets/images/service-pink.png\\\" alt=\\\"Service\\\">Haircut, Hair Spa</p>\\n        <p class=\\\"service\\\"><img src=\\\"assets/images/location-pink.png\\\" alt=\\\"Location\\\">Home</p>\\n        <p class=\\\"service\\\"><img src=\\\"assets/images/discount-pink.png\\\" alt=\\\"Discount\\\">$100</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SalesComponent } from './sales.component';\n\n\nconst routes: Routes = [{\n  path: '', component: SalesComponent,\n  children: [\n    { path: 'sales', loadChildren: () => import('./sales.module').then(mod => mod.SalesModule), data: { title: \"Gross Sales\", status: false } },\n  ]\n},\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SalesRoutingModule { }\n","export default \".label {\\n  color: #999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmFpbm1vYmltYWMvQWJoaXNoZWsvYW5ndWxhci90aWUtd2ViL3NyYy9hcHAvaG9tZS9yZXBvcnQvc2FsZXMvc2FsZXMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2hvbWUvcmVwb3J0L3NhbGVzL3NhbGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQU8sV0FBQTtBQ0VQIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9yZXBvcnQvc2FsZXMvc2FsZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGFiZWx7Y29sb3I6ICM5OTk7fSIsIi5sYWJlbCB7XG4gIGNvbG9yOiAjOTk5O1xufSJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ListDataSource } from 'src/app/shared/service/list/list.dataSource';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { ListService } from 'src/app/shared/service/list/list.service';\nimport { HttpRequestService } from 'src/app/shared/service/http-request.service';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\nimport { merge } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Angular5Csv } from 'angular5-csv/dist/Angular5-csv';\nimport { DatePipe } from '@angular/common';\nimport { LIMIT } from 'src/app/shared/constants/constant';\n\n@Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html',\n  styleUrls: ['./sales.component.scss']\n})\nexport class SalesComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'invoice', 'service', 'serviceat', 'date', 'amount'];\n  limitPage = LIMIT;\n  dataSource: ListDataSource;\n  search: string;\n  sortData: any = {};\n  url: any = 'assets/images/change.png';\n  private paginator: MatPaginator;\n  // detail: import(\"/Users/brainmobimac/Abhishek/angular/tie-web/src/app/model/List\").List[];\n  loading: boolean;\n  imgurl: string;\n  totalLength: number;\n  @ViewChild(MatPaginator, { static: true }) set matPaginator(mp: MatPaginator) {\n    this.paginator = mp;\n  };\n\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  @ViewChild('input', { static: true }) input: ElementRef;\n  isApplied = false;\n  salonId: any;\n  constructor( private list: ListService, private httpservice: HttpRequestService, private trns: TranslatePipe, ) { }\n\n\n  ngOnInit() {\n    this.getReport();\n  }\n\n  // ********************** Account Manager List Api Integration with search ******************\n  getReport(): void {\n    this.dataSource = new ListDataSource(this.list);\n    this.loadlist();\n    // this.dataSource.usersData.subscribe((val) => this.detail = val);\n\n    this.dataSource.loadingUsers.subscribe(e => this.loading = !e);\n    this.dataSource.extra$.subscribe(e => this.imgurl = e)\n    this.dataSource.totalCount$.subscribe(e => this.totalLength = e)\n  }\n  ngAfterViewInit() {\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => this.loadlist())\n      )\n      .subscribe();\n\n  }\n\n  loadlist() {\n    if (this.sort.active == 'name') {\n      this.sortData.sortValue = '1'\n    } else if (this.sort.active == 'email') {\n      this.sortData.sortValue = '2'\n    } else {\n      this.sortData.sortValue = '3'\n    }\n    this.sortData.direction = this.sort.direction || null;\n    let listObj = {\n      page: ((this.paginator.pageIndex - 1) + 1),\n      limit: this.paginator.pageSize || this.limitPage[0],\n      sort_val: this.sortData.sortValue,\n      dir: this.sortData.direction == 'asc' ? '1' : '-1'\n    }\n    if (this.search)\n      listObj['srch'] = this.search;\n    this.dataSource.load(listObj, { api: 'REPORT' });\n  }\n  applyFilters(): void {\n    this.loadlist();\n    this.isApplied = true;\n  }\n\n  paginate(){\n    this.paginator.pageSize = this.paginator.pageSize + 1;\n    this.getReport();\n  }\n  // ********************** Account Manager List Api Integration with search End******************\n\n  exportCSV(data: any) {\n    var finalData = [];\n    var obj: any;\n    var i = 0;\n    this.httpservice.getRequest('GET', 'REPORT', `all=true`).subscribe(rs => {\n      let datePipe = new DatePipe('en-US');\n      rs.res.wlkUsr.forEach(element => {\n        obj = {\n          \"Serial\": ++i,\n          \"Name\": element.name? element.name:'NA',\n          \"Services\": element.service?(element.service.map(y => y.title).join(', ')):\"NA\",\n          \"Service at\": element.service_at == 1?'Home':(element.service_at==2? 'Salon':'Clinic'),\n          \"Booking-Id\": element.bookingid?element.bookingid:\"NA\",\n          \"Date\": datePipe.transform(element.bookDateTime, \"dd/MM/yyyy\"),\n          \"Total Amount\": element.totalAmount?element.totalAmount:'NA',\n        };\n        finalData.push(obj);\n      });\n      var options = { noDownload: false, headers: [\"Serial\", \"Name\", 'Services', 'Service at', 'Booking-Id', 'Date'] };\n      new Angular5Csv(finalData, 'gross_sales_report', options);\n      this.httpservice.sucsTostr(this.trns.transform('SUCCESS'), this.trns.transform('EXPORTD'));\n    })\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SalesRoutingModule } from './sales-routing.module';\nimport { SalesComponent } from './sales.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApplicationpipeModule } from 'src/app/shared/module/applicationpipe/applicationpipe.module';\nimport { TranslatePipe } from 'src/app/shared/_pipes/translate.pipe';\n\n\n@NgModule({\n  declarations: [SalesComponent],\n  imports: [\n    CommonModule,\n    SalesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    ApplicationpipeModule\n  ], providers:[TranslatePipe]\n})\nexport class SalesModule { }\n"],"sourceRoot":"webpack:///","file":"39-es5.js"}